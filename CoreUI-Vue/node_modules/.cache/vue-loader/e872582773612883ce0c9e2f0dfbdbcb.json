{"remainingRequest":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hads/Documents/pfe-documentations/CoreUI-Vue/src/views/crud/CreateSensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/src/views/crud/CreateSensor.vue","mtime":1595104863879},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgQ3Jvd2RTZXJ2aWNlcyBmcm9tICdAL3NlcnZpY2VzL0Nyb3dkU2VydmljZXMuanMnCmltcG9ydCBNb2RhbCBmcm9tICdAL2NvbXBvbmVudHMvTW9kYWwnCmltcG9ydCBUYWJsZSBmcm9tICdAL2NvbXBvbmVudHMvVGFibGUnCmltcG9ydCBBY3Rpb25CdXR0b24gZnJvbSAnQC9jb21wb25lbnRzL0FjdGlvbkJ1dHRvbicKaW1wb3J0IGFwaUNsaWVudCBmcm9tICdAL3NlcnZpY2VzL0Nyb3dkU2VydmljZXMuanMnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NyZWF0ZVNlbnNvcicsCiAgY29tcG9uZW50czp7CiAgICBNb2RhbCwKICAgIFRhYmxlLAogICAgQWN0aW9uQnV0dG9uCiAgfSwKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICBuYW1lU2Vuc29yIDogbnVsbCwKICAgICAgbmFtZVpvbmUgOiBudWxsLAogICAgICBzZW5zb3JEZXNjIDogbnVsbCwKICAgICAgdHlwZVNjIDogJycsCiAgICAgIHR5cGVzIDogW3tpZDoxLG5hbWU6J1Njw6huZSBsYXJnZSDDqWNoZWxsZSd9LHtpZDoyLG5hbWU6J1Njw6huZSBtb3llbiDDqWNoZWxsZSd9XSwKICAgICAgaWRNb2RhbDEgOiAnZXhhbXBsZU1vZGFsJywKICAgICAgYm9vbE1vZGFsMSA6IGZhbHNlLAogICAgICBhbGxEQnNlbnNvcnM6IFtdCiAgICB9CiAgfSwKICBtZXRob2RzOnsKCiAgICBvblN1Ym1pdCgpewogICAgICB2YXIgZGF0YSA9IHsnc2Vuc29yX25hbWUnOiB0aGlzLm5hbWVTZW5zb3IsCiAgICAgICAgICAgICAgJ3NlbnNvcl96b25lJzogdGhpcy5uYW1lWm9uZSwKICAgICAgICAgICAgICAnc2Vuc29yX2Rlc2MnOiB0aGlzLnNlbnNvckRlc2MsCiAgICAgICAgICAgICAgJ3NlbnNvcl90eXBlX25hbWUnOiB0aGlzLnR5cGVTYy50ZXh0LAogICAgICAgICAgICAgICdzZW5zb3JfdHlwZV9pZCc6IHRoaXMudHlwZVNjLmlkCiAgICAgIH0KICAgICAgQ3Jvd2RTZXJ2aWNlcy5wb3N0U2Vuc29yRGF0YShkYXRhKQogICAgICB0aGlzLm5hbWVTZW5zb3IgPSBudWxsOwogICAgICB0aGlzLm5hbWVab25lID0gbnVsbDsKICAgICAgdGhpcy5zZW5zb3JEZXNjID0gbnVsbDsKICAgICAgdGhpcy50eXBlU2MgPSAnJzsKICAgICAgdGhpcy5ib29sTW9kYWwxID0gdHJ1ZQogICAgfSwKCiAgICBlZGl0U2Vuc29yKElEKXsKICAgICAgdmFyIG15TW9kYWwgPSBuZXcgY29yZXVpLk1vZGFsKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGFtcGxlTW9kYWwnKSkKICAgICAgbXlNb2RhbC5zaG93KCkKICAgIH0sCgogICAgZGVsZXRlU2Vuc29yKElEKXsKICAgICAgY29uc29sZS5sb2coJ3llc0QgJyxJRCkKICAgIH0KCiAgfSwKICBjcmVhdGVkKCl7CiAgICBDcm93ZFNlcnZpY2VzLmdldFNlbnNvcnMoKQogICAgICAgIC50aGVuKChyZXNwb25zZSk9PnsKICAgICAgICAgIHRoaXMuYWxsREJzZW5zb3JzID0gcmVzcG9uc2UuZGF0YQogICAgICAgICAgY29uc29sZS5sb2codGhpcy5hbGxEQnNlbnNvcnNbMF0uc2Vuc29yX25hbWUpCiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT57CiAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikKICAgICAgICB9KSAgCiAgfSwKICBjb21wdXRlZDp7CiAgICB0ZXN0KCl7CiAgICAgIHJldHVybiB0aGlzLnR5cGVTYy50ZXh0KyIgIit0aGlzLm5hbWVTZW5zb3IrIiAiK3RoaXMubmFtZVpvbmUKICAgIH0KICB9Cn0K"},{"version":3,"sources":["CreateSensor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateSensor.vue","sourceRoot":"src/views/crud","sourcesContent":["<template>\n\t<div>\n\t\t <CRow>\n      <CCol sm=\"12\" md=\"12\">\n        <CCard>\n          <CCardHeader>\n            <h3>Création d'un capteur {{test}}</h3>\n          </CCardHeader>\n          <CCardBody>\n              <form @submit.prevent=\"onSubmit\"  method=\"post\">   \n                <div class=\"form-group\">\n                  <label for=\"sensorName\">Nom Capteur</label>\n                  <input v-model=\"nameSensor\" type=\"text\" class=\"form-control\" id=\"sensorName\" placeholder=\"Entrer nom...\">\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"sensorZone\">Nom de la zone</label>\n                  <input v-model=\"nameZone\" type=\"text\" class=\"form-control\" id=\"sensorZone\" placeholder=\"Entrer nom de la zone...\">\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"sensorDescription\">Description du capteur</label>\n                  <textarea v-model=\"sensorDesc\" class=\"form-control\" id=\"sensorDescription\" rows=\"3\"></textarea>\n                </div>\n\n                \n                <div class=\"form-group\">\n                  <label for=\"typeScene\">Type de la scène</label>\n                  <select  v-model=\"typeSc\" class=\"form-control\" id=\"typeScene\" placeholder=\"Choisir type...\">\n                    <option v-for=\"type in types\" v-bind:value=\"{ id: type.id, text: type.name }\">{{ type.name }}\n                    </option>\n                  </select>\n                </div>\n                <Button type=\"submit\" class=\"btn btn-primary  btn-block\">Créer capteur</Button>\n              </form>\n          </CCardBody>\n          <CCardFooter>\n            \n          </CCardFooter>\n        </CCard>\n        \n\n        <!-- Button trigger modal --\n        <button type=\"button\" class=\"btn btn-primary\" @click=\"boolModal1 = true\">\n          Launch demo modal\n        </button>-->\n        <Modal  :id=\"idModal1\"  @close=\"boolModal1 = false\">\n              \n                <h1 slot=\"title\">Hi</h1>\n        </Modal>\n\n      </CCol>\n    </CRow>\n    <CRow>\n      <CCol sm=\"12\" md=\"12\">\n        <CCard>\n          <CCardBody>\n              <Table :allDBsensors=\"allDBsensors\" @delete-action=\"deleteSensor\" @edit-action=\"editSensor\" />\n          </CCardBody>  \n        </CCard>    \n      </CCol>\n    </CRow>\n\t</div>\n</template>\n\n<script>\n\nimport CrowdServices from '@/services/CrowdServices.js'\nimport Modal from '@/components/Modal'\nimport Table from '@/components/Table'\nimport ActionButton from '@/components/ActionButton'\nimport apiClient from '@/services/CrowdServices.js'\n\nexport default {\n  name: 'CreateSensor',\n  components:{\n    Modal,\n    Table,\n    ActionButton\n  },\n  data(){\n    return {\n      nameSensor : null,\n      nameZone : null,\n      sensorDesc : null,\n      typeSc : '',\n      types : [{id:1,name:'Scène large échelle'},{id:2,name:'Scène moyen échelle'}],\n      idModal1 : 'exampleModal',\n      boolModal1 : false,\n      allDBsensors: []\n    }\n  },\n  methods:{\n\n    onSubmit(){\n      var data = {'sensor_name': this.nameSensor,\n              'sensor_zone': this.nameZone,\n              'sensor_desc': this.sensorDesc,\n              'sensor_type_name': this.typeSc.text,\n              'sensor_type_id': this.typeSc.id\n      }\n      CrowdServices.postSensorData(data)\n      this.nameSensor = null;\n      this.nameZone = null;\n      this.sensorDesc = null;\n      this.typeSc = '';\n      this.boolModal1 = true\n    },\n\n    editSensor(ID){\n      var myModal = new coreui.Modal(document.getElementById('exampleModal'))\n      myModal.show()\n    },\n\n    deleteSensor(ID){\n      console.log('yesD ',ID)\n    }\n\n  },\n  created(){\n    CrowdServices.getSensors()\n        .then((response)=>{\n          this.allDBsensors = response.data\n          console.log(this.allDBsensors[0].sensor_name)\n        })\n        .catch(error =>{\n          console.log(error)\n        })  \n  },\n  computed:{\n    test(){\n      return this.typeSc.text+\" \"+this.nameSensor+\" \"+this.nameZone\n    }\n  }\n}\n</script>"]}]}