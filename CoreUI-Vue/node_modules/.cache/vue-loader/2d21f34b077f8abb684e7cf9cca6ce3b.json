{"remainingRequest":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hads/Documents/pfe-documentations/CoreUI-Vue/src/views/crud/ListSensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/src/views/crud/ListSensor.vue","mtime":1595269574857},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTZW5zb3JDYXJkIGZyb20gJ0AvY29tcG9uZW50cy9TZW5zb3JDYXJkLnZ1ZScKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFNlbnNvckNhcmQKICB9LAogIGNyZWF0ZWQoKSB7CiAgCXRoaXMuJHN0b3JlLmRpc3BhdGNoKCdmZXRjaFNlbnNvcnMnLHsKICAJCXBlclBhZ2U6IDMsCiAgCQlwYWdlOiB0aGlzLnBhZ2UKICAJfSkKICB9LAogIGNvbXB1dGVkOnsKICAJcGFnZSgpewogIAkJcmV0dXJuIHBhcnNlSW50KHRoaXMuJHJvdXRlLnF1ZXJ5LnBhZ2UpIHx8IDEKICAJfSwKICAJaGFzTmV4dFBhZ2UoKSB7CiAgICAgIHJldHVybiB0aGlzLnNlbnNvcnNUb3RhbCA+IHRoaXMucGFnZSAqIDMKICAgIH0sCiAgICAuLi5tYXBTdGF0ZShbJ3NlbnNvcnMnLCAnc2Vuc29yc1RvdGFsJ10pCiAgfQp9Cg=="},{"version":3,"sources":["ListSensor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListSensor.vue","sourceRoot":"src/views/crud","sourcesContent":["<template>\n  <div>   \n    <CRow>\n      <CCol sm=\"12\" md=\"12\">\n          \t    <h1>Sensors Listing</h1>\n          \n          \t\t<SensorCard v-for=\"sensor in sensors\" :key=\"sensor.id\" :sensor=\"sensor\"/>\n          \t\t<template v-if=\"page != 1\">\n\t\t\t      <router-link :to=\"{ name: 'ListSensor', query: { page: page - 1 } }\" rel=\"prev\">\n\t\t\t      Prev Page</router-link>\n\t\t\t    <template v-if=\"hasNextPage\"> | </template>\n\t\t\t    </template>\n\t\t\t    <router-link v-if=\"hasNextPage\" :to=\"{ name: 'ListSensor', query: { page: page + 1 } }\" rel=\"next\">\n\t\t\t      Next Page</router-link>\n      </CCol>\n    </CRow>      \t\n  </div>\n</template>\n\n<script>\nimport SensorCard from '@/components/SensorCard.vue'\nimport { mapState } from 'vuex'\n\nexport default {\n  components: {\n    SensorCard\n  },\n  created() {\n  \tthis.$store.dispatch('fetchSensors',{\n  \t\tperPage: 3,\n  \t\tpage: this.page\n  \t})\n  },\n  computed:{\n  \tpage(){\n  \t\treturn parseInt(this.$route.query.page) || 1\n  \t},\n  \thasNextPage() {\n      return this.sensorsTotal > this.page * 3\n    },\n    ...mapState(['sensors', 'sensorsTotal'])\n  }\n}\n</script>"]}]}