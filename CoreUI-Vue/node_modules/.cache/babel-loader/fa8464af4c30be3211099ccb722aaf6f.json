{"remainingRequest":"/home/hads/Documents/CoreUI-Vue/node_modules/babel-loader/lib/index.js!/home/hads/Downloads/pycharm-community-2020.1/plugins/python-ce/helpers/MathJax/extensions/TeX/AMSmath.js","dependencies":[{"path":"/home/hads/Downloads/pycharm-community-2020.1/plugins/python-ce/helpers/MathJax/extensions/TeX/AMSmath.js","mtime":1586259854000},{"path":"/home/hads/Documents/CoreUI-Vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hads/Documents/CoreUI-Vue/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hads/Downloads/pycharm-community-2020.1/plugins/python-ce/helpers/MathJax/extensions/TeX/AMSmath.js"],"names":["MathJax","Extension","version","number","startNumber","IDs","eqIDs","labels","eqlabels","refs","Hub","Register","StartupHook","MML","ElementJax","mml","TEX","InputJax","TeX","AMS","TEXDEF","Definitions","STACKITEM","Stack","Item","CONFIG","config","equationNumbers","COLS","W","WW","i","m","length","Parse","prototype","Em","join","Add","mathchar0mo","iiiint","texClass","TEXCLASS","OP","macros","mathring","nobreakspace","negmedspace","LENGTH","NEGATIVEMEDIUMMATHSPACE","negthickspace","NEGATIVETHICKMATHSPACE","idotsint","dddot","ddddot","sideset","boxed","tag","notag","label","ref","eqref","substack","injlim","projlim","varliminf","varlimsup","varinjlim","varprojlim","DeclareMathOperator","operatorname","SkipLimits","genfrac","frac","tfrac","dfrac","binom","tbinom","dbinom","cfrac","shoveleft","ALIGN","LEFT","shoveright","RIGHT","xrightarrow","xleftarrow","environment","align","multline","split","gather","alignat","alignedat","aligned","gathered","subarray","smallmatrix","eqnarray","THICKMATHSPACE","delimiter","OPEN","CLOSE","Augment","HandleTag","name","star","GetStar","arg","trimSpaces","GetArgument","formatTag","global","stack","tagID","notags","Error","mtd","apply","InternalMath","With","id","formatID","HandleNoTag","HandleLabel","refUpdate","HandleRef","badref","Push","mrow","href","formatURL","HandleDeclareOp","limits","cs","charAt","substr","op","replace","HandleOperatorName","string","slice","c","GetNext","GetCS","HandleShove","shove","top","Top","type","data","CFrac","lr","GetBrackets","num","den","mfrac","env","l","r","numalign","denomalign","Genfrac","left","right","thick","style","GetDelimiterArg","ParseArg","linethickness","fixedFence","texWithDelims","STYLE","mstyle","displaystyle","scriptlevel","Multline","begin","numbered","checkEqnEnv","arraydef","rowspacing","width","MultLineWidth","columnwidth","side","TagSide","minlabelspacing","TagIndent","AMSarray","taggable","spacing","columnalign","columnspacing","AlignedAMSArray","setArrayAlign","arguments","AlignAt","n","valign","match","push","array","EquationBegin","force","forcetag","autoNumber","EquationStar","row","tagged","eqnenv","MultiIntegral","integral","next","xArrow","chr","def","lspace","bot","arrow","mo","chars","String","fromCharCode","stretchy","REL","munderover","SetData","over","mpadded","voffset","under","subsupOK","autoTag","formatNumber","toString","getTag","useLabelIds","document","getElementById","ID","clearTag","fixInitialMO","isEmbellished","unshift","mi","Subclass","Init","SUPER","save","EndEntry","table","EndRow","EndTable","call","concat","mtr","mlabeledtr","start","oldCheckItem","checkItem","item","mmlData","display","isInner","mtable","prefilterHooks","script","postfilterHooks","Insert","math","texError","MessageHook","message","state","STATE","UPDATE","processInput","scripts","Date","getTime","j","jax","jaxIDs","resetEquationNumbers","keepLabels","Startup","signal","Post","Ajax","loadComplete"],"mappings":"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","sourcesContent":["/* -*- Mode: Javascript; indent-tabs-mode:nil; js-indent-level: 2 -*- */\n/* vim: set ts=2 et sw=2 tw=80: */\n\n/*************************************************************\n *\n *  MathJax/extensions/TeX/AMSmath.js\n *\n *  Implements AMS math environments and macros.\n *  \n *  ---------------------------------------------------------------------\n *  \n *  Copyright (c) 2009-2015 The MathJax Consortium\n * \n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nMathJax.Extension[\"TeX/AMSmath\"] = {\n  version: \"2.6.1\",\n  \n  number: 0,        // current equation number\n  startNumber: 0,   // current starting equation number (for when equation is restarted)\n  IDs: {},          // IDs used in previous equations\n  eqIDs: {},        // IDs used in this equation\n  labels: {},       // the set of labels\n  eqlabels: {},     // labels in the current equation\n  refs: []          // array of jax with unresolved references\n};\n\nMathJax.Hub.Register.StartupHook(\"TeX Jax Ready\",function () {\n  \n  var MML = MathJax.ElementJax.mml,\n      TEX = MathJax.InputJax.TeX,\n      AMS = MathJax.Extension[\"TeX/AMSmath\"];\n\n  var TEXDEF = TEX.Definitions,\n      STACKITEM = TEX.Stack.Item,\n      CONFIG = TEX.config.equationNumbers;\n      \n  var COLS = function (W) {\n    var WW = [];\n    for (var i = 0, m = W.length; i < m; i++) \n      {WW[i] = TEX.Parse.prototype.Em(W[i])}\n    return WW.join(\" \");\n  };\n  \n  /******************************************************************************/\n  \n  TEXDEF.Add({\n    mathchar0mo: {\n      iiiint:     ['2A0C',{texClass: MML.TEXCLASS.OP}]\n    },\n    \n    macros: {\n      mathring:   ['Accent','2DA'],  // or 0x30A\n      \n      nobreakspace: 'Tilde',\n      negmedspace:    ['Spacer',MML.LENGTH.NEGATIVEMEDIUMMATHSPACE],\n      negthickspace:  ['Spacer',MML.LENGTH.NEGATIVETHICKMATHSPACE],\n      \n//    intI:       ['Macro','\\\\mathchoice{\\\\!}{}{}{}\\\\!\\\\!\\\\int'],\n//    iint:       ['MultiIntegral','\\\\int\\\\intI'],          // now in core TeX input jax\n//    iiint:      ['MultiIntegral','\\\\int\\\\intI\\\\intI'],    // now in core TeX input jax\n//    iiiint:     ['MultiIntegral','\\\\int\\\\intI\\\\intI\\\\intI'], // now in mathchar0mo above\n      idotsint:   ['MultiIntegral','\\\\int\\\\cdots\\\\int'],\n      \n//    dddot:      ['Macro','\\\\mathop{#1}\\\\limits^{\\\\textstyle \\\\mathord{.}\\\\mathord{.}\\\\mathord{.}}',1],\n//    ddddot:     ['Macro','\\\\mathop{#1}\\\\limits^{\\\\textstyle \\\\mathord{.}\\\\mathord{.}\\\\mathord{.}\\\\mathord{.}}',1],\n      dddot:      ['Accent','20DB'],\n      ddddot:     ['Accent','20DC'],\n      \n      sideset:    ['Macro','\\\\mathop{\\\\mathop{\\\\rlap{\\\\phantom{#3}}}\\\\nolimits#1\\\\!\\\\mathop{#3}\\\\nolimits#2}',3],\n      \n      boxed:      ['Macro','\\\\fbox{$\\\\displaystyle{#1}$}',1],\n      \n      tag:         'HandleTag',\n      notag:       'HandleNoTag',\n      label:       'HandleLabel',\n      ref:         'HandleRef',\n      eqref:       ['HandleRef',true],\n      \n      substack:   ['Macro','\\\\begin{subarray}{c}#1\\\\end{subarray}',1],\n      \n      injlim:     ['NamedOp','inj&thinsp;lim'],\n      projlim:    ['NamedOp','proj&thinsp;lim'],\n      varliminf:  ['Macro','\\\\mathop{\\\\underline{\\\\mmlToken{mi}{lim}}}'],\n      varlimsup:  ['Macro','\\\\mathop{\\\\overline{\\\\mmlToken{mi}{lim}}}'],\n      varinjlim:  ['Macro','\\\\mathop{\\\\underrightarrow{\\\\mmlToken{mi}{lim}}}'],\n      varprojlim: ['Macro','\\\\mathop{\\\\underleftarrow{\\\\mmlToken{mi}{lim}}}'],\n      \n      DeclareMathOperator: 'HandleDeclareOp',\n      operatorname:        'HandleOperatorName',\n      SkipLimits:          'SkipLimits',\n      \n      genfrac:     'Genfrac',\n      frac:       ['Genfrac',\"\",\"\",\"\",\"\"],\n      tfrac:      ['Genfrac',\"\",\"\",\"\",1],\n      dfrac:      ['Genfrac',\"\",\"\",\"\",0],\n      binom:      ['Genfrac',\"(\",\")\",\"0\",\"\"],\n      tbinom:     ['Genfrac',\"(\",\")\",\"0\",1],\n      dbinom:     ['Genfrac',\"(\",\")\",\"0\",0],\n      \n      cfrac:       'CFrac',\n      \n      shoveleft:  ['HandleShove',MML.ALIGN.LEFT],\n      shoveright: ['HandleShove',MML.ALIGN.RIGHT],\n      \n      xrightarrow: ['xArrow',0x2192,5,6],\n      xleftarrow:  ['xArrow',0x2190,7,3]\n    },\n    \n    environment: {\n      align:         ['AMSarray',null,true,true,  'rlrlrlrlrlrl',COLS([0,2,0,2,0,2,0,2,0,2,0])],\n      'align*':      ['AMSarray',null,false,true, 'rlrlrlrlrlrl',COLS([0,2,0,2,0,2,0,2,0,2,0])],\n      multline:      ['Multline',null,true],\n      'multline*':   ['Multline',null,false],\n      split:         ['AMSarray',null,false,false,'rl',COLS([0])],\n      gather:        ['AMSarray',null,true,true,  'c'],\n      'gather*':     ['AMSarray',null,false,true, 'c'],\n      \n      alignat:       ['AlignAt',null,true,true],\n      'alignat*':    ['AlignAt',null,false,true],\n      alignedat:     ['AlignAt',null,false,false],\n\n      aligned:       ['AlignedAMSArray',null,null,null,'rlrlrlrlrlrl',COLS([0,2,0,2,0,2,0,2,0,2,0]),\".5em\",'D'],\n      gathered:      ['AlignedAMSArray',null,null,null,'c',null,\".5em\",'D'],\n\n      subarray:      ['Array',null,null,null,null,COLS([0]),\"0.1em\",'S',1],\n      smallmatrix:   ['Array',null,null,null,'c',COLS([1/3]),\".2em\",'S',1],\n      \n      'equation':    ['EquationBegin','Equation',true],\n      'equation*':   ['EquationBegin','EquationStar',false],\n\n      eqnarray:      ['AMSarray',null,true,true, 'rcl',\"0 \"+MML.LENGTH.THICKMATHSPACE,\".5em\"],\n      'eqnarray*':   ['AMSarray',null,false,true,'rcl',\"0 \"+MML.LENGTH.THICKMATHSPACE,\".5em\"]\n    },\n    \n    delimiter: {\n      '\\\\lvert':     ['2223',{texClass:MML.TEXCLASS.OPEN}],\n      '\\\\rvert':     ['2223',{texClass:MML.TEXCLASS.CLOSE}],\n      '\\\\lVert':     ['2225',{texClass:MML.TEXCLASS.OPEN}],\n      '\\\\rVert':     ['2225',{texClass:MML.TEXCLASS.CLOSE}]\n    }\n  },null,true);\n    \n\n  /******************************************************************************/\n  \n  TEX.Parse.Augment({\n\n    /*\n     *  Add the tag to the environment (to be added to the table row later)\n     */\n    HandleTag: function (name) {\n      var star = this.GetStar();\n      var arg = this.trimSpaces(this.GetArgument(name)), tag = arg;\n      if (!star) {arg = CONFIG.formatTag(arg)}\n      var global = this.stack.global; global.tagID = tag;\n      if (global.notags) {\n        TEX.Error([\"CommandNotAllowedInEnv\",\n                   \"%1 not allowed in %2 environment\",\n                   name,global.notags]\n        );\n      }\n      if (global.tag) {TEX.Error([\"MultipleCommand\",\"Multiple %1\",name])}\n      global.tag = MML.mtd.apply(MML,this.InternalMath(arg)).With({id:CONFIG.formatID(tag)});\n    },\n    HandleNoTag: function (name) {\n      if (this.stack.global.tag) {delete this.stack.global.tag}\n      this.stack.global.notag = true;  // prevent auto-tagging\n    },\n    \n    /*\n     *  Record a label name for a tag\n     */\n    HandleLabel: function (name) {\n      var global = this.stack.global, label = this.GetArgument(name);\n      if (label === \"\") return;\n      if (!AMS.refUpdate) {\n        if (global.label) {TEX.Error([\"MultipleCommand\",\"Multiple %1\",name])}\n        global.label = label;\n        if (AMS.labels[label] || AMS.eqlabels[label])\n          {TEX.Error([\"MultipleLabel\",\"Label '%1' multiply defined\",label])}\n        AMS.eqlabels[label] = {tag:\"???\", id:\"\"}; // will be replaced by tag value later\n      }\n    },\n    \n    /*\n     *  Handle a label reference\n     */\n    HandleRef: function (name,eqref) {\n      var label = this.GetArgument(name);\n      var ref = AMS.labels[label] || AMS.eqlabels[label];\n      if (!ref) {ref = {tag:\"???\",id:\"\"}; AMS.badref = !AMS.refUpdate}\n      var tag = ref.tag; if (eqref) {tag = CONFIG.formatTag(tag)}\n      this.Push(MML.mrow.apply(MML,this.InternalMath(tag)).With({\n        href:CONFIG.formatURL(ref.id), \"class\":\"MathJax_ref\"\n      }));\n    },\n    \n    /*\n     *  Handle \\DeclareMathOperator\n     */\n    HandleDeclareOp: function (name) {\n      var limits = (this.GetStar() ? \"\" : \"\\\\nolimits\\\\SkipLimits\");\n      var cs = this.trimSpaces(this.GetArgument(name));\n      if (cs.charAt(0) == \"\\\\\") {cs = cs.substr(1)}\n      var op = this.GetArgument(name);\n      op = op.replace(/\\*/g,'\\\\text{*}').replace(/-/g,'\\\\text{-}');\n      TEX.Definitions.macros[cs] = ['Macro','\\\\mathop{\\\\rm '+op+'}'+limits];\n    },\n    \n    HandleOperatorName: function (name) {\n      var limits = (this.GetStar() ? \"\" : \"\\\\nolimits\\\\SkipLimits\");\n      var op = this.trimSpaces(this.GetArgument(name));\n      op = op.replace(/\\*/g,'\\\\text{*}').replace(/-/g,'\\\\text{-}');\n      this.string = '\\\\mathop{\\\\rm '+op+'}'+limits+\" \"+this.string.slice(this.i);\n      this.i = 0;\n    },\n    \n    SkipLimits: function (name) {\n      var c = this.GetNext(), i = this.i;\n      if (c === \"\\\\\" && ++this.i && this.GetCS() !== \"limits\") this.i = i;\n    },\n\n    /*\n     *  Record presence of \\shoveleft and \\shoveright\n     */\n    HandleShove: function (name,shove) {\n      var top = this.stack.Top();\n      if (top.type !== \"multline\" || top.data.length) {\n        TEX.Error([\"CommandAtTheBeginingOfLine\",\n                   \"%1 must come at the beginning of the line\",name]);\n      }\n      top.data.shove = shove;\n    },\n    \n    /*\n     *  Handle \\cfrac\n     */\n    CFrac: function (name) {\n      var lr  = this.trimSpaces(this.GetBrackets(name,\"\")),\n          num = this.GetArgument(name),\n          den = this.GetArgument(name);\n      var frac = MML.mfrac(TEX.Parse('\\\\strut\\\\textstyle{'+num+'}',this.stack.env).mml(),\n                           TEX.Parse('\\\\strut\\\\textstyle{'+den+'}',this.stack.env).mml());\n      lr = ({l:MML.ALIGN.LEFT, r:MML.ALIGN.RIGHT,\"\":\"\"})[lr];\n      if (lr == null)\n        {TEX.Error([\"IllegalAlign\",\"Illegal alignment specified in %1\",name])}\n      if (lr) {frac.numalign = frac.denomalign = lr}\n      this.Push(frac);\n    },\n    \n    /*\n     *  Implement AMS generalized fraction\n     */\n    Genfrac: function (name,left,right,thick,style) {\n      if (left  == null) {left  = this.GetDelimiterArg(name)}\n      if (right == null) {right = this.GetDelimiterArg(name)}\n      if (thick == null) {thick = this.GetArgument(name)}\n      if (style == null) {style = this.trimSpaces(this.GetArgument(name))}\n      var num = this.ParseArg(name);\n      var den = this.ParseArg(name);\n      var frac = MML.mfrac(num,den);\n      if (thick !== \"\") {frac.linethickness = thick}\n      if (left || right) {frac = TEX.fixedFence(left,frac.With({texWithDelims:true}),right)}\n      if (style !== \"\") {\n        var STYLE = ([\"D\",\"T\",\"S\",\"SS\"])[style];\n        if (STYLE == null)\n          {TEX.Error([\"BadMathStyleFor\",\"Bad math style for %1\",name])}\n        frac = MML.mstyle(frac);\n        if (STYLE === \"D\") {frac.displaystyle = true; frac.scriptlevel = 0}\n          else {frac.displaystyle = false; frac.scriptlevel = style - 1}\n      }\n      this.Push(frac);\n    },\n\n    /*\n     *  Implements multline environment (mostly handled through STACKITEM below)\n     */\n    Multline: function (begin,numbered) {\n      this.Push(begin); this.checkEqnEnv();\n      return STACKITEM.multline(numbered,this.stack).With({\n        arraydef: {\n          displaystyle: true,\n          rowspacing: \".5em\",\n          width: TEX.config.MultLineWidth, columnwidth:\"100%\",\n          side: TEX.config.TagSide,\n          minlabelspacing: TEX.config.TagIndent\n        }\n      });\n    },\n\n    /*\n     *  Handle AMS aligned environments\n     */\n    AMSarray: function (begin,numbered,taggable,align,spacing) {\n      this.Push(begin); if (taggable) {this.checkEqnEnv()}\n      align = align.replace(/[^clr]/g,'').split('').join(' ');\n      align = align.replace(/l/g,'left').replace(/r/g,'right').replace(/c/g,'center');\n      return STACKITEM.AMSarray(begin.name,numbered,taggable,this.stack).With({\n        arraydef: {\n          displaystyle: true,\n          rowspacing: \".5em\",\n          columnalign: align,\n          columnspacing: (spacing||\"1em\"),\n          rowspacing: \"3pt\",\n          side: TEX.config.TagSide,\n          minlabelspacing: TEX.config.TagIndent\n        }\n      });\n    },\n    \n    AlignedAMSArray: function (begin) {\n      var align = this.GetBrackets(\"\\\\begin{\"+begin.name+\"}\");\n      return this.setArrayAlign(this.AMSarray.apply(this,arguments),align);\n    },\n\n    /*\n     *  Handle alignat environments\n     */\n    AlignAt: function (begin,numbered,taggable) {\n      var n, valign, align = \"\", spacing = [];\n      if (!taggable) {valign = this.GetBrackets(\"\\\\begin{\"+begin.name+\"}\")}\n      n = this.GetArgument(\"\\\\begin{\"+begin.name+\"}\");\n      if (n.match(/[^0-9]/)) {\n        TEX.Error([\"PositiveIntegerArg\",\"Argument to %1 must me a positive integer\",\n                  \"\\\\begin{\"+begin.name+\"}\"]);\n      }\n      while (n > 0) {align += \"rl\"; spacing.push(\"0em 0em\"); n--}\n      spacing = spacing.join(\" \");\n      if (taggable) {return this.AMSarray(begin,numbered,taggable,align,spacing)}\n      var array = this.AMSarray(begin,numbered,taggable,align,spacing);\n      return this.setArrayAlign(array,valign);\n    },\n    \n    /*\n     *  Handle equation environment\n     */\n    EquationBegin: function (begin,force) {\n      this.checkEqnEnv();\n      this.stack.global.forcetag = (force && CONFIG.autoNumber !== \"none\");\n      return begin;\n    },\n    EquationStar: function (begin,row) {\n      this.stack.global.tagged = true; // prevent automatic tagging\n      return row;\n    },\n    \n    /*\n     *  Check for bad nesting of equation environments\n     */\n    checkEqnEnv: function () {\n      if (this.stack.global.eqnenv)\n        {TEX.Error([\"ErroneousNestingEq\",\"Erroneous nesting of equation structures\"])}\n      this.stack.global.eqnenv = true;\n    },\n    \n    /*\n     *  Handle multiple integrals (make a mathop if followed by limits)\n     */\n    MultiIntegral: function (name,integral) {\n      var next = this.GetNext();\n      if (next === \"\\\\\") {\n        var i = this.i; next = this.GetArgument(name); this.i = i;\n        if (next === \"\\\\limits\") {\n          if (name === \"\\\\idotsint\") {integral = \"\\\\!\\\\!\\\\mathop{\\\\,\\\\,\"+integral+\"}\"}\n                           else {integral = \"\\\\!\\\\!\\\\!\\\\mathop{\\\\,\\\\,\\\\,\"+integral+\"}\"}\n        }\n      }\n      this.string = integral + \" \" + this.string.slice(this.i);\n      this.i = 0;\n    },\n    \n    /*\n     *  Handle stretchable arrows\n     */\n    xArrow: function (name,chr,l,r) {\n      var def = {width: \"+\"+(l+r)+\"mu\", lspace: l+\"mu\"};\n      var bot = this.GetBrackets(name),\n          top = this.ParseArg(name);\n      var arrow = MML.mo(MML.chars(String.fromCharCode(chr))).With({\n        stretchy: true, texClass: MML.TEXCLASS.REL\n      });\n      var mml = MML.munderover(arrow);\n      mml.SetData(mml.over,MML.mpadded(top).With(def).With({voffset:\".15em\"}));\n      if (bot) {\n        bot = TEX.Parse(bot,this.stack.env).mml()\n        mml.SetData(mml.under,MML.mpadded(bot).With(def).With({voffset:\"-.24em\"}));\n      }\n      this.Push(mml.With({subsupOK:true}));\n    },\n    \n    /*\n     *  Get a delimiter or empty argument\n     */\n    GetDelimiterArg: function (name) {\n      var c = this.trimSpaces(this.GetArgument(name));\n      if (c == \"\") return null;\n      if (c in TEXDEF.delimiter) return c;\n      TEX.Error([\"MissingOrUnrecognizedDelim\",\"Missing or unrecognized delimiter for %1\",name]);\n    },\n    \n    /*\n     *  Get a star following a control sequence name, if any\n     */\n    GetStar: function () {\n      var star = (this.GetNext() === \"*\");\n      if (star) {this.i++}\n      return star;\n    }\n    \n  });\n  \n  /******************************************************************************/\n  \n  STACKITEM.Augment({\n    /*\n     *  Increment equation number and form tag mtd element\n     */\n    autoTag: function () {\n      var global = this.global;\n      if (!global.notag) {\n        AMS.number++; global.tagID = CONFIG.formatNumber(AMS.number.toString());\n        var mml = TEX.Parse(\"\\\\text{\"+CONFIG.formatTag(global.tagID)+\"}\",{}).mml();\n        global.tag = MML.mtd(mml).With({id:CONFIG.formatID(global.tagID)});\n      }\n    },\n  \n    /*\n     *  Get the tag and record the label, if any\n     */\n    getTag: function () {\n      var global = this.global, tag = global.tag; global.tagged = true;\n      if (global.label) {\n        if (CONFIG.useLabelIds) {tag.id = CONFIG.formatID(global.label)}\n        AMS.eqlabels[global.label] = {tag:global.tagID, id:tag.id};        \n      }\n      //\n      //  Check for repeated ID's (either in the document or as\n      //  a previous tag) and find a unique related one. (#240)\n      //\n      if (document.getElementById(tag.id) || AMS.IDs[tag.id] || AMS.eqIDs[tag.id]) {\n        var i = 0, ID;\n        do {i++; ID = tag.id+\"_\"+i}\n          while (document.getElementById(ID) || AMS.IDs[ID] || AMS.eqIDs[ID]);\n        tag.id = ID; if (global.label) {AMS.eqlabels[global.label].id = ID}\n      }\n      AMS.eqIDs[tag.id] = 1;\n      this.clearTag();\n      return tag;\n    },\n    clearTag: function () {\n      var global = this.global;\n      delete global.tag; delete global.tagID; delete global.label;\n    },\n\n    /*\n     *  If the initial child, skipping any initial space or\n     *  empty braces (TeXAtom with child being an empty inferred row),\n     *  is an <mo>, preceed it by an empty <mi> to force the <mo> to\n     *  be infix.\n     */\n    fixInitialMO: function (data) {\n      for (var i = 0, m = data.length; i < m; i++) {\n        if (data[i] && (data[i].type !== \"mspace\" &&\n           (data[i].type !== \"texatom\" || (data[i].data[0] && data[i].data[0].data.length)))) {\n          if (data[i].isEmbellished()) data.unshift(MML.mi());\n          break;\n        }\n      }\n    }\n  });\n  \n  /*\n   *  Implement multline environment via a STACKITEM\n   */\n  STACKITEM.multline = STACKITEM.array.Subclass({\n    type: \"multline\",\n    Init: function (numbered,stack) {\n      this.SUPER(arguments).Init.apply(this);\n      this.numbered = (numbered && CONFIG.autoNumber !== \"none\");\n      this.save = {notag: stack.global.notag};\n      stack.global.tagged = !numbered && !stack.global.forcetag; // prevent automatic tagging in starred environments\n    },\n    EndEntry: function () {\n      if (this.table.length) {this.fixInitialMO(this.data)}\n      var mtd = MML.mtd.apply(MML,this.data);\n      if (this.data.shove) {mtd.columnalign = this.data.shove}\n      this.row.push(mtd);\n      this.data = [];\n    },\n    EndRow: function () {\n      if (this.row.length != 1) {\n        TEX.Error([\"MultlineRowsOneCol\",\n                   \"The rows within the %1 environment must have exactly one column\",\n                   \"multline\"]);\n      }\n      this.table.push(this.row); this.row = [];\n    },\n    EndTable: function () {\n      this.SUPER(arguments).EndTable.call(this);\n      if (this.table.length) {\n        var m = this.table.length-1, i, label = -1;\n        if (!this.table[0][0].columnalign) {this.table[0][0].columnalign = MML.ALIGN.LEFT}\n        if (!this.table[m][0].columnalign) {this.table[m][0].columnalign = MML.ALIGN.RIGHT}\n        if (!this.global.tag && this.numbered) {this.autoTag()}\n        if (this.global.tag && !this.global.notags) {\n          label = (this.arraydef.side === \"left\" ? 0 : this.table.length - 1);\n          this.table[label] = [this.getTag()].concat(this.table[label]);\n        }\n        for (i = 0, m = this.table.length; i < m; i++) {\n          var mtr = (i === label ? MML.mlabeledtr : MML.mtr);\n          this.table[i] = mtr.apply(MML,this.table[i]);\n        }\n      }\n      this.global.notag  = this.save.notag;\n    }\n  });\n  \n  /*\n   *  Save data about numbering and taging equations, and add\n   *  tags at the ends of rows.\n   */\n  STACKITEM.AMSarray = STACKITEM.array.Subclass({\n    type: \"AMSarray\",\n    Init: function (name,numbered,taggable,stack) {\n      this.SUPER(arguments).Init.apply(this);\n      this.numbered = (numbered && CONFIG.autoNumber !== \"none\");\n      this.save = {notags: stack.global.notags, notag: stack.global.notag};\n      stack.global.notags = (taggable ? null : name);\n      stack.global.tagged = !numbered && !stack.global.forcetag; // prevent automatic tagging in starred environments\n    },\n    EndEntry: function () {\n      if (this.row.length) {this.fixInitialMO(this.data)}\n      this.row.push(MML.mtd.apply(MML,this.data));\n      this.data = [];\n    },\n    EndRow: function () {\n      var mtr = MML.mtr;\n      if (!this.global.tag && this.numbered) {this.autoTag()}\n      if (this.global.tag && !this.global.notags) {\n        this.row = [this.getTag()].concat(this.row);\n        mtr = MML.mlabeledtr;\n      } else {this.clearTag()}\n      if (this.numbered) {delete this.global.notag}\n      this.table.push(mtr.apply(MML,this.row)); this.row = [];\n    },\n    EndTable: function () {\n      this.SUPER(arguments).EndTable.call(this);\n      this.global.notags = this.save.notags;\n      this.global.notag  = this.save.notag;\n    }\n  });\n  \n  //\n  //  Look for \\tag on a formula and make an mtable to include it\n  //\n  STACKITEM.start.Augment({\n    oldCheckItem: STACKITEM.start.prototype.checkItem,\n    checkItem: function (item) {\n      if (item.type === \"stop\") {\n        var mml = this.mmlData(), global = this.global;\n        if (AMS.display && !global.tag && !global.tagged && !global.isInner &&\n            (CONFIG.autoNumber === \"all\" || global.forcetag)) {this.autoTag()}\n        if (global.tag) {\n          var row = [this.getTag(),MML.mtd(mml)];\n          var def = {\n            side: TEX.config.TagSide,\n            minlabelspacing: TEX.config.TagIndent,\n            displaystyle: \"inherit\"   // replaced by TeX input jax Translate() function with actual value\n          };\n          mml = MML.mtable(MML.mlabeledtr.apply(MML,row)).With(def);\n        }\n        return STACKITEM.mml(mml);\n      }\n      return this.oldCheckItem.call(this,item);\n    }\n  });\n  \n  /******************************************************************************/\n\n  /*\n   *  Add pre- and post-filters to handle the equation number maintainance.\n   */\n  TEX.prefilterHooks.Add(function (data) {\n    AMS.display = data.display;\n    AMS.number = AMS.startNumber;  // reset equation numbers (in case the equation restarted)\n    AMS.eqlabels = AMS.eqIDs = {}; AMS.badref = false;\n    if (AMS.refUpdate) {AMS.number = data.script.MathJax.startNumber}\n  });\n  TEX.postfilterHooks.Add(function (data) {\n    data.script.MathJax.startNumber = AMS.startNumber;\n    AMS.startNumber = AMS.number;                // equation numbers for next equation\n    MathJax.Hub.Insert(AMS.IDs,AMS.eqIDs);       // save IDs from this equation\n    MathJax.Hub.Insert(AMS.labels,AMS.eqlabels); // save labels from this equation\n    if (AMS.badref && !data.math.texError) {AMS.refs.push(data.script)}  // reprocess later\n  },100);\n  \n  MathJax.Hub.Register.MessageHook(\"Begin Math Input\",function () {\n    AMS.refs = [];                 // array of jax with bad references\n    AMS.refUpdate = false;\n  });\n  MathJax.Hub.Register.MessageHook(\"End Math Input\",function (message) {\n    if (AMS.refs.length) {\n      AMS.refUpdate = true;\n      for (var i = 0, m = AMS.refs.length; i < m; i++)\n        {AMS.refs[i].MathJax.state = MathJax.ElementJax.STATE.UPDATE}\n      return MathJax.Hub.processInput({\n        scripts:AMS.refs,\n        start: new Date().getTime(),\n        i:0, j:0, jax:{}, jaxIDs:[]\n      });\n    }\n    return null;\n  });\n  \n  //\n  //  Clear the equation numbers and labels\n  //\n  TEX.resetEquationNumbers = function (n,keepLabels) {\n    AMS.startNumber = (n || 0);\n    if (!keepLabels) {AMS.labels = AMS.IDs = {}}\n  }\n\n  /******************************************************************************/\n\n  MathJax.Hub.Startup.signal.Post(\"TeX AMSmath Ready\");\n  \n});\n\nMathJax.Ajax.loadComplete(\"[MathJax]/extensions/TeX/AMSmath.js\");\n"]}]}