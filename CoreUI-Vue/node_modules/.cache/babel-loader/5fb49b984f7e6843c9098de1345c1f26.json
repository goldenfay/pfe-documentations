{"remainingRequest":"/home/hads/Documents/CoreUI-Vue/node_modules/babel-loader/lib/index.js!/home/hads/Downloads/pycharm-community-2020.1/plugins/python-ce/helpers/MathJax/extensions/TeX/noErrors.js","dependencies":[{"path":"/home/hads/Downloads/pycharm-community-2020.1/plugins/python-ce/helpers/MathJax/extensions/TeX/noErrors.js","mtime":1586259854000},{"path":"/home/hads/Documents/CoreUI-Vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hads/Documents/CoreUI-Vue/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hads/Downloads/pycharm-community-2020.1/plugins/python-ce/helpers/MathJax/extensions/TeX/noErrors.js"],"names":["HUB","HTML","VERSION","CONFIG","CombineConfig","disabled","multiLine","inlineDelimiters","style","NBSP","MathJax","Extension","version","config","Register","StartupHook","FORMAT","InputJax","TeX","formatError","Augment","err","math","displaystyle","script","apply","arguments","message","replace","signal","Post","delim","ElementJax","mml","merror","With","isError","Config","styles","Insert","Browser","isMSIE","MML","HTMLCSS","OutputJax","MATH","prototype","toHTML","MERROR","span","node","data","fontSize","HTMLcreateSpan","bbox","className","display","text","join","split","i","m","length","addText","addElement","isMathJax","HD","getHD","parentNode","W","getW","H","h","d","x","x_height","verticalAlign","Em","w","lw","rw","toSVG","Parent","type","offsetHeight","toNativeMML","appendChild","document","createElement","createTextNode","id","hasOwnProperty","ID","c","charAt","toUpperCase","PreviewHTML","toPreviewHTML","PHTMLcreateSpan","CommonHTML","CHTML","toCommonHTML","BBOX","zero","offsetWidth","em","H2","Startup","Hub","Ajax","loadComplete"],"mappings":"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","sourcesContent":["/* -*- Mode: Javascript; indent-tabs-mode:nil; js-indent-level: 2 -*- */\n/* vim: set ts=2 et sw=2 tw=80: */\n\n/*************************************************************\n *\n *  MathJax/extensions/TeX/noErrors.js\n *  \n *  Prevents the TeX error messages from being displayed and shows the\n *  original TeX code instead.  You can configure whether the dollar signs\n *  are shown or not for in-line math, and whether to put all the TeX on\n *  one line or use multiple-lines.\n *  \n *  To configure this extension, use\n *  \n *      MathJax.Hub.Config({\n *        TeX: {\n *          noErrors: {\n *            inlineDelimiters: [\"\",\"\"],   // or [\"$\",\"$\"] or [\"\\\\(\",\"\\\\)\"]\n *            multiLine: true,             // false for TeX on all one line\n *            style: {\n *              \"font-size\":   \"90%\",\n *              \"text-align\":  \"left\",\n *              \"color\":       \"black\",\n *              \"padding\":     \"1px 3px\",\n *              \"border\":      \"1px solid\"\n *                // add any additional CSS styles that you want\n *                //  (be sure there is no extra comma at the end of the last item)\n *            }\n *          }\n *        }\n *      });\n *  \n *  Display-style math is always shown in multi-line format, and without\n *  delimiters, as it will already be set off in its own centered\n *  paragraph, like standard display mathematics.\n *  \n *  The default settings place the invalid TeX in a multi-line box with a\n *  black border.  If you want it to look as though the TeX is just part of\n *  the paragraph, use\n *\n *      MathJax.Hub.Config({\n *        TeX: {\n *          noErrors: {\n *            inlineDelimiters: [\"$\",\"$\"],   // or [\"\",\"\"] or [\"\\\\(\",\"\\\\)\"]\n *            multiLine: false,\n *            style: {\n *              \"font-size\": \"normal\",\n *              \"border\": \"\"\n *            }\n *          }\n *        }\n *      });\n *  \n *  You may also wish to set the font family, as the default is \"serif\"\n *  \n *  ---------------------------------------------------------------------\n *  \n *  Copyright (c) 2009-2015 The MathJax Consortium\n * \n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n(function (HUB,HTML) {\n  var VERSION = \"2.6.0\";\n  \n  var CONFIG = HUB.CombineConfig(\"TeX.noErrors\",{\n    disabled: false,               // set to true to return to original error messages\n    multiLine: true,\n    inlineDelimiters: [\"\",\"\"],     // or use [\"$\",\"$\"] or [\"\\\\(\",\"\\\\)\"]\n    style: {\n      \"font-size\":   \"90%\",\n      \"text-align\":  \"left\",\n      \"color\":       \"black\",\n      \"padding\":     \"1px 3px\",\n      \"border\":      \"1px solid\"\n    }\n  });\n  \n  var NBSP = \"\\u00A0\";\n\n  //\n  //  The configuration defaults, augmented by the user settings\n  //  \n  MathJax.Extension[\"TeX/noErrors\"] = {\n    version: VERSION,\n    config: CONFIG\n  };\n  \n  HUB.Register.StartupHook(\"TeX Jax Ready\",function () {\n    var FORMAT = MathJax.InputJax.TeX.formatError;\n    \n    MathJax.InputJax.TeX.Augment({\n      //\n      //  Make error messages be the original TeX code\n      //  Mark them as errors and multi-line or not, and for\n      //  multi-line TeX, make spaces non-breakable (to get formatting right)\n      //\n      formatError: function (err,math,displaystyle,script) {\n        if (CONFIG.disabled) {return FORMAT.apply(this,arguments)}\n        var message = err.message.replace(/\\n.*/,\"\");\n        HUB.signal.Post([\"TeX Jax - parse error\",message,math,displaystyle,script]);\n        var delim = CONFIG.inlineDelimiters;\n        var multiLine = (displaystyle || CONFIG.multiLine);\n        if (!displaystyle) {math = delim[0] + math + delim[1]}\n        if (multiLine) {math = math.replace(/ /g,NBSP)} else {math = math.replace(/\\n/g,\" \")}\n        return MathJax.ElementJax.mml.merror(math).With({isError:true, multiLine: multiLine});\n      }\n    });\n  });\n  \n  /*******************************************************************\n   *\n   *   Fix HTML-CSS output\n   */\n\n  HUB.Register.StartupHook(\"HTML-CSS Jax Config\",function () {\n    HUB.Config({\n      \"HTML-CSS\": {\n        styles: {\n          \".MathJax .noError\": HUB.Insert({\n            \"vertical-align\": (HUB.Browser.isMSIE && CONFIG.multiLine ? \"-2px\" : \"\")\n          },CONFIG.style)\n        }\n      }\n    });\n  });\n    \n  HUB.Register.StartupHook(\"HTML-CSS Jax Ready\",function () {\n    var MML = MathJax.ElementJax.mml;\n    var HTMLCSS = MathJax.OutputJax[\"HTML-CSS\"];\n    \n    var MATH   = MML.math.prototype.toHTML,\n        MERROR = MML.merror.prototype.toHTML;\n        \n    //\n    // Override math toHTML routine so that error messages\n    //   don't have the clipping and other unneeded overhead\n    //\n    MML.math.Augment({\n      toHTML: function (span,node) {\n        var data = this.data[0];\n        if (data && data.data[0] && data.data[0].isError) {\n          span.style.fontSize = \"\";\n          span = this.HTMLcreateSpan(span);\n          span.bbox = data.data[0].toHTML(span).bbox;\n        } else {\n          span = MATH.apply(this,arguments);\n        }\n        return span;\n      }\n    });\n    \n    //\n    //  Override merror toHTML routine so that it puts out the\n    //    TeX code in an inline-block with line breaks as in the original\n    //\n    MML.merror.Augment({\n      toHTML: function (span) {\n        if (!this.isError) {return MERROR.apply(this,arguments)}\n        span = this.HTMLcreateSpan(span); span.className = \"noError\"\n        if (this.multiLine) {span.style.display = \"inline-block\"}\n        var text = this.data[0].data[0].data.join(\"\").split(/\\n/);\n        for (var i = 0, m = text.length; i < m; i++) {\n          HTMLCSS.addText(span,text[i]);\n          if (i !== m-1) {HTMLCSS.addElement(span,\"br\",{isMathJax:true})}\n        }\n        var HD = HTMLCSS.getHD(span.parentNode), W = HTMLCSS.getW(span.parentNode);\n        if (m > 1) {\n          var H = (HD.h + HD.d)/2, x = HTMLCSS.TeX.x_height/2;\n          span.parentNode.style.verticalAlign = HTMLCSS.Em(HD.d+(x-H));\n          HD.h = x + H; HD.d = H - x;\n        }\n        span.bbox = {h: HD.h, d: HD.d, w: W, lw: 0, rw: W};\n        return span;\n      }\n    });\n\n  });\n  \n  /*******************************************************************\n   *\n   *   Fix SVG output\n   */\n\n  HUB.Register.StartupHook(\"SVG Jax Config\",function () {\n    HUB.Config({\n      \"SVG\": {\n        styles: {\n          \".MathJax_SVG .noError\": HUB.Insert({\n            \"vertical-align\": (HUB.Browser.isMSIE && CONFIG.multiLine ? \"-2px\" : \"\")\n          },CONFIG.style)\n        }\n      }\n    });\n  });\n\n  HUB.Register.StartupHook(\"SVG Jax Ready\",function () {\n    var MML = MathJax.ElementJax.mml;\n    \n    var MATH   = MML.math.prototype.toSVG,\n        MERROR = MML.merror.prototype.toSVG;\n        \n    //\n    // Override math toSVG routine so that error messages\n    //   don't have the clipping and other unneeded overhead\n    //\n    MML.math.Augment({\n      toSVG: function (span,node) {\n        var data = this.data[0];\n        if (data && data.data[0] && data.data[0].isError)\n          {span = data.data[0].toSVG(span)} else {span = MATH.apply(this,arguments)}\n        return span;\n      }\n    });\n    \n    //\n    //  Override merror toSVG routine so that it puts out the\n    //    TeX code in an inline-block with line breaks as in the original\n    //\n    MML.merror.Augment({\n      toSVG: function (span) {\n        if (!this.isError || this.Parent().type !== \"math\") {return MERROR.apply(this,arguments)}\n        span = HTML.addElement(span,\"span\",{className: \"noError\", isMathJax:true});\n        if (this.multiLine) {span.style.display = \"inline-block\"}\n        var text = this.data[0].data[0].data.join(\"\").split(/\\n/);\n        for (var i = 0, m = text.length; i < m; i++) {\n          HTML.addText(span,text[i]);\n          if (i !== m-1) {HTML.addElement(span,\"br\",{isMathJax:true})}\n        }\n        if (m > 1) {\n          var H = span.offsetHeight/2;\n          span.style.verticalAlign = (-H+(H/m))+\"px\";\n        }\n        return span;\n      }\n    });\n\n  });\n  \n  /*******************************************************************\n   *\n   *   Fix NativeMML output\n   */\n\n  HUB.Register.StartupHook(\"NativeMML Jax Ready\",function () {\n    var MML = MathJax.ElementJax.mml;\n    var CONFIG = MathJax.Extension[\"TeX/noErrors\"].config;\n    \n    var MATH   = MML.math.prototype.toNativeMML,\n        MERROR = MML.merror.prototype.toNativeMML;\n\n    //\n    // Override math toNativeMML routine so that error messages\n    //   don't get placed inside math tags.\n    //\n    MML.math.Augment({\n      toNativeMML: function (span) {\n        var data = this.data[0];\n        if (data && data.data[0] && data.data[0].isError)\n          {span = data.data[0].toNativeMML(span)} else {span = MATH.apply(this,arguments)}\n        return span;\n      }\n    });\n    \n    //\n    //  Override merror toNativeMML routine so that it puts out the\n    //    TeX code in an inline-block with line breaks as in the original\n    //\n    MML.merror.Augment({\n      toNativeMML: function (span) {\n        if (!this.isError) {return MERROR.apply(this,arguments)}\n        span = span.appendChild(document.createElement(\"span\"));\n        var text = this.data[0].data[0].data.join(\"\").split(/\\n/);\n        for (var i = 0, m = text.length; i < m; i++) {\n          span.appendChild(document.createTextNode(text[i]));\n          if (i !== m-1) {span.appendChild(document.createElement(\"br\"))}\n        }\n        if (this.multiLine) {\n          span.style.display = \"inline-block\";\n          if (m > 1) {span.style.verticalAlign = \"middle\"}\n        }\n        for (var id in CONFIG.style) {if (CONFIG.style.hasOwnProperty(id)) {\n          var ID = id.replace(/-./g,function (c) {return c.charAt(1).toUpperCase()});\n          span.style[ID] = CONFIG.style[id];\n        }}\n        return span;\n      }\n    });\n    \n  });\n\n  /*******************************************************************\n   *\n   *   Fix PreviewHTML output\n   */\n\n  HUB.Register.StartupHook(\"PreviewHTML Jax Config\",function () {\n    HUB.Config({\n      PreviewHTML: {\n        styles: {\n          \".MathJax_PHTML .noError\": HUB.Insert({\n            \"vertical-align\": (HUB.Browser.isMSIE && CONFIG.multiLine ? \"-2px\" : \"\")\n          },CONFIG.style)\n        }\n      }\n    });\n  });\n    \n  HUB.Register.StartupHook(\"PreviewHTML Jax Ready\",function () {\n    var MML = MathJax.ElementJax.mml;\n    var HTML = MathJax.HTML;\n    \n    var MERROR = MML.merror.prototype.toPreviewHTML;\n        \n    //\n    //  Override merror toPreviewHTML routine so that it puts out the\n    //    TeX code in an inline-block with line breaks as in the original\n    //\n    MML.merror.Augment({\n      toPreviewHTML: function (span) {\n        if (!this.isError) return MERROR.apply(this,arguments);\n        span = this.PHTMLcreateSpan(span); span.className = \"noError\"\n        if (this.multiLine) span.style.display = \"inline-block\";\n        var text = this.data[0].data[0].data.join(\"\").split(/\\n/);\n        for (var i = 0, m = text.length; i < m; i++) {\n          HTML.addText(span,text[i]);\n          if (i !== m-1) {HTML.addElement(span,\"br\",{isMathJax:true})}\n        }\n        return span;\n      }\n    });\n\n  });\n  \n  /*******************************************************************\n   *\n   *   Fix CommonHTML output\n   */\n\n  HUB.Register.StartupHook(\"CommonHTML Jax Config\",function () {\n    HUB.Config({\n      CommonHTML: {\n        styles: {\n          \".mjx-chtml .mjx-noError\": HUB.Insert({\n            \"line-height\": 1.2,\n            \"vertical-align\": (HUB.Browser.isMSIE && CONFIG.multiLine ? \"-2px\" : \"\")\n          },CONFIG.style)\n        }\n      }\n    });\n  });\n    \n  HUB.Register.StartupHook(\"CommonHTML Jax Ready\",function () {\n    var MML = MathJax.ElementJax.mml;\n    var CHTML = MathJax.OutputJax.CommonHTML;\n    var HTML = MathJax.HTML;\n    \n    var MERROR = MML.merror.prototype.toCommonHTML;\n        \n    //\n    //  Override merror toCommonHTML routine so that it puts out the\n    //    TeX code in an inline-block with line breaks as in the original\n    //\n    MML.merror.Augment({\n      toCommonHTML: function (node) {\n        if (!this.isError) return MERROR.apply(this,arguments);\n        node = CHTML.addElement(node,\"mjx-noError\");\n        var text = this.data[0].data[0].data.join(\"\").split(/\\n/);\n        for (var i = 0, m = text.length; i < m; i++) {\n          HTML.addText(node,text[i]);\n          if (i !== m-1) {CHTML.addElement(node,\"br\",{isMathJax:true})}\n        }\n        var bbox = this.CHTML = CHTML.BBOX.zero();\n        bbox.w = (node.offsetWidth)/CHTML.em;\n        if (m > 1) {\n          var H2 = 1.2*m/2;\n          bbox.h = H2+.25; bbox.d = H2-.25;\n          node.style.verticalAlign = CHTML.Em(.45-H2);\n        } else {\n          bbox.h = 1; bbox.d = .2 + 2/CHTML.em;\n        }\n        return node;\n      }\n    });\n\n  });\n  \n  /*******************************************************************/\n  \n  HUB.Startup.signal.Post(\"TeX noErrors Ready\");\n\n})(MathJax.Hub,MathJax.HTML);\n  \n\nMathJax.Ajax.loadComplete(\"[MathJax]/extensions/TeX/noErrors.js\");\n"]}]}