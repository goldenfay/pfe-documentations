{"remainingRequest":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/babel-loader/lib/index.js!/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hads/Documents/pfe-documentations/CoreUI-Vue/src/views/crud/ListSensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/src/views/crud/ListSensor.vue","mtime":1595882034699},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBTZW5zb3JDYXJkIGZyb20gJ0AvY29tcG9uZW50cy9TZW5zb3JDYXJkLnZ1ZSc7CmltcG9ydCBCYXNlSWNvbiBmcm9tICdAL2NvbXBvbmVudHMvQmFzZUljb24udnVlJzsKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFNlbnNvckNhcmQ6IFNlbnNvckNhcmQsCiAgICBCYXNlSWNvbjogQmFzZUljb24KICB9LAogIHByb3BzOiB7CiAgICBoaWdobGlnaHRMaW5rc1RleHQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiSGlnaGxpZ2h0IExpbmtzIgogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdmZXRjaFNlbnNvcnMnLCB7CiAgICAgIHBlclBhZ2U6IDQsCiAgICAgIHBhZ2U6IHRoaXMucGFnZQogICAgfSk7CiAgICB0aGlzLmhpZ2hsaWdodExpbmtzVGV4dCA9ICJpaGFiIjsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHsKICAgIHBhZ2U6IGZ1bmN0aW9uIHBhZ2UoKSB7CiAgICAgIHJldHVybiBwYXJzZUludCh0aGlzLiRyb3V0ZS5xdWVyeS5wYWdlKSB8fCAxOwogICAgfSwKICAgIGhhc05leHRQYWdlOiBmdW5jdGlvbiBoYXNOZXh0UGFnZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuc2Vuc29yc1RvdGFsID4gdGhpcy5wYWdlICogNDsKICAgIH0KICB9LCBtYXBTdGF0ZShbJ3NlbnNvcnMnLCAnc2Vuc29yc1RvdGFsJ10pKQp9Ow=="},{"version":3,"sources":["ListSensor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA,OAAA,UAAA,MAAA,6BAAA;AACA,OAAA,QAAA,MAAA,2BAAA;AAEA,SAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,QAAA,EAAA;AAFA,GADA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GALA;AAWA,EAAA,OAXA,qBAWA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EAAA;AACA,MAAA,OAAA,EAAA,CADA;AAEA,MAAA,IAAA,EAAA,KAAA;AAFA,KAAA;AAIA,SAAA,kBAAA,GAAA,MAAA;AACA,GAjBA;AAkBA,EAAA,QAAA;AACA,IAAA,IADA,kBACA;AACA,aAAA,QAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA,aAAA,KAAA,YAAA,GAAA,KAAA,IAAA,GAAA,CAAA;AACA;AANA,KAOA,QAAA,CAAA,CAAA,SAAA,EAAA,cAAA,CAAA,CAPA;AAlBA,CAAA","sourcesContent":["<template>\n  <div>   \n    <CRow>\n      <!--CCol  sm=\"6\" md=\"6\">\n          \t    <h1 >Sensors Listing</h1>\n          \t    <button class=\"btn btn-rounded\" type=\"text\" :data-tooltip=\"highlightLinksText\">\n          \t    \tYOP\n          \t    </button>\n          \n          \t\t<SensorCard v-for=\"sensor in sensors\" :key=\"sensor.id\" :sensor=\"sensor\"/>\n          \t\t<template v-if=\"page != 1\">\n\t\t\t      <router-link :to=\"{ name: 'ListSensor', query: { page: page - 1 } }\" rel=\"prev\">\n\t\t\t      Prev Page</router-link>\n\t\t\t    <template v-if=\"hasNextPage\"> | </template>\n\t\t\t    </template>\n\t\t\t    <router-link v-if=\"hasNextPage\" :to=\"{ name: 'ListSensor', query: { page: page + 1 } }\" rel=\"next\">\n\t\t\t      Next Page</router-link>\n      </CCol-->\n  <CCol sm=\"4\" md=\"4\">   \n      <div class=\"card\">\n  <div class=\"card-body text-center\">\n    <h5 class=\"card-title\">Card title</h5>\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n          <div class=\"col-md-6\">\n              <button class=\"btn btn-primary\">Start </button>\n          </div>\n          <div class=\"col-md-6\">\n              <button class=\"btn btn-primary\">Start </button>\n          </div>\n      </div>\n    </div>\n  </div>\n\n\n</div>\n</CCol>\n <CCol sm=\"4\" md=\"4\">   \n      <div class=\"card\">\n  <div class=\"card-block\">\n      <img src=\"@/../public/img/avatars/crowd.jpg\" class=\"card-img-top\" alt=\"...\">\n\n  </div>\n  <div class=\"card-body text-center\">\n<i class=\"fa fa-trash-o fa-lg\">ho</i>    <h5 class=\"card-title\">Rue Didouche Morade</h5>\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n    <p>\n            <BaseIcon name=\"home\" width=20 height=20> 25  attending</BaseIcon>\n<svg width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" class=\"bi bi-bag\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path fill-rule=\"evenodd\" d=\"M14 5H2v9a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V5zM1 4v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4H1z\"/>\n  <path d=\"M8 1.5A2.5 2.5 0 0 0 5.5 4h-1a3.5 3.5 0 1 1 7 0h-1A2.5 2.5 0 0 0 8 1.5z\"/>\n</svg>\n    </p>\n  </div>\n  <div class=\"card-body\">\n      <button type=\"button\" class=\"btn btn-primary btn-block\">Commencer le Traitement</button>\n\n      <button type=\"button\" class=\"btn btn-secondary btn-block\">Block level button</button>\n  </div>\n</div>\n</CCol>\n <CCol sm=\"4\" md=\"4\">   \n      <div class=\"card\">\n  <img src=\"@/../public/img/avatars/crowd.jpg\" class=\"card-img-top\" alt=\"...\">\n  <div class=\"card-body text-center\">\n    <h5 class=\"card-title\">Card title</h5>\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n  </div>\n  <div class=\"card-body\">\n    <a href=\"#\" class=\"card-link\">Card link</a>\n    <a href=\"#\" class=\"card-link\">Another link</a>\n  </div>\n</div>\n</CCol>\n    </CRow>      \t\n  </div>\n</template>\n\n<script>\nimport SensorCard from '@/components/SensorCard.vue'\nimport BaseIcon from '@/components/BaseIcon.vue'\n\nimport { mapState } from 'vuex'\n\nexport default {\n  components: {\n    SensorCard,\n    BaseIcon\n  },\n  props:{\n  \thighlightLinksText: {\n      type: String,\n      default: \"Highlight Links\"\n    }\n  },\n  created() {\n  \tthis.$store.dispatch('fetchSensors',{\n  \t\tperPage: 4,\n  \t\tpage: this.page\n  \t})\n  \tthis.highlightLinksText=\"ihab\"\n  },\n  computed:{\n  \tpage(){\n  \t\treturn parseInt(this.$route.query.page) || 1\n  \t},\n  \thasNextPage() {\n      return this.sensorsTotal > this.page * 4\n    },\n    ...mapState(['sensors', 'sensorsTotal'])\n  }\n}\n</script>\n\n<style scoped>\n\t  .accessibility-menu-item-icon {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  [data-tooltip] {\n    position: relative;\n    z-index: 2;\n    cursor: pointer;\n  }\n  /* Hide the tooltip content by default */\n  [data-tooltip]:before,\n  [data-tooltip]:after {\n    visibility: hidden;\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\n    filter: progid: DXImageTransform.Microsoft.Alpha(Opacity=0);\n    opacity: 0;\n    pointer-events: none;\n  }\n  /* Position tooltip above the element */\n  [data-tooltip]:before {\n    position: absolute;\n    bottom: 105%;\n    left: 50%;\n    margin-bottom: 5px;\n    margin-left: -80px;\n    padding: 7px;\n    width: 160px;\n    -webkit-border-radius: 4px;\n    -moz-border-radius: 4px;\n    border-radius: 4px;\n    background-color: #000;\n    background-color: hsla(0, 0%, 20%, 0.9);\n    color: #fff;\n    content: attr(data-tooltip);\n    text-align: center;\n    font-size: 14px;\n    line-height: 1.2;\n  }\n  /* Triangle hack to make tooltip look like a speech bubble */\n  [data-tooltip]:after {\n    position: absolute;\n    bottom: 105%;\n    left: 50%;\n    margin-left: -5px;\n    width: 0;\n    border-top: 5px solid #000;\n    border-top: 5px solid hsla(0, 0%, 20%, 0.9);\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    content: \" \";\n    font-size: 0;\n    line-height: 0;\n  }\n  /* Show tooltip content on hover */\n  [data-tooltip]:hover:before,\n  [data-tooltip]:hover:after {\n    visibility: visible;\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=100)\";\n    filter: progid: DXImageTransform.Microsoft.Alpha(Opacity=100);\n    opacity: 1;\n  }\n  .card:hover {\n  transform: scale(1.04);\n  box-shadow: 5px 5px 15px rgba(0,0,0,0.6);\n}\n.card{\n border-radius: 18px;\n}\n.btn-primary:hover{\n  background-color:green;\n  border-color: green;\n}\n</style>  \n\n<style>\n  @import '@/assets/scss/font-awesome.min.css';\n\n</style>"],"sourceRoot":"src/views/crud"}]}