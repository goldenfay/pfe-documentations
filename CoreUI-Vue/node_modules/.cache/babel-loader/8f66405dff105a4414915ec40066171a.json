{"remainingRequest":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/babel-loader/lib/index.js!/home/hads/Documents/pfe-documentations/CoreUI-Vue/src/services/CrowdServices.js","dependencies":[{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/src/services/CrowdServices.js","mtime":1595083223561},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIGFwaUNsaWVudCA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMCIsCiAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLAogIGhlYWRlcnM6IHsKICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IHsKICBnZXRTZW5zb3JzOiBmdW5jdGlvbiBnZXRTZW5zb3JzKCkgewogICAgcmV0dXJuIGFwaUNsaWVudC5nZXQoJy9jcm93ZHMnKTsKICB9LAogIHBvc3RTZW5zb3JEYXRhOiBmdW5jdGlvbiBwb3N0U2Vuc29yRGF0YShkYXRhKSB7CiAgICBhcGlDbGllbnQucG9zdCgnL2Nyb3dkcycsIGRhdGEpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICBjb25zb2xlLndhcm4ocmVzdWx0KTsKICAgIH0pOwogIH0KICAvKmdldENhcEltYWdlKCl7CiAgCXJldHVybiBhcGlDaWxlbnQuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjMwMDAvZXZlbnRzJykKICAJCS50aGVuKHJlc3BvbnNlID0+ewogIAkJCWNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpCiAgCQl9KQogIAkJLmNhdGNoKGVycm9yID0+ewogIAkJCWNvbnNvbGUubG9nKGVycm9yKQogIAkJfSkKICB9Ki8KCn07"},{"version":3,"sources":["/home/hads/Documents/pfe-documentations/CoreUI-Vue/src/services/CrowdServices.js"],"names":["axios","apiClient","create","baseURL","withCredentials","headers","Accept","getSensors","get","postSensorData","data","post","then","result","console","warn"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AAE9BC,EAAAA,OAAO,yBAFuB;AAG9BC,EAAAA,eAAe,EAAE,IAHa;AAI9BC,EAAAA,OAAO,EAAC;AACPC,IAAAA,MAAM,EAAE,kBADD;AAEP,oBAAgB;AAFT;AAJsB,CAAb,CAAlB;AASA,eAAc;AAEbC,EAAAA,UAFa,wBAED;AACX,WAAON,SAAS,CAACO,GAAV,CAAc,SAAd,CAAP;AACA,GAJY;AAKbC,EAAAA,cALa,0BAKEC,IALF,EAKO;AAEnBT,IAAAA,SAAS,CAACU,IAAV,CAAe,SAAf,EAAyBD,IAAzB,EACAE,IADA,CACK,UAACC,MAAD,EAAU;AACdC,MAAAA,OAAO,CAACC,IAAR,CAAaF,MAAb;AACA,KAHD;AAIA;AAID;;;;;;;;;;AAfa,CAAd","sourcesContent":["import axios from 'axios'\n\nconst apiClient = axios.create({\n\t\n\tbaseURL: `http://localhost:3000`,\n\twithCredentials: true,\n\theaders:{\n\t\tAccept: 'application/json',\n\t\t'Content-Type': 'application/json'\n\t}\n})\nexport default{\n\t\n\tgetSensors(){ \n\t\treturn apiClient.get('/crowds')\n\t},\n\tpostSensorData(data){\n\n\t\tapiClient.post('/crowds',data).\n\t\tthen((result)=>{\n\t\t\tconsole.warn(result)\n\t\t})\n\t}\n\n\n\n\t/*getCapImage(){\n\t\treturn apiCilent.get('http://localhost:3000/events')\n\t\t\t.then(response =>{\n\t\t\t\tconsole.log(response.data)\n\t\t\t})\n\t\t\t.catch(error =>{\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t}*/\n}\n\n"]}]}