{"remainingRequest":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/babel-loader/lib/index.js!/home/hads/Documents/pfe-documentations/CoreUI-Vue/src/services/CrowdServices.js","dependencies":[{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/src/services/CrowdServices.js","mtime":1595264718487},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hads/Documents/pfe-documentations/CoreUI-Vue/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIGFwaUNsaWVudCA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMCIsCiAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLAogIGhlYWRlcnM6IHsKICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IHsKICBnZXRTZW5zb3JzUGFnaW5hdGlvbjogZnVuY3Rpb24gZ2V0U2Vuc29yc1BhZ2luYXRpb24ocGVyUGFnZSwgcGFnZSkgewogICAgcmV0dXJuIGFwaUNsaWVudC5nZXQoJy9jcm93ZHM/X2xpbWl0PScgKyBwZXJQYWdlICsgIiZfcGFnZT0iICsgcGFnZSk7CiAgfSwKICBnZXRTZW5zb3JzOiBmdW5jdGlvbiBnZXRTZW5zb3JzKCkgewogICAgcmV0dXJuIGFwaUNsaWVudC5nZXQoJy9jcm93ZHMnKTsKICB9LAogIHBvc3RTZW5zb3JEYXRhOiBmdW5jdGlvbiBwb3N0U2Vuc29yRGF0YShkYXRhKSB7CiAgICBhcGlDbGllbnQucG9zdCgnL2Nyb3dkcycsIGRhdGEpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICBjb25zb2xlLndhcm4ocmVzdWx0KTsKICAgIH0pOwogIH0sCiAgcG9zdEVkaXREYXRhOiBmdW5jdGlvbiBwb3N0RWRpdERhdGEoaWQsIGRhdGEpIHsKICAgIGFwaUNsaWVudC5wdXQoJy9jcm93ZHMvJyArIGlkLCBkYXRhKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgY29uc29sZS53YXJuKHJlc3VsdCk7CiAgICB9KTsKICB9LAogIGRlbGV0ZVNlbnNvclJlcXVlc3Q6IGZ1bmN0aW9uIGRlbGV0ZVNlbnNvclJlcXVlc3QoaWQpIHsKICAgIGFwaUNsaWVudC5kZWxldGUoJy9jcm93ZHMvJyArIGlkKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgY29uc29sZS53YXJuKHJlc3VsdCk7CiAgICB9KTsKICB9CiAgLypnZXRDYXBJbWFnZSgpewogIAlyZXR1cm4gYXBpQ2lsZW50LmdldCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2V2ZW50cycpCiAgCQkudGhlbihyZXNwb25zZSA9PnsKICAJCQljb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKQogIAkJfSkKICAJCS5jYXRjaChlcnJvciA9PnsKICAJCQljb25zb2xlLmxvZyhlcnJvcikKICAJCX0pCiAgfSovCgp9Ow=="},{"version":3,"sources":["/home/hads/Documents/pfe-documentations/CoreUI-Vue/src/services/CrowdServices.js"],"names":["axios","apiClient","create","baseURL","withCredentials","headers","Accept","getSensorsPagination","perPage","page","get","getSensors","postSensorData","data","post","then","result","console","warn","postEditData","id","put","deleteSensorRequest","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AAE9BC,EAAAA,OAAO,yBAFuB;AAG9BC,EAAAA,eAAe,EAAE,IAHa;AAI9BC,EAAAA,OAAO,EAAC;AACPC,IAAAA,MAAM,EAAE,kBADD;AAEP,oBAAgB;AAFT;AAJsB,CAAb,CAAlB;AASA,eAAc;AACbC,EAAAA,oBADa,gCACQC,OADR,EACiBC,IADjB,EACsB;AAClC,WAAOR,SAAS,CAACS,GAAV,CAAc,oBAAkBF,OAAlB,GAA0B,SAA1B,GAAoCC,IAAlD,CAAP;AACA,GAHY;AAIbE,EAAAA,UAJa,wBAID;AACX,WAAOV,SAAS,CAACS,GAAV,CAAc,SAAd,CAAP;AACA,GANY;AAObE,EAAAA,cAPa,0BAOEC,IAPF,EAOO;AAEnBZ,IAAAA,SAAS,CAACa,IAAV,CAAe,SAAf,EAAyBD,IAAzB,EACAE,IADA,CACK,UAACC,MAAD,EAAU;AACdC,MAAAA,OAAO,CAACC,IAAR,CAAaF,MAAb;AACA,KAHD;AAIA,GAbY;AAcbG,EAAAA,YAda,wBAcAC,EAdA,EAcGP,IAdH,EAcQ;AACpBZ,IAAAA,SAAS,CAACoB,GAAV,CAAc,aAAWD,EAAzB,EAA4BP,IAA5B,EACAE,IADA,CACK,UAACC,MAAD,EAAU;AACdC,MAAAA,OAAO,CAACC,IAAR,CAAaF,MAAb;AACA,KAHD;AAIA,GAnBY;AAoBbM,EAAAA,mBApBa,+BAoBOF,EApBP,EAoBU;AACtBnB,IAAAA,SAAS,CAACsB,MAAV,CAAiB,aAAWH,EAA5B,EACAL,IADA,CACK,UAACC,MAAD,EAAU;AACdC,MAAAA,OAAO,CAACC,IAAR,CAAaF,MAAb;AACA,KAHD;AAIA;AAID;;;;;;;;;;AA7Ba,CAAd","sourcesContent":["import axios from 'axios'\n\nconst apiClient = axios.create({\n\t\n\tbaseURL: `http://localhost:3000`,\n\twithCredentials: true,\n\theaders:{\n\t\tAccept: 'application/json',\n\t\t'Content-Type': 'application/json'\n\t}\n})\nexport default{\n\tgetSensorsPagination(perPage, page){\n\t\treturn apiClient.get('/crowds?_limit='+perPage+\"&_page=\"+page)\n\t},\n\tgetSensors(){ \n\t\treturn apiClient.get('/crowds')\n\t},\n\tpostSensorData(data){\n\n\t\tapiClient.post('/crowds',data).\n\t\tthen((result)=>{\n\t\t\tconsole.warn(result)\n\t\t})\n\t},\n\tpostEditData(id,data){\n\t\tapiClient.put('/crowds/'+id,data).\n\t\tthen((result)=>{\n\t\t\tconsole.warn(result)\n\t\t})\n\t},\n\tdeleteSensorRequest(id){\n\t\tapiClient.delete('/crowds/'+id).\n\t\tthen((result)=>{\n\t\t\tconsole.warn(result)\n\t\t})\n\t}\n\n\n\n\t/*getCapImage(){\n\t\treturn apiCilent.get('http://localhost:3000/events')\n\t\t\t.then(response =>{\n\t\t\t\tconsole.log(response.data)\n\t\t\t})\n\t\t\t.catch(error =>{\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t}*/\n}\n\n"]}]}