{"remainingRequest":"/home/hads/Documents/CoreUI-Vue/node_modules/babel-loader/lib/index.js!/home/hads/Downloads/pycharm-community-2020.1/plugins/python-ce/helpers/MathJax/MathJax.js","dependencies":[{"path":"/home/hads/Downloads/pycharm-community-2020.1/plugins/python-ce/helpers/MathJax/MathJax.js","mtime":1586259854000},{"path":"/home/hads/Documents/CoreUI-Vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hads/Documents/CoreUI-Vue/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hads/Downloads/pycharm-community-2020.1/plugins/python-ce/helpers/MathJax/MathJax.js"],"names":["document","getElementById","childNodes","createElement","window","MathJax","Hub","AuthorConfig","version","fileversion","cdnVersion","cdnFileVersions","BASENAME","BASE","PROTO","OBJECT","def","obj","constructor","id","hasOwnProperty","CONSTRUCTOR","arguments","callee","Init","call","Object","Subclass","classdef","SUPER","Augment","protoFunction","can","has","isa","prototype","args","length","apply","toString","fn","method","property","SimpleSUPER","define","src","dst","wrap","f","match","result","err","CALLBACK","data","cb","execute","isCallback","hook","object","called","autoReset","concat","slice","reset","ISCALLBACK","EVAL","code","eval","TESTEVAL","__TeSt_VaR__","error","execScript","__code","__result","Error","head","getElementsByTagName","body","script","appendChild","createTextNode","removeChild","USING","i","Array","DELAY","time","callback","timeout","setTimeout","WAITFOR","signal","WAITSIGNAL","pending","WAITEXECUTE","signals","oldExecute","m","push","AFTER","HOOKS","hooks","remove","running","Add","priority","splice","Remove","Execute","callbacks","RemovePending","sort","EXECUTEHOOKS","handler","QUEUE","queue","Push","Process","Suspend","Resume","wait","SIGNAL","name","posted","listeners","posting","Post","message","forget","Clear","Interest","ignorePast","NoInterest","MessageHook","msg","ExecuteHooks","type","RemoveHook","find","Callback","CallBack","Delay","After","Queue","Signal","Hooks","isSafari2","navigator","vendor","vendorSub","sheets","HEAD","styleSheets","SCRIPTS","REMOVESCRIPTS","Ajax","PATH","loaded","loading","loadHooks","styleDelay","config","root","path","STATUS","OK","ERROR","fileURL","file","substr","fileName","url","fileRev","rev","urlRev","Require","toUpperCase","split","pop","FILE","Load","addHook","loader","LoadHook","removeHook","Preloading","preloaded","JS","status","Message","File","onerror","CSS","link","rel","href","timer","create","node","nodeName","styleSheet","cssText","chrome","start","checkSafari2","checkLength","AJAX","check","delay","total","Math","floor","loadTimeout","loadComplete","cssRules","isStyle","sheet","rules","clearTimeout","loadError","Set","Styles","styles","styleString","StyleString","style","string","join","HTML","Element","contents","replace","ucMatch","Insert","setAttribute","setScript","c","addElement","span","TextNode","text","addText","setScriptBug","firstChild","getScript","innerHTML","Cookie","prefix","expires","keys","cookie","escape","Date","setDate","getDate","toGMTString","Get","pattern","RegExp","exec","unescape","value","parseFloat","Localization","locale","directory","strings","menuTitle","isLoaded","SPLIT","regex","last","lastIndex","index","_","phrase","processSnippet","processString","lookupPhrase","domain","parts","charAt","number","n","plural","plurals","snippet","part","processMarkdown","markdownPattern","target","concatString","load","loadDomain","RestartAfter","localeData","domains","domainData","loadFile","dir","Try","restart","resetLocale","toLowerCase","dashPos","lastIndexOf","substring","remap","setLocale","Menu","addTranslation","definition","isNew","menu","CreateLocaleMenu","setCSS","div","fontFamily","fontDirection","direction","textAlign","ready","log","current","textNodeBug","position","left","bottom","border","margin","padding","color","width","top","browsers","MSIE","browser","msieFixedPositionBug","documentMode","quirks","compatMode","Chrome","parentNode","frame","attachEvent","addDiv","removeAttribute","zIndex","height","MoveFrame","display","parent","insertBefore","documentElement","scrollLeft","scrollTop","clientWidth","clientHeight","localize","filterText","messageStyle","processing","typesetting","clearDelay","restarted","cleared","filteredText","next","prev","nodeValue","Log","jax","extensions","preJax","postJax","displayAlign","displayIndent","preRemoveClass","showProcessingMessages","delayStartupUntil","skipStartupTypeset","elements","positionToHash","showMathMenu","showMathMenuMSIE","menuSettings","zoom","CTRL","ALT","CMD","Shift","discoverable","zscale","renderer","font","context","mpContext","mpMouse","texHints","FastPreview","assistiveMML","inTabOrder","semantics","errorSettings","ignoreMMLattributes","preProcessors","inputJax","outputJax","order","processSectionDelay","processUpdateTime","processUpdateDelay","Config","CombineConfig","Register","PreProcessor","StartupHook","Startup","UnRegister","getAllJax","element","scripts","elementScripts","elementJax","getJaxByType","mimeType","getJaxByInputType","getJaxFor","isMathJaxNode","isMathJax","jaxID","OutputJax","getJaxFromMath","isJax","tagName","state","ElementJax","STATE","PROCESSED","className","setRenderer","unshift","Typeset","isReady","ec","elementCallback","count","PreProcess","takeAction","Update","Reprocess","Rerender","action","getTime","j","jaxIDs","scriptAction","needsUpdate","UPDATE","OUTPUT","prepareScripts","disabled","hover","Extension","MathEvents","Hover","ClearHover","PENDING","checkScriptSiblings","checked","pre","previousSibling","post","nextSibling","preview","processInput","input","Attach","saveScript","postInputHooks","now","processError","prepareOutput","JAX","lastPrepError","processOutput","inputID","processMessage","formatError","LOCALIZE","arg1","arg2","sourceURL","line","lineNumber","Jax","errorText","messageId","EVENT","Event","HUB","oncontextmenu","onmousedown","Mousedown","onkeydown","Keydown","tabIndex","getTabOrder","lastError","e","isHTMLCollection","HTMLCollection2Array","alreadyDone","contains","msieHTMLCollectionBug","HTMLCollection","nodes","NODES","SplitList","String","list","trim","Configured","params","files","URL","THIS","loadArray","ConfigDelay","onload","ConfigBlocks","SETTINGS","CHTMLpreview","AssistiveMML","k","Extensions","registered","Hash","location","hash","scrollIntoView","a","HashCheck","hashCheck","MenuZoom","MathMenu","MathZoom","onLoad","readyState","Browser","isMSIE","addEventListener","noDOMContentEvent","synchronous","ROOT","JAXFILE","require","cdef","cObject","ndef","Translate","mimetype","copyTranslate","preProcess","preTranslate","postProcess","postTranslate","extensionDir","InputJax","sourceMenuTitle","SourceElement","originalText","fontDir","isPacked","imageDir","Text","keep","clear","Detach","Clone","GetID","newID","ID","errors","ContextMenu","AltContextMenu","math","sourceMenuFormat","STARTUP","CONFIG","namespaceURI","getElementsByTagNameNS","namePattern","$2","KV","AGENT","userAgent","BROWSERS","isMac","platform","isPC","isEdge","loadTimes","isFirefox","isSafari","app","isChrome","isOpera","opera","isKonqueror","versionAtLeast","v","bv","parseInt","Select","choices","xAGENT","VERSION","MATCH","Safari","webkit","appVersion","isMobile","noContextMenu","Firefox","product","rv","date","buildID","productSub","Opera","Edge","isIE9","performance","msPerformance","NoMathPlayer","ActiveXObject","hasMathPlayer","mathplayer","classid","namespaces","add","mpNamespace","write","mpImported","console","AuthorInit"],"mappings":"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","sourcesContent":["/* -*- Mode: Javascript; indent-tabs-mode:nil; js-indent-level: 2 -*- */\n/* vim: set ts=2 et sw=2 tw=80: */\n\n/*************************************************************\n *\n *  MathJax.js\n *  \n *  The main support code for the MathJax Hub, including the\n *  Ajax, Callback, Messaging, and Object-Oriented Programming\n *  libraries, as well as the base Jax classes, and startup\n *  processing code.\n *  \n *  ---------------------------------------------------------------------\n *  \n *  Copyright (c) 2009-2015 The MathJax Consortium\n * \n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n//\n//  Check if browser can support MathJax (no one fails this nowadays)\n//\nif (document.getElementById && document.childNodes && document.createElement) {\n//\n//  Skip if MathJax is already loaded\n//\nif (!(window.MathJax && MathJax.Hub)) {\n  \n//\n//  Get author configuration from MathJax variable, if any\n//\nif (window.MathJax) {window.MathJax = {AuthorConfig: window.MathJax}}\n               else {window.MathJax = {}}\n\n// MathJax.isPacked = true; // This line is uncommented by the packer.\n\nMathJax.version = \"2.6.1\";\nMathJax.fileversion = \"2.6.1\";\nMathJax.cdnVersion = \"2.6.1\";  // specifies a revision to break caching\nMathJax.cdnFileVersions = {};  // can be used to specify revisions for individual files\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n\n  var PROTO = [];  // a static object used to indicate when a prototype is being created\n  var OBJECT = function (def) {\n    var obj = def.constructor; if (!obj) {obj = function () {}}\n    for (var id in def) {if (id !== 'constructor' && def.hasOwnProperty(id)) {obj[id] = def[id]}}\n    return obj;\n  };\n  var CONSTRUCTOR = function () {\n    return function () {return arguments.callee.Init.call(this,arguments)};\n  };\n\n  BASE.Object = OBJECT({\n    constructor: CONSTRUCTOR(),\n    \n    Subclass: function (def,classdef) {\n      var obj = CONSTRUCTOR();\n      obj.SUPER = this; obj.Init = this.Init;\n      obj.Subclass = this.Subclass; obj.Augment = this.Augment;\n      obj.protoFunction = this.protoFunction;\n      obj.can = this.can; obj.has = this.has; obj.isa = this.isa;\n      obj.prototype = new this(PROTO);\n      obj.prototype.constructor = obj;  // the real constructor\n      obj.Augment(def,classdef);\n      return obj;\n    },\n  \n    Init: function (args) {\n      var obj = this;\n      if (args.length === 1 && args[0] === PROTO) {return obj}\n      if (!(obj instanceof args.callee)) {obj = new args.callee(PROTO)}\n      return obj.Init.apply(obj,args) || obj;\n    },\n    \n    Augment: function (def,classdef) {\n      var id;\n      if (def != null) {\n        for (id in def) {if (def.hasOwnProperty(id)) {this.protoFunction(id,def[id])}}\n        // MSIE doesn't list toString even if it is not native so handle it separately\n        if (def.toString !== this.prototype.toString && def.toString !== {}.toString)\n          {this.protoFunction('toString',def.toString)}\n      }\n      if (classdef != null) {\n        for (id in classdef) {if (classdef.hasOwnProperty(id)) {this[id] = classdef[id]}}\n      }\n      return this;\n    },\n  \n    protoFunction: function (id,def) {\n      this.prototype[id] = def;\n      if (typeof def === \"function\") {def.SUPER = this.SUPER.prototype}\n    },\n  \n    prototype: {\n      Init: function () {},\n      SUPER: function (fn) {return fn.callee.SUPER},\n      can: function (method) {return typeof(this[method]) === \"function\"},\n      has: function (property) {return typeof(this[property]) !== \"undefined\"},\n      isa: function (obj) {return (obj instanceof Object) && (this instanceof obj)}\n    },\n  \n    can: function (method)   {return this.prototype.can.call(this,method)},\n    has: function (property) {return this.prototype.has.call(this,property)},\n    isa: function (obj) {\n      var constructor = this;\n      while (constructor) {\n        if (constructor === obj) {return true} else {constructor = constructor.SUPER}\n      }\n      return false;\n    },\n\n\n    SimpleSUPER: OBJECT({\n      constructor: function (def) {return this.SimpleSUPER.define(def)},\n\n      define: function (src) {\n\tvar dst = {};\n\tif (src != null) {\n          for (var id in src) {if (src.hasOwnProperty(id)) {dst[id] = this.wrap(id,src[id])}}\n\t  // MSIE doesn't list toString even if it is not native so handle it separately\n          if (src.toString !== this.prototype.toString && src.toString !== {}.toString)\n            {dst.toString = this.wrap('toString',src.toString)}\n\t}\n\treturn dst;\n      },\n\n      wrap: function (id,f) {\n        if (typeof(f) !== 'function' || !f.toString().match(/\\.\\s*SUPER\\s*\\(/)) {return f}\n        var fn = function () {\n          this.SUPER = fn.SUPER[id];\n          try {var result = f.apply(this,arguments)} catch (err) {delete this.SUPER; throw err}\n          delete this.SUPER;\n          return result;\n        }\n        fn.toString = function () {return f.toString.apply(f,arguments)}\n        return fn;\n      }\n\n    })\n  });\n\n})(\"MathJax\");\n\n/**********************************************************/\n\n/*\n *  Create a callback function from various forms of data:\n *  \n *     MathJax.Callback(fn)    -- callback to a function\n *\n *     MathJax.Callback([fn])  -- callback to function\n *     MathJax.Callback([fn,data...])\n *                             -- callback to function with given data as arguments\n *     MathJax.Callback([object,fn])\n *                             -- call fn with object as \"this\"\n *     MathJax.Callback([object,fn,data...])\n *                             -- call fn with object as \"this\" and data as arguments\n *     MathJax.Callback([\"method\",object])\n *                             -- call method of object wth object as \"this\"\n *     MathJax.Callback([\"method\",object,data...])\n *                             -- as above, but with data as arguments to method\n *\n *     MathJax.Callback({hook: fn, data: [...], object: this})\n *                             -- give function, data, and object to act as \"this\" explicitly\n *\n *     MathJax.Callback(\"code\")  -- callback that compiles and executes a string\n *\n *     MathJax.Callback([...],i)\n *                             -- use slice of array starting at i and interpret\n *                                result as above.  (Used for passing \"arguments\" array\n *                                and trimming initial arguments, if any.)\n */\n\n/*\n *    MathJax.Callback.After([...],cb1,cb2,...)\n *                             -- make a callback that isn't called until all the other\n *                                ones are called first.  I.e., wait for a union of\n *                                callbacks to occur before making the given callback.\n */\n\n/*\n *  MathJax.Callback.Queue([callback,...])\n *                             -- make a synchronized queue of commands that process\n *                                sequentially, waiting for those that return uncalled\n *                                callbacks.\n */\n\n/*\n *  MathJax.Callback.Signal(name)\n *                             -- finds or creates a names signal, to which listeners\n *                                can be attached and are signaled by messages posted\n *                                to the signal.  Responses can be asynchronous.\n */\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n  //\n  //  Create a callback from an associative array\n  //\n  var CALLBACK = function (data) {\n    var cb = function () {return arguments.callee.execute.apply(arguments.callee,arguments)};\n    for (var id in CALLBACK.prototype) {\n      if (CALLBACK.prototype.hasOwnProperty(id)) {\n        if (typeof(data[id]) !== 'undefined') {cb[id] = data[id]}\n                                         else {cb[id] = CALLBACK.prototype[id]}\n      }\n    }\n    cb.toString = CALLBACK.prototype.toString;\n    return cb;\n  };\n  CALLBACK.prototype = {\n    isCallback: true,\n    hook: function () {},\n    data: [],\n    object: window,\n    execute: function () {\n      if (!this.called || this.autoReset) {\n        this.called = !this.autoReset;\n        return this.hook.apply(this.object,this.data.concat([].slice.call(arguments,0)));\n      }\n    },\n    reset: function () {delete this.called},\n    toString: function () {return this.hook.toString.apply(this.hook,arguments)}\n  };\n  var ISCALLBACK = function (f) {\n    return (typeof(f) === \"function\" && f.isCallback);\n  }\n\n  //\n  //  Evaluate a string in global context\n  //\n  var EVAL = function (code) {return eval.call(window,code)}\n  var TESTEVAL = function () {\n    EVAL(\"var __TeSt_VaR__ = 1\"); // check if it works in global context\n    if (window.__TeSt_VaR__) {\n      try { delete window.__TeSt_VaR__; } // NOTE IE9 throws when in IE7 mode\n      catch (error) { window.__TeSt_VaR__ = null; } \n    } else {\n      if (window.execScript) {\n        // IE\n        EVAL = function (code) {\n          BASE.__code = code;\n          code = \"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\";\n          window.execScript(code);\n          var result = BASE.__result; delete BASE.__result; delete BASE.__code;\n          if (result instanceof Error) {throw result}\n          return result;\n        }\n      } else {\n        // Safari2\n        EVAL = function (code) {\n          BASE.__code = code;\n          code = \"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\";\n          var head = (document.getElementsByTagName(\"head\"))[0]; if (!head) {head = document.body}\n          var script = document.createElement(\"script\");\n          script.appendChild(document.createTextNode(code));\n          head.appendChild(script); head.removeChild(script);\n          var result = BASE.__result; delete BASE.__result; delete BASE.__code;\n          if (result instanceof Error) {throw result}\n          return result;\n        }\n      }\n    }\n    TESTEVAL = null;\n  }\n\n  //\n  //  Create a callback from various types of data\n  //\n  var USING = function (args,i) {\n    if (arguments.length > 1) {\n      if (arguments.length === 2 && !(typeof arguments[0] === 'function') &&\n          arguments[0] instanceof Object && typeof arguments[1] === 'number')\n            {args = [].slice.call(args,i)}\n      else {args = [].slice.call(arguments,0)}\n    }\n    if (args instanceof Array && args.length === 1) {args = args[0]}\n    if (typeof args === 'function') {\n      if (args.execute === CALLBACK.prototype.execute) {return args}\n      return CALLBACK({hook: args});\n    } else if (args instanceof Array) {\n      if (typeof(args[0]) === 'string' && args[1] instanceof Object &&\n                 typeof args[1][args[0]] === 'function') {\n        return CALLBACK({hook: args[1][args[0]], object: args[1], data: args.slice(2)});\n      } else if (typeof args[0] === 'function') {\n        return CALLBACK({hook: args[0], data: args.slice(1)});\n      } else if (typeof args[1] === 'function') {\n        return CALLBACK({hook: args[1], object: args[0], data: args.slice(2)});\n      }\n    } else if (typeof(args) === 'string') {\n      if (TESTEVAL) TESTEVAL();\n      return CALLBACK({hook: EVAL, data: [args]});\n    } else if (args instanceof Object) {\n      return CALLBACK(args);\n    } else if (typeof(args) === 'undefined') {\n      return CALLBACK({});\n    }\n    throw Error(\"Can't make callback from given data\");\n  };\n  \n  //\n  //  Wait for a given time to elapse and then perform the callback\n  //\n  var DELAY = function (time,callback) {\n    callback = USING(callback);\n    callback.timeout = setTimeout(callback,time);\n    return callback;\n  };\n\n  //\n  //  Callback used by AFTER, QUEUE, and SIGNAL to check if calls have completed\n  //\n  var WAITFOR = function (callback,signal) {\n    callback = USING(callback);\n    if (!callback.called) {WAITSIGNAL(callback,signal); signal.pending++}\n  };\n  var WAITEXECUTE = function () {\n    var signals = this.signal; delete this.signal;\n    this.execute = this.oldExecute; delete this.oldExecute;\n    var result = this.execute.apply(this,arguments);\n    if (ISCALLBACK(result) && !result.called) {WAITSIGNAL(result,signals)} else {\n      for (var i = 0, m = signals.length; i < m; i++) {\n        signals[i].pending--;\n        if (signals[i].pending <= 0) {signals[i].call()}\n      }\n    }\n  };\n  var WAITSIGNAL = function (callback,signals) {\n    if (!(signals instanceof Array)) {signals = [signals]}\n    if (!callback.signal) {\n      callback.oldExecute = callback.execute;\n      callback.execute = WAITEXECUTE;\n      callback.signal = signals;\n    } else if (signals.length === 1) {callback.signal.push(signals[0])}\n      else {callback.signal = callback.signal.concat(signals)}\n  };\n\n  //\n  //  Create a callback that is called when a collection of other callbacks have\n  //  all been executed.  If the callback gets called immediately (i.e., the\n  //  others are all already called), check if it returns another callback\n  //  and return that instead.\n  //\n  var AFTER = function (callback) {\n    callback = USING(callback);\n    callback.pending = 0;\n    for (var i = 1, m = arguments.length; i < m; i++)\n      {if (arguments[i]) {WAITFOR(arguments[i],callback)}}\n    if (callback.pending === 0) {\n      var result = callback();\n      if (ISCALLBACK(result)) {callback = result}\n    }\n    return callback;\n  };\n\n  //\n  //  An array of prioritized hooks that are executed sequentially\n  //  with a given set of data.\n  //\n  var HOOKS = MathJax.Object.Subclass({\n    //\n    //  Initialize the array and the auto-reset status\n    //\n    Init: function (reset) {\n      this.hooks = [];\n      this.remove = []; // used when hooks are removed during execution of list\n      this.reset = reset;\n      this.running = false;\n    },\n    //\n    //  Add a callback to the list, in priority order (default priority is 10)\n    //\n    Add: function (hook,priority) {\n      if (priority == null) {priority = 10}\n      if (!ISCALLBACK(hook)) {hook = USING(hook)}\n      hook.priority = priority;\n      var i = this.hooks.length;\n      while (i > 0 && priority < this.hooks[i-1].priority) {i--}\n      this.hooks.splice(i,0,hook);\n      return hook;\n    },\n    Remove: function (hook) {\n      for (var i = 0, m = this.hooks.length; i < m; i++) {\n        if (this.hooks[i] === hook) {\n          if (this.running) {this.remove.push(i)}\n            else {this.hooks.splice(i,1)}\n          return;\n        }\n      }\n    },\n    //\n    //  Execute the list of callbacks, resetting them if requested.\n    //  If any return callbacks, return a callback that will be \n    //  executed when they all have completed.\n    //  Remove any hooks that requested being removed during processing.\n    //\n    Execute: function () {\n      var callbacks = [{}];\n      this.running = true;\n      for (var i = 0, m = this.hooks.length; i < m; i++) {\n        if (this.reset) {this.hooks[i].reset()}\n        var result = this.hooks[i].apply(window,arguments);\n        if (ISCALLBACK(result) && !result.called) {callbacks.push(result)}\n      }\n      this.running = false;\n      if (this.remove.length) {this.RemovePending()}\n      if (callbacks.length === 1) {return null}\n      if (callbacks.length === 2) {return callbacks[1]}\n      return AFTER.apply({},callbacks);\n    },\n    //\n    //  Remove hooks that asked to be removed during execution of list\n    //\n    RemovePending: function () {\n      this.remove = this.remove.sort();\n      for (var i = this.remove.length-1; i >= 0; i--) {this.hooks.splice(i,1)}\n      this.remove = [];\n    }\n\n  });\n  \n  //\n  //  Run an array of callbacks passing them the given data.\n  //  (Legacy function, since this has been replaced by the HOOKS object).\n  //\n  var EXECUTEHOOKS = function (hooks,data,reset) {\n    if (!hooks) {return null}\n    if (!(hooks instanceof Array)) {hooks = [hooks]}\n    if (!(data instanceof Array))  {data = (data == null ? [] : [data])}\n    var handler = HOOKS(reset);\n    for (var i = 0, m = hooks.length; i < m; i++) {handler.Add(hooks[i])}\n    return handler.Execute.apply(handler,data);\n  };\n   \n  //\n  //  Command queue that performs commands in order, waiting when\n  //  necessary for commands to complete asynchronousely\n  //\n  var QUEUE = BASE.Object.Subclass({\n    //\n    //  Create the queue and push any commands that are specified\n    //\n    Init: function () {\n      this.pending = this.running = 0;\n      this.queue = [];\n      this.Push.apply(this,arguments);\n    },\n    //\n    //  Add commands to the queue and run them. Adding a callback object\n    //  (rather than a callback specification) queues a wait for that callback.\n    //  Return the final callback for synchronization purposes.\n    //\n    Push: function () {\n      var callback;\n      for (var i = 0, m = arguments.length; i < m; i++) {\n        callback = USING(arguments[i]);\n        if (callback === arguments[i] && !callback.called)\n          {callback = USING([\"wait\",this,callback])}\n        this.queue.push(callback);\n      }\n      if (!this.running && !this.pending) {this.Process()}\n      return callback;\n    },\n    //\n    //  Process the command queue if we aren't waiting on another command\n    //\n    Process: function (queue) {\n      while (!this.running && !this.pending && this.queue.length) {\n        var callback = this.queue[0];\n        queue = this.queue.slice(1); this.queue = [];\n        this.Suspend(); var result = callback(); this.Resume();\n        if (queue.length) {this.queue = queue.concat(this.queue)}\n        if (ISCALLBACK(result) && !result.called) {WAITFOR(result,this)}\n      }\n    },\n    //\n    //  Suspend/Resume command processing on this queue\n    //\n    Suspend: function () {this.running++},\n    Resume: function () {if (this.running) {this.running--}},\n    //\n    //  Used by WAITFOR to restart the queue when an action completes\n    //\n    call: function () {this.Process.apply(this,arguments)},\n    wait: function (callback) {return callback}\n  });\n  \n  //\n  //  Create a named signal that listeners can attach to, to be signaled by\n  //  postings made to the signal.  Posts are queued if they occur while one\n  //  is already in process.\n  //\n  var SIGNAL = QUEUE.Subclass({\n    Init: function (name) {\n      QUEUE.prototype.Init.call(this);\n      this.name = name;\n      this.posted = [];              // the messages posted so far\n      this.listeners = HOOKS(true);  // those with interest in this signal\n      this.posting = false;\n      this.callback = null;\n    },\n    //\n    // Post a message to the signal listeners, with callback for when complete\n    //\n    Post: function (message,callback,forget) {\n      callback = USING(callback);\n      if (this.posting || this.pending) {\n        this.Push([\"Post\",this,message,callback,forget]);\n      } else {\n        this.callback = callback; callback.reset();\n        if (!forget) {this.posted.push(message)}\n        this.Suspend(); this.posting = true;\n        var result = this.listeners.Execute(message);\n        if (ISCALLBACK(result) && !result.called) {WAITFOR(result,this)}\n        this.Resume(); this.posting = false;\n        if (!this.pending) {this.call()}\n      }\n      return callback;\n    },\n    //\n    //  Clear the post history (so new listeners won't get old messages)\n    //\n    Clear: function (callback) {\n      callback = USING(callback);\n      if (this.posting || this.pending) {\n        callback = this.Push([\"Clear\",this,callback]);\n      } else {\n        this.posted = [];\n        callback();\n      }\n      return callback;\n    },\n    //\n    //  Call the callback (all replies are in) and process the command queue\n    //\n    call: function () {this.callback(this); this.Process()},\n    \n    //\n    //  A listener calls this to register interest in the signal (so it will be called\n    //  when posts occur).  If ignorePast is true, it will not be sent the post history.\n    //\n    Interest: function (callback,ignorePast,priority) {\n      callback = USING(callback);\n      this.listeners.Add(callback,priority);\n      if (!ignorePast) {\n        for (var i = 0, m = this.posted.length; i < m; i++) {\n          callback.reset();\n          var result = callback(this.posted[i]);\n          if (ISCALLBACK(result) && i === this.posted.length-1) {WAITFOR(result,this)}\n        }\n      }\n      return callback;\n    },\n    //\n    //  A listener calls this to remove itself from a signal\n    //\n    NoInterest: function (callback) {\n      this.listeners.Remove(callback);\n    },\n    \n    //\n    //  Hook a callback to a particular message on this signal\n    //\n    MessageHook: function (msg,callback,priority) {\n      callback = USING(callback);\n      if (!this.hooks) {this.hooks = {}; this.Interest([\"ExecuteHooks\",this])}\n      if (!this.hooks[msg]) {this.hooks[msg] = HOOKS(true)}\n      this.hooks[msg].Add(callback,priority);\n      for (var i = 0, m = this.posted.length; i < m; i++)\n        {if (this.posted[i] == msg) {callback.reset(); callback(this.posted[i])}}\n      callback.msg = msg; // keep track so we can remove it\n      return callback;\n    },\n    //\n    //  Execute the message hooks for the given message\n    //\n    ExecuteHooks: function (msg) {\n      var type = ((msg instanceof Array) ? msg[0] : msg);\n      if (!this.hooks[type]) {return null}\n      return this.hooks[type].Execute(msg);\n    },\n    //\n    //  Remove a hook safely\n    //\n    RemoveHook: function (hook) {\n      this.hooks[hook.msg].Remove(hook);\n    }\n    \n  },{\n    signals: {},  // the named signals\n    find: function (name) {\n      if (!SIGNAL.signals[name]) {SIGNAL.signals[name] = new SIGNAL(name)}\n      return SIGNAL.signals[name];\n    }\n  });\n  \n  //\n  //  The main entry-points\n  //\n  BASE.Callback = BASE.CallBack = USING;\n  BASE.Callback.Delay = DELAY;\n  BASE.Callback.After = AFTER;\n  BASE.Callback.Queue = QUEUE;\n  BASE.Callback.Signal = SIGNAL.find;\n  BASE.Callback.Hooks = HOOKS;\n  BASE.Callback.ExecuteHooks = EXECUTEHOOKS;\n})(\"MathJax\");\n\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n  \n  var isSafari2 = (navigator.vendor === \"Apple Computer, Inc.\" &&\n                   typeof navigator.vendorSub === \"undefined\");\n  var sheets = 0; // used by Safari2\n\n  //\n  //  Update sheets count and look up the head object\n  //  \n  var HEAD = function (head) {\n    if (document.styleSheets && document.styleSheets.length > sheets)\n      {sheets = document.styleSheets.length}\n    if (!head) {\n      head = document.head || ((document.getElementsByTagName(\"head\"))[0]);\n      if (!head) {head = document.body}\n    }\n    return head;\n  };\n  \n  //\n  //  Remove scripts that are completed so they don't clutter up the HEAD.\n  //  This runs via setTimeout since IE7 can't remove the script while it is running.\n  //\n  var SCRIPTS = [];  // stores scripts to be removed after a delay\n  var REMOVESCRIPTS = function () {\n    for (var i = 0, m = SCRIPTS.length; i < m; i++) {BASE.Ajax.head.removeChild(SCRIPTS[i])}\n    SCRIPTS = [];\n  };\n  \n  var PATH = {};\n  PATH[BASENAME] = \"\";  // empty path gets the root URL\n  \n  BASE.Ajax = {\n    loaded: {},         // files already loaded\n    loading: {},        // files currently in process of loading\n    loadHooks: {},      // hooks to call when files are loaded\n    timeout: 15*1000,   // timeout for loading of files (15 seconds)\n    styleDelay: 1,      // delay to use before styles are available\n    config: {\n      root: \"\",         // URL of root directory to load from\n      path: PATH        // paths to named URL's (e.g., [MathJax]/...)\n    },\n\n    STATUS: {\n      OK: 1,         // file is loading or did load OK\n      ERROR: -1      // file timed out during load\n    },\n\n    //\n    //  Return a complete URL to a file (replacing any root names)\n    //\n    fileURL: function (file) {\n      var match = file.match(/^\\[([-._a-z0-9]+)\\]/i);\n      if (match && match[1] in PATH)\n        {file = (PATH[match[1]]||this.config.root) + file.substr(match[1].length+2)}\n      return file;\n    },\n    //\n    //  Replace root names if URL includes one\n    //\n    fileName: function (url) {\n      var root = this.config.root;\n      if (url.substr(0,root.length) === root) {url = \"[\"+BASENAME+\"]\"+url.substr(root.length)}\n      else {\n        for (var id in PATH) {if (PATH.hasOwnProperty(id) && PATH[id]) {\n          if (url.substr(0,PATH[id].length) === PATH[id])\n            {url = \"[\"+id+\"]\"+url.substr(PATH[id].length); break}\n        }}\n      }\n      return url;\n    },\n    //\n    //  Cache-breaking revision number for file\n    //\n    fileRev: function (file) {\n      var rev = BASE.cdnFileVersions[name] || BASE.cdnVersion;\n      if (rev) {rev = \"?rev=\"+rev}\n      return rev;\n    },\n    urlRev: function (file) {return this.fileURL(file)+this.fileRev(file)},\n    \n    //\n    //  Load a file if it hasn't been already.\n    //  Make sure the file URL is \"safe\"?\n    //\n    Require: function (file,callback) {\n      callback = BASE.Callback(callback); var type;\n      if (file instanceof Object) {\n        for (var i in file)\n          {if (file.hasOwnProperty(i)) {type = i.toUpperCase(); file = file[i]}}\n      } else {type = file.split(/\\./).pop().toUpperCase()}\n      file = this.fileURL(file);\n      // FIXME: check that URL is OK\n      if (this.loaded[file]) {\n        callback(this.loaded[file]);\n      } else {\n        var FILE = {}; FILE[type] = file;\n        this.Load(FILE,callback);\n      }\n      return callback;\n    },\n\n    //\n    //  Load a file regardless of where it is and whether it has\n    //  already been loaded.\n    //\n    Load: function (file,callback) {\n      callback = BASE.Callback(callback); var type;\n      if (file instanceof Object) {\n        for (var i in file)\n          {if (file.hasOwnProperty(i)) {type = i.toUpperCase(); file = file[i]}}\n      } else {type = file.split(/\\./).pop().toUpperCase()}\n      file = this.fileURL(file);\n      if (this.loading[file]) {\n        this.addHook(file,callback);\n      } else {\n        this.head = HEAD(this.head);\n        if (this.loader[type]) {this.loader[type].call(this,file,callback)}\n          else {throw Error(\"Can't load files of type \"+type)}\n      }\n      return callback;\n    },\n    \n    //\n    //  Register a load hook for a particular file (it will be called when\n    //  loadComplete() is called for that file)\n    //\n    LoadHook: function (file,callback,priority) {\n      callback = BASE.Callback(callback);\n      if (file instanceof Object)\n        {for (var i in file) {if (file.hasOwnProperty(i)) {file = file[i]}}}\n      file = this.fileURL(file);\n      if (this.loaded[file]) {callback(this.loaded[file])}\n        else {this.addHook(file,callback,priority)}\n      return callback;\n    },\n    addHook: function (file,callback,priority) {\n      if (!this.loadHooks[file]) {this.loadHooks[file] = MathJax.Callback.Hooks()}\n      this.loadHooks[file].Add(callback,priority);\n      callback.file = file;\n    },\n    removeHook: function (hook) {\n      if (this.loadHooks[hook.file]) {\n        this.loadHooks[hook.file].Remove(hook);\n        if (!this.loadHooks[hook.file].hooks.length) {delete this.loadHooks[hook.file]}\n      }\n    },\n    \n    //\n    //  Used when files are combined in a preloading configuration file\n    //\n    Preloading: function () {\n      for (var i = 0, m = arguments.length; i < m; i++) {\n        var file = this.fileURL(arguments[i]);\n        if (!this.loading[file]) {this.loading[file] = {preloaded: true}}\n      }\n    },\n    \n    //\n    //  Code used to load the various types of files\n    //  (JS for JavaScript, CSS for style sheets)\n    //\n    loader: {\n      //\n      //  Create a SCRIPT tag to load the file\n      //\n      JS: function (file,callback) {\n        var name = this.fileName(file);\n        var script = document.createElement(\"script\");\n        var timeout = BASE.Callback([\"loadTimeout\",this,file]);\n        this.loading[file] = {\n          callback: callback,\n          timeout: setTimeout(timeout,this.timeout),\n          status: this.STATUS.OK,\n          script: script\n        };\n        //\n        // Add this to the structure above after it is created to prevent recursion\n        //  when loading the initial localization file (before loading messsage is available)\n        //\n        this.loading[file].message = BASE.Message.File(name);\n        script.onerror = timeout;  // doesn't work in IE and no apparent substitute\n        script.type = \"text/javascript\";\n        script.src = file+this.fileRev(name);\n        this.head.appendChild(script);\n      },\n      //\n      //  Create a LINK tag to load the style sheet\n      //\n      CSS: function (file,callback) {\n        var name = this.fileName(file);\n        var link = document.createElement(\"link\");\n        link.rel = \"stylesheet\"; link.type = \"text/css\";\n        link.href = file+this.fileRev(name);\n        this.loading[file] = {\n          callback: callback,\n          message: BASE.Message.File(name),\n          status: this.STATUS.OK\n        };\n        this.head.appendChild(link);\n        this.timer.create.call(this,[this.timer.file,file],link);\n      }\n    },\n    \n    //\n    //  Timing code for checking when style sheets are available.\n    //\n    timer: {\n      //\n      //  Create the timing callback and start the timing loop.\n      //  We use a delay because some browsers need it to allow the styles\n      //  to be processed.\n      //\n      create: function (callback,node) {\n        callback = BASE.Callback(callback);\n        if (node.nodeName === \"STYLE\" && node.styleSheet &&\n            typeof(node.styleSheet.cssText) !== 'undefined') {\n          callback(this.STATUS.OK); // MSIE processes style immediately, but doesn't set its styleSheet!\n        } else if (window.chrome && node.nodeName === \"LINK\") {\n          callback(this.STATUS.OK); // Chrome doesn't give access to cssRules for stylesheet in\n                                    //   a link node, so we can't detect when it is loaded.\n        } else if (isSafari2) {\n          this.timer.start(this,[this.timer.checkSafari2,sheets++,callback],this.styleDelay);\n        } else {\n          this.timer.start(this,[this.timer.checkLength,node,callback],this.styleDelay);\n        }\n        return callback;\n      },\n      //\n      //  Start the timer for the given callback checker\n      //\n      start: function (AJAX,check,delay,timeout) {\n        check = BASE.Callback(check);\n        check.execute = this.execute; check.time = this.time;\n        check.STATUS = AJAX.STATUS; check.timeout = timeout || AJAX.timeout;\n        check.delay = check.total = delay || 0;\n        if (delay) {setTimeout(check,delay)} else {check()}\n      },\n      //\n      //  Increment the time total, increase the delay\n      //  and test if we are past the timeout time.\n      //  \n      time: function (callback) {\n        this.total += this.delay;\n        this.delay = Math.floor(this.delay * 1.05 + 5);\n        if (this.total >= this.timeout) {callback(this.STATUS.ERROR); return 1}\n        return 0;\n      },\n      //\n      //  For JS file loads, call the proper routine according to status\n      //\n      file: function (file,status) {\n        if (status < 0) {BASE.Ajax.loadTimeout(file)} else {BASE.Ajax.loadComplete(file)}\n      },\n      //\n      //  Call the hook with the required data\n      //\n      execute: function () {this.hook.call(this.object,this,this.data[0],this.data[1])},\n      //\n      //  Safari2 doesn't set the link's stylesheet, so we need to look in the\n      //  document.styleSheets array for the new sheet when it is created\n      //\n      checkSafari2: function (check,length,callback) {\n        if (check.time(callback)) return;\n        if (document.styleSheets.length > length &&\n            document.styleSheets[length].cssRules &&\n            document.styleSheets[length].cssRules.length)\n          {callback(check.STATUS.OK)} else {setTimeout(check,check.delay)}\n      },\n      //\n      //  Look for the stylesheets rules and check when they are defined\n      //  and no longer of length zero.  (This assumes there actually ARE\n      //  some rules in the stylesheet.)\n      //  \n      checkLength: function (check,node,callback) {\n        if (check.time(callback)) return;\n        var isStyle = 0; var sheet = (node.sheet || node.styleSheet);\n        try {if ((sheet.cssRules||sheet.rules||[]).length > 0) {isStyle = 1}} catch(err) {\n          if (err.message.match(/protected variable|restricted URI/)) {isStyle = 1}\n          else if (err.message.match(/Security error/)) {\n            // Firefox3 gives \"Security error\" for missing files, so\n            //   can't distinguish that from OK files on remote servers.\n            //   or OK files in different directory from local files.\n            isStyle = 1; // just say it is OK (can't really tell)\n          }\n        }\n        if (isStyle) {\n          // Opera 9.6 requires this setTimeout\n          setTimeout(BASE.Callback([callback,check.STATUS.OK]),0);\n        } else {\n          setTimeout(check,check.delay);\n        }\n      }\n    },\n\n    //\n    //  JavaScript code must call this when they are completely initialized\n    //  (this allows them to perform asynchronous actions before indicating\n    //  that they are complete).\n    //\n    loadComplete: function (file) {\n      file = this.fileURL(file);\n      var loading = this.loading[file];\n      if (loading && !loading.preloaded) {\n        BASE.Message.Clear(loading.message);\n        clearTimeout(loading.timeout);\n\tif (loading.script) {\n\t  if (SCRIPTS.length === 0) {setTimeout(REMOVESCRIPTS,0)}\n\t  SCRIPTS.push(loading.script);\n\t}\n        this.loaded[file] = loading.status; delete this.loading[file];\n        this.addHook(file,loading.callback);\n      } else {\n        if (loading) {delete this.loading[file]}\n        this.loaded[file] = this.STATUS.OK;\n        loading = {status: this.STATUS.OK}\n      }\n      if (!this.loadHooks[file]) {return null}\n      return this.loadHooks[file].Execute(loading.status);\n    },\n    \n    //\n    //  If a file fails to load within the timeout period (or the onerror handler\n    //  is called), this routine runs to signal the error condition.\n    //  \n    loadTimeout: function (file) {\n      if (this.loading[file].timeout) {clearTimeout(this.loading[file].timeout)}\n      this.loading[file].status = this.STATUS.ERROR;\n      this.loadError(file);\n      this.loadComplete(file);\n    },\n    \n    //\n    //  The default error hook for file load failures\n    //\n    loadError: function (file) {\n      BASE.Message.Set([\"LoadFailed\",\"File failed to load: %1\",file],null,2000);\n      BASE.Hub.signal.Post([\"file load error\",file]);\n    },\n\n    //\n    //  Defines a style sheet from a hash of style declarations (key:value pairs\n    //  where the key is the style selector and the value is a hash of CSS attributes \n    //  and values).\n    //\n    Styles: function (styles,callback) {\n      var styleString = this.StyleString(styles);\n      if (styleString === \"\") {\n        callback = BASE.Callback(callback);\n        callback();\n      } else {\n        var style = document.createElement(\"style\"); style.type = \"text/css\";\n        this.head = HEAD(this.head);\n        this.head.appendChild(style);\n        if (style.styleSheet && typeof(style.styleSheet.cssText) !== 'undefined') {\n          style.styleSheet.cssText = styleString;\n        } else {\n          style.appendChild(document.createTextNode(styleString));\n        }\n        callback = this.timer.create.call(this,callback,style);\n      }\n      return callback;\n    },\n    \n    //\n    //  Create a stylesheet string from a style declaration object\n    //\n    StyleString: function (styles) {\n      if (typeof(styles) === 'string') {return styles}\n      var string = \"\", id, style;\n      for (id in styles) {if (styles.hasOwnProperty(id)) {\n        if (typeof styles[id] === 'string') {\n          string += id + \" {\"+styles[id]+\"}\\n\";\n        } else if (styles[id] instanceof Array) {\n          for (var i = 0; i < styles[id].length; i++) {\n            style = {}; style[id] = styles[id][i];\n            string += this.StyleString(style);\n          }\n        } else if (id.substr(0,6) === '@media') {\n          string += id + \" {\"+this.StyleString(styles[id])+\"}\\n\";\n        } else if (styles[id] != null) {\n          style = [];\n          for (var name in styles[id]) {if (styles[id].hasOwnProperty(name)) {\n            if (styles[id][name] != null) \n              {style[style.length] = name + ': ' + styles[id][name]}\n          }}\n          string += id +\" {\"+style.join('; ')+\"}\\n\";\n        }\n      }}\n      return string;\n    }\n  };\n  \n})(\"MathJax\");\n\n/**********************************************************/\n\nMathJax.HTML = {\n  //\n  //  Create an HTML element with given attributes and content.\n  //  The def parameter is an (optional) object containing key:value pairs\n  //  of the attributes and their values, and contents is an (optional)\n  //  array of strings to be inserted as text, or arrays of the form\n  //  [type,def,contents] that describes an HTML element to be inserted\n  //  into the current element.  Thus the contents can describe a complete\n  //  HTML snippet of arbitrary complexity.  E.g.:\n  //  \n  //    MathJax.HTML.Element(\"span\",{id:\"mySpan\",style{\"font-style\":\"italic\"}},[\n  //        \"(See the \",[\"a\",{href:\"http://www.mathjax.org\"},[\"MathJax home page\"]],\n  //        \" for more details.)\"]);\n  // \n  Element: function (type,def,contents) {\n    var obj = document.createElement(type), id;\n    if (def) {\n      if (def.hasOwnProperty(\"style\")) {\n        var style = def.style; def.style = {};\n        for (id in style) {if (style.hasOwnProperty(id))\n          {def.style[id.replace(/-([a-z])/g,this.ucMatch)] = style[id]}}\n      }\n      MathJax.Hub.Insert(obj,def);\n      for (id in def) {\n        if (id === \"role\" || id.substr(0,5) === \"aria-\") obj.setAttribute(id,def[id]);\n      }\n    }\n    if (contents) {\n      if (!(contents instanceof Array)) {contents = [contents]}\n      for (var i = 0, m = contents.length; i < m; i++) {\n        if (contents[i] instanceof Array) {\n          obj.appendChild(this.Element(contents[i][0],contents[i][1],contents[i][2]));\n        } else if (type === \"script\") { // IE throws an error if script is added as a text node\n          this.setScript(obj, contents[i]);\n        } else {\n          obj.appendChild(document.createTextNode(contents[i]));\n        }\n      }\n    }\n    return obj;\n  },\n  ucMatch: function (match,c) {return c.toUpperCase()},\n  addElement: function (span,type,def,contents) {return span.appendChild(this.Element(type,def,contents))},\n  TextNode: function (text) {return document.createTextNode(text)},\n  addText: function (span,text) {return span.appendChild(this.TextNode(text))},\n\n  //\n  //  Set and get the text of a script\n  //\n  setScript: function (script,text) {\n    if (this.setScriptBug) {script.text = text} else {\n      while (script.firstChild) {script.removeChild(script.firstChild)}\n      this.addText(script,text);\n    }\n  },\n  getScript: function (script) {\n    var text = (script.text === \"\" ? script.innerHTML : script.text);\n    return text.replace(/^\\s+/,\"\").replace(/\\s+$/,\"\");\n  },\n\n  //\n  //  Manage cookies\n  //\n  Cookie: {\n    prefix: \"mjx\",\n    expires: 365,\n    \n    //\n    //  Save an object as a named cookie\n    //\n    Set: function (name,def) {\n      var keys = [];\n      if (def) {\n        for (var id in def) {if (def.hasOwnProperty(id)) {\n          keys.push(id+\":\"+def[id].toString().replace(/&/g,\"&&\"));\n        }}\n      }\n      var cookie = this.prefix+\".\"+name+\"=\"+escape(keys.join('&;'));\n      if (this.expires) {\n        var time = new Date(); time.setDate(time.getDate() + this.expires);\n        cookie += '; expires='+time.toGMTString();\n      }\n      try {document.cookie = cookie+\"; path=/\"} catch (err) {} // ignore errors saving cookies\n    },\n    \n    //\n    //  Get the contents of a named cookie and incorporate\n    //  it into the given object (or return a fresh one)\n    //\n    Get: function (name,obj) {\n      if (!obj) {obj = {}}\n      var pattern = new RegExp(\"(?:^|;\\\\s*)\"+this.prefix+\"\\\\.\"+name+\"=([^;]*)(?:;|$)\");\n      var match;\n      try {match = pattern.exec(document.cookie)} catch (err) {}; // ignore errors reading cookies\n      if (match && match[1] !== \"\") {\n        var keys = unescape(match[1]).split('&;');\n        for (var i = 0, m = keys.length; i < m; i++) {\n          match = keys[i].match(/([^:]+):(.*)/);\n          var value = match[2].replace(/&&/g,'&');\n          if (value === \"true\") {value = true} else if (value === \"false\") {value = false}\n            else if (value.match(/^-?(\\d+(\\.\\d+)?|\\.\\d+)$/)) {value = parseFloat(value)}\n          obj[match[1]] = value;\n        }\n      }\n      return obj;\n    }\n  }\n    \n};\n\n\n/**********************************************************/\n\nMathJax.Localization = {\n  \n  locale: \"en\",\n  directory: \"[MathJax]/localization\",\n  strings: {\n    // Currently, this list is not modified by the MathJax-i18n script. You can\n    // run the following command in MathJax/unpacked/localization to update it:\n    //\n    // find . -name \"*.js\" | xargs grep menuTitle\\: | grep -v qqq | sed 's/^\\.\\/\\(.*\\)\\/.*\\.js\\:  /    \"\\1\"\\: \\{/' | sed 's/,$/\\},/' | sed 's/\"English\"/\"English\", isLoaded: true/' > tmp ; sort tmp > tmp2 ; sed '$ s/,$//' tmp2 ; rm tmp*\n    //\n    // This only takes languages with localization data so you must also add\n    // the languages that use a remap but are not translated at all.\n    //\n    \"ast\": {menuTitle: \"asturianu\"},\n    \"bg\": {menuTitle: \"\\u0431\\u044A\\u043B\\u0433\\u0430\\u0440\\u0441\\u043A\\u0438\"},\n    \"bcc\": {menuTitle: \"\\u0628\\u0644\\u0648\\u0686\\u06CC\"},\n    \"br\": {menuTitle: \"brezhoneg\"},\n    \"ca\": {menuTitle: \"catal\\u00E0\"},\n    \"cdo\": {menuTitle: \"M\\u00ECng-d\\u0115\\u0324ng-ng\\u1E73\\u0304\"},\n    \"cs\": {menuTitle: \"\\u010De\\u0161tina\"},\n    \"da\": {menuTitle: \"dansk\"},\n    \"de\": {menuTitle: \"Deutsch\"},\n    \"en\": {menuTitle: \"English\", isLoaded: true},\n    \"eo\": {menuTitle: \"Esperanto\"},\n    \"es\": {menuTitle: \"espa\\u00F1ol\"},\n    \"fa\": {menuTitle: \"\\u0641\\u0627\\u0631\\u0633\\u06CC\"},\n    \"fi\": {menuTitle: \"suomi\"},\n    \"fr\": {menuTitle: \"fran\\u00E7ais\"},\n    \"gl\": {menuTitle: \"galego\"},\n    \"he\": {menuTitle: \"\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\"},\n    \"ia\": {menuTitle: \"interlingua\"},\n    \"it\": {menuTitle: \"italiano\"},\n    \"ja\": {menuTitle: \"\\u65E5\\u672C\\u8A9E\"},\n    \"kn\": {menuTitle: \"\\u0C95\\u0CA8\\u0CCD\\u0CA8\\u0CA1\"},\n    \"ko\": {menuTitle: \"\\uD55C\\uAD6D\\uC5B4\"},\n    \"lb\": {menuTitle: \"L\\u00EBtzebuergesch\"},\n    \"lt\": {menuTitle: \"lietuvi\\u0173\"},\n    \"mk\": {menuTitle: \"\\u043C\\u0430\\u043A\\u0435\\u0434\\u043E\\u043D\\u0441\\u043A\\u0438\"},\n    \"nl\": {menuTitle: \"Nederlands\"},\n    \"oc\": {menuTitle: \"occitan\"},\n    \"pl\": {menuTitle: \"polski\"},\n    \"pt\": {menuTitle: \"portugus\\u00EA\"},\n    \"pt-br\": {menuTitle: \"portugu\\u00EAs do Brasil\"},\n    \"ru\": {menuTitle: \"\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"},\n    \"sco\": {menuTitle: \"Scots\"},\n    \"scn\": {menuTitle: \"sicilianu\"},\n    \"sl\": {menuTitle: \"sloven\\u0161\\u010Dina\"},\n    \"sv\": {menuTitle: \"svenska\"},\n    \"tr\": {menuTitle: \"T\\u00FCrk\\u00E7e\"},\n    \"uk\": {menuTitle: \"\\u0443\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430\"},\n    \"vi\": {menuTitle: \"Ti\\u1EBFng Vi\\u1EC7t\"},\n    \"zh-hans\": {menuTitle: \"\\u4E2D\\u6587\\uFF08\\u7B80\\u4F53\\uFF09\"}\n  },\n\n  //\n  //  The pattern for substitution escapes:\n  //      %n or %{n} or %{plural:%n|option1|option1|...} or %c\n  //\n  pattern: /%(\\d+|\\{\\d+\\}|\\{[a-z]+:\\%\\d+(?:\\|(?:%\\{\\d+\\}|%.|[^\\}])*)+\\}|.)/g,\n\n  SPLIT: (\"axb\".split(/(x)/).length === 3 ?\n    function (string,regex) {return string.split(regex)} :\n    //\n    //  IE8 and below don't do split() correctly when the pattern includes\n    //    parentheses (the split should include the matched exrepssions).\n    //    So implement it by hand here.\n    // \n    function (string,regex) {\n      var result = [], match, last = 0;\n      regex.lastIndex = 0;\n      while ((match = regex.exec(string))) {\n        result.push(string.substr(last,match.index-last));\n        result.push.apply(result,match.slice(1));\n        last = match.index + match[0].length;\n      }\n      result.push(string.substr(last));\n      return result;\n    }),\n  \n  _: function (id,phrase) {\n    if (phrase instanceof Array) {return this.processSnippet(id,phrase)}\n    return this.processString(this.lookupPhrase(id,phrase),[].slice.call(arguments,2));\n  },\n  \n  processString: function (string,args,domain) {\n    //\n    //  Process arguments for substitution\n    //    If the argument is a snippet (and we are processing snippets) do so,\n    //    Otherwise, if it is a number, convert it for the lacale\n    //\n    var i, m;\n    for (i = 0, m = args.length; i < m; i++) {\n      if (domain && args[i] instanceof Array) {args[i] = this.processSnippet(domain,args[i])}\n    }\n    //\n    //  Split string at escapes and process them individually\n    //\n    var parts = this.SPLIT(string,this.pattern);\n    for (i = 1, m = parts.length; i < m; i += 2) {\n      var c = parts[i].charAt(0);  // first char will be { or \\d or a char to be kept literally\n      if (c >= \"0\" && c <= \"9\") {    // %n\n        parts[i] = args[parts[i]-1];\n        if (typeof parts[i] === \"number\") parts[i] = this.number(parts[i]);\n      } else if (c === \"{\") {        // %{n} or %{plural:%n|...}\n        c = parts[i].substr(1);\n        if (c >= \"0\" && c <= \"9\") {  // %{n}\n          parts[i] = args[parts[i].substr(1,parts[i].length-2)-1];\n          if (typeof parts[i] === \"number\") parts[i] = this.number(parts[i]);\n        } else {                     // %{plural:%n|...}\n          var match = parts[i].match(/^\\{([a-z]+):%(\\d+)\\|(.*)\\}$/);\n          if (match) {\n            if (match[1] === \"plural\") {\n              var n = args[match[2]-1];\n              if (typeof n === \"undefined\") {\n                parts[i] = \"???\";        // argument doesn't exist\n              } else {\n                n = this.plural(n) - 1;  // index of the form to use\n                var plurals = match[3].replace(/(^|[^%])(%%)*%\\|/g,\"$1$2%\\uEFEF\").split(/\\|/); // the parts (replacing %| with a special character)\n                if (n >= 0 && n < plurals.length) {\n                  parts[i] = this.processString(plurals[n].replace(/\\uEFEF/g,\"|\"),args,domain);\n                } else {\n                  parts[i] = \"???\";      // no string for this index\n                }\n              }\n            } else {parts[i] = \"%\"+parts[i]}  // not \"plural\", put back the % and leave unchanged\n          }\n        }\n      }\n      if (parts[i] == null) {parts[i] = \"???\"}\n    }\n    //\n    //  If we are not forming a snippet, return the completed string\n    //  \n    if (!domain) {return parts.join(\"\")}\n    //\n    //  We need to return an HTML snippet, so buld it from the\n    //  broken up string with inserted parts (that could be snippets)\n    //\n    var snippet = [], part = \"\";\n    for (i = 0; i < m; i++) {\n      part += parts[i]; i++;  // add the string and move on to substitution result\n      if (i < m) {\n        if (parts[i] instanceof Array)  {        // substitution was a snippet\n          snippet.push(part);                        // add the accumulated string\n          snippet = snippet.concat(parts[i]);        // concatenate the substution snippet\n          part = \"\";                                 // start accumulating a new string\n        } else {                                 // substitution was a string\n          part += parts[i];                          // add to accumulating string\n        }\n      }\n    }\n    if (part !== \"\") {snippet.push(part)} // add final string\n    return snippet;\n  },\n  \n  processSnippet: function (domain,snippet) {\n    var result = [];   // the new snippet\n    //\n    //  Look through the original snippet for\n    //   strings or snippets to translate\n    //\n    for (var i = 0, m = snippet.length; i < m; i++) {\n      if (snippet[i] instanceof Array) {\n        //\n        //  This could be a sub-snippet:\n        //    [\"tag\"] or [\"tag\",{properties}] or [\"tag\",{properties},snippet]\n        //  Or it could be something to translate:\n        //    [id,string,args] or [domain,snippet]\n        var data = snippet[i];\n        if (typeof data[1] === \"string\") {        // [id,string,args]\n          var id = data[0]; if (!(id instanceof Array)) {id = [domain,id]}\n          var phrase = this.lookupPhrase(id,data[1]);\n          result = result.concat(this.processMarkdown(phrase,data.slice(2),domain));\n        } else if (data[1] instanceof Array) {    // [domain,snippet]\n          result = result.concat(this.processSnippet.apply(this,data));\n        } else if (data.length >= 3) {            // [\"tag\",{properties},snippet]\n          result.push([data[0],data[1],this.processSnippet(domain,data[2])]);\n        } else {                                  // [\"tag\"] or [\"tag\",{properties}]\n          result.push(snippet[i]);\n        }\n      } else {                                    // a string\n        result.push(snippet[i]);\n      }\n    }\n    return result;\n  },\n  \n  markdownPattern: /(%.)|(\\*{1,3})((?:%.|.)+?)\\2|(`+)((?:%.|.)+?)\\4|\\[((?:%.|.)+?)\\]\\(([^\\s\\)]+)\\)/,\n  //   %c or *bold*, **italics**, ***bold-italics***, or `code`, or [link](url)\n   \n  processMarkdown: function (phrase,args,domain) {\n    var result = [], data;\n    //\n    //  Split the string by the Markdown pattern\n    //    (the text blocks are separated by \n    //      c,stars,star-text,backtics,code-text,link-text,URL).\n    //  Start with teh first text string from the split.\n    //\n    var parts = phrase.split(this.markdownPattern);\n    var string = parts[0];\n    //\n    //  Loop through the matches and process them\n    //\n    for (var i = 1, m = parts.length; i < m; i += 8) {\n      if (parts[i+1]) {        // stars (for bold/italic)\n        //\n        //  Select the tag to use by number of stars (three stars requires two tags)\n        //\n        data = this.processString(parts[i+2],args,domain);\n        if (!(data instanceof Array)) {data = [data]}\n        data = [[\"b\",\"i\",\"i\"][parts[i+1].length-1],{},data]; // number of stars determines type\n        if (parts[i+1].length === 3) {data = [\"b\",{},data]}  // bold-italic\n      } else if (parts[i+3]) { //  backtics (for code)\n        //\n        //  Remove one leading or trailing space, and process substitutions\n        //  Make a <code> tag\n        //\n        data = this.processString(parts[i+4].replace(/^\\s/,\"\").replace(/\\s$/,\"\"),args,domain);\n        if (!(data instanceof Array)) {data = [data]}\n        data = [\"code\",{},data];\n      } else if (parts[i+5]) { //  hyperlink\n        //\n        //  Process the link text, and make an <a> tag with the URL\n        //\n        data = this.processString(parts[i+5],args,domain);\n        if (!(data instanceof Array)) {data = [data]}\n        data = [\"a\",{href:this.processString(parts[i+6],args),target:\"_blank\"},data];\n      } else {\n        //\n        //  Escaped character (%c) gets added into the string.\n        //\n        string += parts[i]; data = null;\n      }\n      //\n      //  If there is a tag to insert,\n      //     Add any pending string, then push the tag\n      //\n      if (data) {\n        result = this.concatString(result,string,args,domain);\n        result.push(data); string = \"\";\n      }\n      //\n      //  Process the string that follows matches pattern\n      //\n      if (parts[i+7] !== \"\") {string += parts[i+7]}\n    };\n    //\n    //  Add any pending string and return the resulting snippet\n    //\n    result = this.concatString(result,string,args,domain);\n    return result;\n  },\n  concatString: function (result,string,args,domain) {\n    if (string != \"\") {\n      //\n      //  Process the substutions.\n      //  If the result is not a snippet, turn it into one.\n      //  Then concatenate the snippet to the current one\n      //\n      string = this.processString(string,args,domain);\n      if (!(string instanceof Array)) {string = [string]}\n      result = result.concat(string);\n    }\n    return result;\n  },\n\n  lookupPhrase: function (id,phrase,domain) {\n    //\n    //  Get the domain and messageID\n    //\n    if (!domain) {domain = \"_\"}\n    if (id instanceof Array) {domain = (id[0] || \"_\"); id = (id[1] || \"\")}\n    //\n    //  Check if the data is available and if not,\n    //    load it and throw a restart error so the calling\n    //    code can wait for the load and try again.\n    //\n    var load = this.loadDomain(domain);\n    if (load) {MathJax.Hub.RestartAfter(load)}\n    //\n    //  Look up the message in the localization data\n    //    (if not found, the original English is used)\n    //\n    var localeData = this.strings[this.locale];\n    if (localeData) {\n      if (localeData.domains && domain in localeData.domains) {\n        var domainData = localeData.domains[domain];\n        if (domainData.strings && id in domainData.strings)\n          {phrase = domainData.strings[id]}\n      }\n    }\n    //\n    //  return the translated phrase\n    //\n    return phrase;\n  },\n  \n  //\n  //  Load a langauge data file from the proper\n  //  directory and file.\n  //\n  loadFile: function (file,data,callback) {\n    callback = MathJax.Callback(callback);\n    file = (data.file || file);  // the data's file name or the default name\n    if (!file.match(/\\.js$/)) {file += \".js\"} // add .js if needed\n    //\n    //  Add the directory if the file doesn't\n    //  contain a full URL already.\n    //\n    if (!file.match(/^([a-z]+:|\\[MathJax\\])/)) {\n      var dir = (this.strings[this.locale].directory  || \n                 this.directory + \"/\" + this.locale ||\n                 \"[MathJax]/localization/\" + this.locale);\n      file = dir + \"/\" + file;\n    }\n    //\n    //  Load the file and mark the data as loaded (even if it\n    //  failed to load, so we don't continue to try to load it\n    //  over and over).\n    //\n    var load = MathJax.Ajax.Require(file,function () {data.isLoaded = true; return callback()});\n    //\n    //  Return the callback if needed, otherwise null.\n    //\n    return (load.called ? null : load);\n  },\n  \n  //\n  //  Check to see if the localization data are loaded\n  //  for the given domain; if not, load the data file,\n  //  and return a callback for the loading operation.\n  //  Otherwise return null (data are loaded).\n  //  \n  loadDomain: function (domain,callback) {\n    var load, localeData = this.strings[this.locale];\n    if (localeData) {\n      if (!localeData.isLoaded) {\n        load = this.loadFile(this.locale,localeData);\n        if (load) {\n          return MathJax.Callback.Queue(\n            load,[\"loadDomain\",this,domain] // call again to load domain\n          ).Push(callback||{});\n        }\n      }\n      if (localeData.domains && domain in localeData.domains) {\n        var domainData = localeData.domains[domain];\n        if (!domainData.isLoaded) {\n          load = this.loadFile(domain,domainData);\n          if (load) {return MathJax.Callback.Queue(load).Push(callback)}\n        }\n      }\n    } \n    // localization data are loaded, so just do the callback\n    return MathJax.Callback(callback)();\n  },\n\n  //\n  //  Perform a function, properly handling\n  //  restarts due to localization file loads.\n  //\n  //  Note that this may return before the function\n  //  has been called successfully, so you should\n  //  consider fn as running asynchronously.  (Callbacks\n  //  can be used to synchronize it with other actions.)\n  //\n  Try: function (fn) {\n    fn = MathJax.Callback(fn); fn.autoReset = true;\n    try {fn()} catch (err) {\n      if (!err.restart) {throw err}\n      MathJax.Callback.After([\"Try\",this,fn],err.restart);\n    }\n  },\n\n  //\n  //  Reset the current language\n  //\n  resetLocale: function(locale) {\n    // Selection algorithm:\n    // 1) Downcase locale name (e.g. \"en-US\" => \"en-us\")\n    // 2) Try a parent language (e.g. \"en-us\" => \"en\")\n    // 3) Try the fallback specified in the data (e.g. \"pt\" => \"pt-br\")\n    // 4) Otherwise don't change the locale.\n    if (!locale) return;\n    locale = locale.toLowerCase();\n    while (!this.strings[locale]) {\n      var dashPos = locale.lastIndexOf(\"-\");\n      if (dashPos === -1) return;\n      locale = locale.substring(0, dashPos);\n    }\n    var remap = this.strings[locale].remap;\n    this.locale = remap ? remap : locale;\n  },\n\n  //\n  //  Set the current language\n  //\n  setLocale: function(locale) {\n    this.resetLocale(locale);\n    if (MathJax.Menu) {this.loadDomain(\"MathMenu\")}\n  },\n\n  //\n  //  Add or update a language or domain\n  //\n  addTranslation: function (locale,domain,definition) {\n    var data = this.strings[locale], isNew = false;\n    if (!data) {data = this.strings[locale] = {}; isNew = true}\n    if (!data.domains) {data.domains = {}}\n    if (domain) {\n      if (!data.domains[domain]) {data.domains[domain] = {}}\n      data = data.domains[domain];\n    }\n    MathJax.Hub.Insert(data,definition);\n    if (isNew && MathJax.Menu.menu) {MathJax.Menu.CreateLocaleMenu()}\n  },\n  \n  //\n  //  Set CSS for an element based on font requirements\n  //\n  setCSS: function (div) {\n    var locale = this.strings[this.locale];\n    if (locale) {\n      if (locale.fontFamily) {div.style.fontFamily = locale.fontFamily}\n      if (locale.fontDirection) {\n        div.style.direction = locale.fontDirection;\n        if (locale.fontDirection === \"rtl\") {div.style.textAlign = \"right\"}\n      }\n    }\n    return div;\n  },\n  \n  //\n  //  Get the language's font family or direction\n  //\n  fontFamily: function () {\n    var locale = this.strings[this.locale];\n    return (locale ? locale.fontFamily : null);\n  },\n  fontDirection: function () {\n    var locale = this.strings[this.locale];\n    return (locale ? locale.fontDirection : null);\n  },\n\n  //\n  //  Get the language's plural index for a number\n  //\n  plural: function (n) {\n    var locale = this.strings[this.locale];\n    if (locale && locale.plural) {return locale.plural(n)}\n    // default\n    if (n == 1) {return 1} // one\n    return 2; // other\n  },\n\n  //\n  //  Convert a number to language-specific form\n  //\n  number: function(n) {\n    var locale = this.strings[this.locale];\n    if (locale && locale.number) {return locale.number(n)}\n    // default\n    return n;\n  }\n};\n\n\n/**********************************************************/\n\nMathJax.Message = {\n  ready: false,  // used to tell when the styles are available\n  log: [{}], current: null,\n  textNodeBug: (navigator.vendor === \"Apple Computer, Inc.\" &&\n                typeof navigator.vendorSub === \"undefined\") ||\n               (window.hasOwnProperty && window.hasOwnProperty(\"konqueror\")), // Konqueror displays some gibberish with text.nodeValue = \"...\"\n  \n  styles: {\n    \"#MathJax_Message\": {\n      position: \"fixed\", left: \"1px\", bottom: \"2px\",\n      'background-color': \"#E6E6E6\",  border: \"1px solid #959595\",\n      margin: \"0px\", padding: \"2px 8px\",\n      'z-index': \"102\", color: \"black\", 'font-size': \"80%\",\n      width: \"auto\", 'white-space': \"nowrap\"\n    },\n    \n    \"#MathJax_MSIE_Frame\": {\n      position: \"absolute\",\n      top:0, left: 0, width: \"0px\", 'z-index': 101,\n      border: \"0px\", margin: \"0px\", padding: \"0px\"\n    }\n  },\n  \n  browsers: {\n    MSIE: function (browser) {\n      MathJax.Message.msieFixedPositionBug = ((document.documentMode||0) < 7);\n      if (MathJax.Message.msieFixedPositionBug) \n        {MathJax.Hub.config.styles[\"#MathJax_Message\"].position = \"absolute\"}\n      MathJax.Message.quirks = (document.compatMode === \"BackCompat\");\n    },\n    Chrome: function (browser) {\n      MathJax.Hub.config.styles[\"#MathJax_Message\"].bottom = \"1.5em\";\n      MathJax.Hub.config.styles[\"#MathJax_Message\"].left = \"1em\";\n    }\n  },\n  \n  Init: function (styles) {\n    if (styles) {this.ready = true}\n    if (!document.body || !this.ready) {return false}\n    //\n    //  ASCIIMathML replaces the entire page with a copy of itself (@#!#%@!!)\n    //  so check that this.div is still part of the page, otherwise look up\n    //  the copy and use that.\n    //\n    if (this.div && this.div.parentNode == null) {\n      this.div = document.getElementById(\"MathJax_Message\");\n      if (this.div) {this.text = this.div.firstChild}\n    }\n    if (!this.div) {\n      var frame = document.body;\n      if (this.msieFixedPositionBug && window.attachEvent) {\n        frame = this.frame = this.addDiv(document.body); frame.removeAttribute(\"id\");\n        frame.style.position = \"absolute\";\n        frame.style.border = frame.style.margin = frame.style.padding = \"0px\";\n        frame.style.zIndex = \"101\"; frame.style.height = \"0px\";\n        frame = this.addDiv(frame);\n        frame.id = \"MathJax_MSIE_Frame\";\n        window.attachEvent(\"onscroll\",this.MoveFrame);\n        window.attachEvent(\"onresize\",this.MoveFrame);\n        this.MoveFrame();\n      }\n      this.div = this.addDiv(frame); this.div.style.display = \"none\";\n      this.text = this.div.appendChild(document.createTextNode(\"\"));\n    }\n    return true;\n  },\n  \n  addDiv: function (parent) {\n    var div = document.createElement(\"div\");\n    div.id = \"MathJax_Message\";\n    if (parent.firstChild) {parent.insertBefore(div,parent.firstChild)}\n      else {parent.appendChild(div)}\n    return div;\n  },\n  \n  MoveFrame: function () {\n    var body = (MathJax.Message.quirks ? document.body : document.documentElement);\n    var frame = MathJax.Message.frame;\n    frame.style.left = body.scrollLeft + 'px';\n    frame.style.top = body.scrollTop + 'px';\n    frame.style.width = body.clientWidth + 'px';\n    frame = frame.firstChild;\n    frame.style.height = body.clientHeight + 'px';\n  },\n\n  localize: function (message) {\n    return MathJax.Localization._(message,message);\n  },\n  \n  filterText: function (text,n,id) {\n    if (MathJax.Hub.config.messageStyle === \"simple\") {\n      if (id === \"LoadFile\") {\n        if (!this.loading) {this.loading = this.localize(\"Loading\") + \" \"}\n        text = this.loading; this.loading += \".\";\n      } else if (id === \"ProcessMath\") {\n        if (!this.processing) {this.processing = this.localize(\"Processing\") + \" \"}\n        text = this.processing; this.processing += \".\";\n      } else if (id === \"TypesetMath\") {\n        if (!this.typesetting) {this.typesetting = this.localize(\"Typesetting\") + \" \"}\n        text = this.typesetting; this.typesetting += \".\";\n      }\n    }\n    return text;\n  },\n  \n  Set: function (text,n,clearDelay) {\n    if (n == null) {n = this.log.length; this.log[n] = {}}\n    //\n    //  Translate message if it is [id,message,arguments]\n    //\n    var id = \"\";\n    if (text instanceof Array) {\n      id = text[0]; if (id instanceof Array) {id = id[1]}\n      //\n      // Localization._() will throw a restart error if a localization file\n      //   needs to be loaded, so trap that and redo the Set() call\n      //   after it is loaded.\n      //\n      try {\n        text = MathJax.Localization._.apply(MathJax.Localization,text);\n      } catch (err) {\n        if (!err.restart) {throw err}\n        if (!err.restart.called) {\n          //\n          //  Mark it so we can tell if the Clear() comes before the message is displayed\n          //\n          if (this.log[n].restarted == null) {this.log[n].restarted = 0}\n          this.log[n].restarted++; delete this.log[n].cleared;\n          MathJax.Callback.After([\"Set\",this,text,n,clearDelay],err.restart);\n          return n;\n        }\n      }\n    }\n    //\n    // Clear the timout timer.\n    //\n    if (this.timer) {clearTimeout(this.timer); delete this.timer}\n    //\n    //  Save the message and filtered message.\n    //\n    this.log[n].text = text; this.log[n].filteredText = text = this.filterText(text,n,id);\n    //\n    //  Hook the message into the message list so we can tell\n    //   what message to put up when this one is removed.\n    //\n    if (typeof(this.log[n].next) === \"undefined\") {\n      this.log[n].next = this.current;\n      if (this.current != null) {this.log[this.current].prev = n}\n      this.current = n;\n    }\n    //\n    //  Show the message if it is the currently active one.\n    //\n    if (this.current === n && MathJax.Hub.config.messageStyle !== \"none\") {\n      if (this.Init()) {\n        if (this.textNodeBug) {this.div.innerHTML = text} else {this.text.nodeValue = text}\n        this.div.style.display = \"\";\n        if (this.status) {window.status = \"\"; delete this.status}\n      } else {\n        window.status = text;\n        this.status = true;\n      }\n    }\n    //\n    //  Check if the message was resetarted to load a localization file\n    //    and if it has been cleared in the meanwhile.\n    //\n    if (this.log[n].restarted) {\n      if (this.log[n].cleared) {clearDelay = 0}\n      if (--this.log[n].restarted === 0) {delete this.log[n].cleared}\n    }\n    //\n    //  Check if we need to clear the message automatically.\n    //\n    if (clearDelay) {setTimeout(MathJax.Callback([\"Clear\",this,n]),clearDelay)}\n      else if (clearDelay == 0) {this.Clear(n,0)}\n    //\n    //  Return the message number.\n    //\n    return n;\n  },\n  \n  Clear: function (n,delay) {\n    //\n    //  Detatch the message from the active list.\n    //\n    if (this.log[n].prev != null) {this.log[this.log[n].prev].next = this.log[n].next}\n    if (this.log[n].next != null) {this.log[this.log[n].next].prev = this.log[n].prev}\n    //\n    //  If it is the current message, get the next one to show.\n    //\n    if (this.current === n) {\n      this.current = this.log[n].next;\n      if (this.text) {\n        if (this.div.parentNode == null) {this.Init()} // see ASCIIMathML comments above\n        if (this.current == null) {\n          //\n          //  If there are no more messages, remove the message box.\n          //\n          if (this.timer) {clearTimeout(this.timer); delete this.timer}\n          if (delay == null) {delay = 600}\n          if (delay === 0) {this.Remove()}\n\t    else {this.timer = setTimeout(MathJax.Callback([\"Remove\",this]),delay)}\n        } else if (MathJax.Hub.config.messageStyle !== \"none\") {\n          //\n          //  If there is an old message, put it in place\n          //\n          if (this.textNodeBug) {this.div.innerHTML = this.log[this.current].filteredText}\n                           else {this.text.nodeValue = this.log[this.current].filteredText}\n        }\n        if (this.status) {window.status = \"\"; delete this.status}\n      } else if (this.status) {\n        window.status = (this.current == null ? \"\" : this.log[this.current].text);\n      }\n    }\n    //\n    //  Clean up the log data no longer needed\n    //\n    delete this.log[n].next; delete this.log[n].prev;\n    delete this.log[n].filteredText;\n    //\n    //  If this is a restarted localization message, mark that it has been cleared\n    //    while waiting for the file to load.\n    //\n    if (this.log[n].restarted) {this.log[n].cleared = true}\n  },\n  \n  Remove: function () {\n    // FIXME:  do a fade out or something else interesting?\n    this.text.nodeValue = \"\";\n    this.div.style.display = \"none\";\n  },\n  \n  File: function (file) {\n    return this.Set([\"LoadFile\",\"Loading %1\",file],null,null);\n  },\n  \n  Log: function () {\n    var strings = [];\n    for (var i = 1, m = this.log.length; i < m; i++) {strings[i] = this.log[i].text}\n    return strings.join(\"\\n\");\n  }\n\n};\n\n/**********************************************************/\n\nMathJax.Hub = {\n  config: {\n    root: \"\",\n    config: [],      // list of configuration files to load\n    styleSheets: [], // list of CSS files to load\n    styles: {        // styles to generate in-line\n      \".MathJax_Preview\": {color: \"#888\"}\n    },\n    jax: [],         // list of input and output jax to load\n    extensions: [],  // list of extensions to load\n    preJax: null,    // pattern to remove from before math script tag\n    postJax: null,   // pattern to remove from after math script tag\n    displayAlign: 'center',       // how to align displayed equations (left, center, right)\n    displayIndent: '0',           // indentation for displayed equations (when not centered)\n    preRemoveClass: 'MathJax_Preview', // class of objects to remove preceeding math script\n    showProcessingMessages: true, // display \"Processing math: nn%\" messages or not\n    messageStyle: \"normal\",       // set to \"none\" or \"simple\" (for \"Loading...\" and \"Processing...\")\n    delayStartupUntil: \"none\",    // set to \"onload\" to delay setup until the onload handler runs\n                                  // set to \"configured\" to delay startup until MathJax.Hub.Configured() is called\n                                  // set to a Callback to wait for before continuing with the startup\n    skipStartupTypeset: false,    // set to true to skip PreProcess and Process during startup\n    elements: [],             // array of elements to process when none is given explicitly\n    positionToHash: true,    // after initial typeset pass, position to #hash location?\n     \n    showMathMenu: true,      // attach math context menu to typeset math?\n    showMathMenuMSIE: true,  // separtely determine if MSIE should have math menu\n                             //  (since the code for that is a bit delicate)\n    \n    menuSettings: {\n      zoom: \"None\",        //  when to do MathZoom\n      CTRL: false,         //    require CTRL for MathZoom?\n      ALT: false,          //    require Alt or Option?\n      CMD: false,          //    require CMD?\n      Shift: false,        //    require Shift?\n      discoverable: false, //  make math menu discoverable on hover?\n      zscale: \"200%\",      //  the scaling factor for MathZoom\n      renderer: null,      //  set when Jax are loaded\n      font: \"Auto\",        //  what font HTML-CSS should use\n      context: \"MathJax\",  //  or \"Browser\" for pass-through to browser menu\n      locale: null,        //  the language to use for messages\n      mpContext: false,    //  true means pass menu events to MathPlayer in IE\n      mpMouse: false,      //  true means pass mouse events to MathPlayer in IE\n      texHints: true,      //  include class names for TeXAtom elements\n      FastPreview: null,   //  use PreviewHTML output as preview?\n      assistiveMML: null,  //  include hidden MathML for screen readers?\n      inTabOrder: true,    //  set to false if math elements should be included in the tabindex\n      semantics: false     //  add semantics tag with original form in MathML output\n    },\n    \n    errorSettings: {\n       // localized HTML snippet structure for message to use\n      message: [\"[\",[\"MathProcessingError\",\"Math Processing Error\"],\"]\"],\n      style: {color: \"#CC0000\", \"font-style\":\"italic\"}  // style for message\n    },\n    \n    ignoreMMLattributes: {}  // attributes not to copy to HTML-CSS or SVG output\n                             //   from MathML input (in addition to the ones in MML.nocopyAttributes).\n                             //   An id set to true will be ignored, one set to false will\n                             //   be allowed (even if other criteria normally would prevent\n                             //   it from being copied); use false carefully!\n  },\n  \n  preProcessors: MathJax.Callback.Hooks(true), // list of callbacks for preprocessing (initialized by extensions)\n  inputJax: {},          // mime-type mapped to input jax (by registration)\n  outputJax: {order:{}}, // mime-type mapped to output jax list (by registration)\n\n  processSectionDelay: 50, // pause between input and output phases of processing\n  processUpdateTime: 250, // time between screen updates when processing math (milliseconds)\n  processUpdateDelay: 10, // pause between screen updates to allow other processing (milliseconds)\n\n  signal: MathJax.Callback.Signal(\"Hub\"), // Signal used for Hub events\n\n  Config: function (def) {\n    this.Insert(this.config,def);\n    if (this.config.Augment) {this.Augment(this.config.Augment)}\n  },\n  CombineConfig: function (name,def) {\n    var config = this.config, id, parent; name = name.split(/\\./);\n    for (var i = 0, m = name.length; i < m; i++) {\n      id = name[i]; if (!config[id]) {config[id] = {}}\n      parent = config; config = config[id];\n    }\n    parent[id] = config = this.Insert(def,config);\n    return config;\n  },\n  \n  Register: {\n    PreProcessor: function () {return MathJax.Hub.preProcessors.Add.apply(MathJax.Hub.preProcessors,arguments)},\n    MessageHook: function () {return MathJax.Hub.signal.MessageHook.apply(MathJax.Hub.signal,arguments)},\n    StartupHook: function () {return MathJax.Hub.Startup.signal.MessageHook.apply(MathJax.Hub.Startup.signal,arguments)},\n    LoadHook: function () {return MathJax.Ajax.LoadHook.apply(MathJax.Ajax,arguments)}\n  },\n  UnRegister: {\n    PreProcessor: function (hook) {MathJax.Hub.preProcessors.Remove(hook)},\n    MessageHook: function (hook) {MathJax.Hub.signal.RemoveHook(hook)},\n    StartupHook: function (hook) {MathJax.Hub.Startup.signal.RemoveHook(hook)},\n    LoadHook: function (hook) {MathJax.Ajax.removeHook(hook)}\n  },\n  \n  getAllJax: function (element) {\n    var jax = [], scripts = this.elementScripts(element);\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      if (scripts[i].MathJax && scripts[i].MathJax.elementJax)\n        {jax.push(scripts[i].MathJax.elementJax)}\n    }\n    return jax;\n  },\n  \n  getJaxByType: function (type,element) {\n    var jax = [], scripts = this.elementScripts(element);\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      if (scripts[i].MathJax && scripts[i].MathJax.elementJax &&\n          scripts[i].MathJax.elementJax.mimeType === type)\n            {jax.push(scripts[i].MathJax.elementJax)}\n    }\n    return jax;\n  },\n  \n  getJaxByInputType: function (type,element) {\n    var jax = [], scripts = this.elementScripts(element);\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      if (scripts[i].MathJax && scripts[i].MathJax.elementJax &&\n          scripts[i].type && scripts[i].type.replace(/ *;(.|\\s)*/,\"\") === type)\n        {jax.push(scripts[i].MathJax.elementJax)}\n    }\n    return jax;\n  },\n  \n  getJaxFor: function (element) {\n    if (typeof(element) === 'string') {element = document.getElementById(element)}\n    if (element && element.MathJax) {return element.MathJax.elementJax}\n    if (this.isMathJaxNode(element)) {\n      if (!element.isMathJax) {element = element.firstChild}  // for NativeMML output\n      while (element && !element.jaxID) {element = element.parentNode}\n      if (element) {return MathJax.OutputJax[element.jaxID].getJaxFromMath(element)}\n    }\n    return null;\n  },\n  \n  isJax: function (element) {\n    if (typeof(element) === 'string') {element = document.getElementById(element)}\n    if (this.isMathJaxNode(element)) {return 1}\n    if (element && (element.tagName||\"\").toLowerCase() === 'script') {\n      if (element.MathJax) \n        {return (element.MathJax.state === MathJax.ElementJax.STATE.PROCESSED ? 1 : -1)}\n      if (element.type && this.inputJax[element.type.replace(/ *;(.|\\s)*/,\"\")]) {return -1}\n    }\n    return 0;\n  },\n  isMathJaxNode: function (element) {\n    return !!element && (element.isMathJax || (element.className||\"\") === \"MathJax_MathML\");\n  },\n  \n  setRenderer: function (renderer,type) {\n    if (!renderer) return;\n    if (!MathJax.OutputJax[renderer]) {\n      this.config.menuSettings.renderer = \"\";\n      var file = \"[MathJax]/jax/output/\"+renderer+\"/config.js\";\n      return MathJax.Ajax.Require(file,[\"setRenderer\",this,renderer,type]);\n    } else {\n      this.config.menuSettings.renderer = renderer;\n      if (type == null) {type = \"jax/mml\"}\n      var jax = this.outputJax;\n      if (jax[type] && jax[type].length) {\n        if (renderer !== jax[type][0].id) {\n          jax[type].unshift(MathJax.OutputJax[renderer]);\n          return this.signal.Post([\"Renderer Selected\",renderer]);\n        }\n      }\n      return null;\n    }\n  },\n\n  Queue: function () {\n    return this.queue.Push.apply(this.queue,arguments);\n  },\n  \n  Typeset: function (element,callback) {\n    if (!MathJax.isReady) return null;\n    var ec = this.elementCallback(element,callback);\n    if (ec.count) {\n      var queue = MathJax.Callback.Queue(\n        [\"PreProcess\",this,ec.elements],\n        [\"Process\",this,ec.elements]\n      );\n    }\n    return queue.Push(ec.callback);\n  },\n  \n  PreProcess: function (element,callback) {\n    var ec = this.elementCallback(element,callback);\n    var queue = MathJax.Callback.Queue();\n    if (ec.count) {\n      var elements = (ec.count === 1 ? [ec.elements] : ec.elements);\n      queue.Push([\"Post\",this.signal,[\"Begin PreProcess\",ec.elements]]);\n      for (var i = 0, m = elements.length; i < m; i++) {\n        if (elements[i]) {queue.Push([\"Execute\",this.preProcessors,elements[i]])}\n      }\n      queue.Push([\"Post\",this.signal,[\"End PreProcess\",ec.elements]]);\n    }\n    return queue.Push(ec.callback);\n  },\n\n  Process:   function (element,callback) {return this.takeAction(\"Process\",element,callback)},\n  Update:    function (element,callback) {return this.takeAction(\"Update\",element,callback)},\n  Reprocess: function (element,callback) {return this.takeAction(\"Reprocess\",element,callback)},\n  Rerender:  function (element,callback) {return this.takeAction(\"Rerender\",element,callback)},\n  \n  takeAction: function (action,element,callback) {\n    var ec = this.elementCallback(element,callback);\n    var elements = ec.elements;\n    var queue = MathJax.Callback.Queue([\"Clear\",this.signal]);\n    var state = {\n      scripts: [],                  // filled in by prepareScripts\n      start: new Date().getTime(),  // timer for processing messages\n      i: 0, j: 0,                   // current script, current jax\n      jax: {},                      // scripts grouped by output jax\n      jaxIDs: []                    // id's of jax used\n    };\n    if (ec.count) {\n      var delay = [\"Delay\",MathJax.Callback,this.processSectionDelay];\n      if (!delay[2]) {delay = {}}\n      queue.Push(\n        [\"Post\",this.signal,[\"Begin \"+action,elements]],\n        [\"Post\",this.signal,[\"Begin Math\",elements,action]],\n        [\"prepareScripts\",this,action,elements,state],\n        [\"Post\",this.signal,[\"Begin Math Input\",elements,action]],\n        [\"processInput\",this,state],\n        [\"Post\",this.signal,[\"End Math Input\",elements,action]],\n        delay,\n        [\"prepareOutput\",this,state,\"preProcess\"],\n        delay,\n        [\"Post\",this.signal,[\"Begin Math Output\",elements,action]],\n        [\"processOutput\",this,state],\n        [\"Post\",this.signal,[\"End Math Output\",elements,action]],\n        delay,\n        [\"prepareOutput\",this,state,\"postProcess\"],\n        delay,\n        [\"Post\",this.signal,[\"End Math\",elements,action]],\n        [\"Post\",this.signal,[\"End \"+action,elements]]\n      );\n    }\n    return queue.Push(ec.callback);\n  },\n  \n  scriptAction: {\n    Process: function (script) {},\n    Update: function (script) {\n      var jax = script.MathJax.elementJax;\n      if (jax && jax.needsUpdate()) {jax.Remove(true); script.MathJax.state = jax.STATE.UPDATE}\n        else {script.MathJax.state = jax.STATE.PROCESSED}\n    },\n    Reprocess: function (script) {\n      var jax = script.MathJax.elementJax;\n      if (jax) {jax.Remove(true); script.MathJax.state = jax.STATE.UPDATE}\n    },\n    Rerender: function (script) {\n      var jax = script.MathJax.elementJax;\n      if (jax) {jax.Remove(true); script.MathJax.state = jax.STATE.OUTPUT}\n    }\n  },\n  \n  prepareScripts: function (action,element,state) {\n    if (arguments.callee.disabled) return;\n    var scripts = this.elementScripts(element);\n    var STATE = MathJax.ElementJax.STATE;\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      var script = scripts[i];\n      if (script.type && this.inputJax[script.type.replace(/ *;(.|\\n)*/,\"\")]) {\n        if (script.MathJax) {\n          if (script.MathJax.elementJax && script.MathJax.elementJax.hover) {\n            MathJax.Extension.MathEvents.Hover.ClearHover(script.MathJax.elementJax);\n          }\n          if (script.MathJax.state !== STATE.PENDING) {this.scriptAction[action](script)}\n        }\n        if (!script.MathJax) {script.MathJax = {state: STATE.PENDING}}\n        if (script.MathJax.error) delete script.MathJax.error;\n        if (script.MathJax.state !== STATE.PROCESSED) {state.scripts.push(script)}\n      }\n    }\n  },\n  \n  checkScriptSiblings: function (script) {\n    if (script.MathJax.checked) return;\n    var config = this.config, pre = script.previousSibling;\n    if (pre && pre.nodeName === \"#text\") {\n      var preJax,postJax, post = script.nextSibling;\n      if (post && post.nodeName !== \"#text\") {post = null}\n      if (config.preJax) {\n        if (typeof(config.preJax) === \"string\") {config.preJax = new RegExp(config.preJax+\"$\")}\n        preJax = pre.nodeValue.match(config.preJax);\n      }\n      if (config.postJax && post) {\n        if (typeof(config.postJax) === \"string\") {config.postJax = new RegExp(\"^\"+config.postJax)}\n        postJax = post.nodeValue.match(config.postJax);\n      }\n      if (preJax && (!config.postJax || postJax)) {\n        pre.nodeValue  = pre.nodeValue.replace\n          (config.preJax,(preJax.length > 1? preJax[1] : \"\"));\n        pre = null;\n      }\n      if (postJax && (!config.preJax || preJax)) {\n        post.nodeValue = post.nodeValue.replace\n          (config.postJax,(postJax.length > 1? postJax[1] : \"\"));\n      }\n      if (pre && !pre.nodeValue.match(/\\S/)) {pre = pre.previousSibling}\n    }\n    if (config.preRemoveClass && pre && pre.className === config.preRemoveClass)\n      {script.MathJax.preview = pre}\n    script.MathJax.checked = 1;\n  },\n  \n  processInput: function (state) {\n    var jax, STATE = MathJax.ElementJax.STATE;\n    var script, prev, m = state.scripts.length;\n    try {\n      //\n      //  Loop through the scripts\n      //\n      while (state.i < m) {\n        script = state.scripts[state.i]; if (!script) {state.i++; continue}\n        //\n        //  Remove previous error marker, if any\n        //\n        prev = script.previousSibling;\n        if (prev && prev.className === \"MathJax_Error\") {prev.parentNode.removeChild(prev)}\n        //\n        //  Check if already processed or needs processing\n        //\n        if (!script.MathJax || script.MathJax.state === STATE.PROCESSED) {state.i++; continue};\n        if (!script.MathJax.elementJax || script.MathJax.state === STATE.UPDATE) {\n          this.checkScriptSiblings(script);                 // remove preJax/postJax etc.\n          var type = script.type.replace(/ *;(.|\\s)*/,\"\");  // the input jax type\n          var input = this.inputJax[type];                  // the input jax itself\n          jax = input.Process(script,state);                // run the input jax\n          if (typeof jax === 'function') {                  // if a callback was returned\n            if (jax.called) continue;                       //   go back and call Process() again\n            this.RestartAfter(jax);                         //   wait for the callback\n          }\n          jax = jax.Attach(script,input.id);                // register the jax on the script\n          this.saveScript(jax,state,script,STATE);          // add script to state\n          this.postInputHooks.Execute(jax,input.id,script); // run global jax filters\n        } else if (script.MathJax.state === STATE.OUTPUT) {\n          this.saveScript(script.MathJax.elementJax,state,script,STATE); // add script to state\n        }\n        //\n        //  Go on to the next script, and check if we need to update the processing message\n        //\n        state.i++; var now = new Date().getTime();\n        if (now - state.start > this.processUpdateTime && state.i < state.scripts.length)\n          {state.start = now; this.RestartAfter(MathJax.Callback.Delay(1))}\n      }\n    } catch (err) {return this.processError(err,state,\"Input\")}\n    //\n    //  Put up final message, reset the state and return\n    //\n    if (state.scripts.length && this.config.showProcessingMessages)\n      {MathJax.Message.Set([\"ProcessMath\",\"Processing math: %1%%\",100],0)}\n    state.start = new Date().getTime(); state.i = state.j = 0;\n    return null;\n  },\n  postInputHooks: MathJax.Callback.Hooks(true),  // hooks to run after element jax is created\n  saveScript: function (jax,state,script,STATE) {\n    //\n    //  Check that output jax exists\n    //\n    if (!this.outputJax[jax.mimeType]) {\n      script.MathJax.state = STATE.UPDATE;\n      throw Error(\"No output jax registered for \"+jax.mimeType);\n    }\n    //\n    //  Record the output jax\n    //  and put this script in the queue for that jax\n    //\n    jax.outputJax = this.outputJax[jax.mimeType][0].id;\n    if (!state.jax[jax.outputJax]) {\n      if (state.jaxIDs.length === 0) {\n        // use original array until we know there are more (rather than two copies)\n        state.jax[jax.outputJax] = state.scripts;\n      } else {\n        if (state.jaxIDs.length === 1) // get the script so far for the existing jax\n          {state.jax[state.jaxIDs[0]] = state.scripts.slice(0,state.i)}\n        state.jax[jax.outputJax] = []; // start a new array for the new jax\n      }\n      state.jaxIDs.push(jax.outputJax); // save the ID of the jax\n    }\n    if (state.jaxIDs.length > 1) {state.jax[jax.outputJax].push(script)}\n    //\n    //  Mark script as needing output\n    //\n    script.MathJax.state = STATE.OUTPUT;\n  },\n  \n  //\n  //  Pre- and post-process scripts by jax\n  //    (to get scaling factors, hide/show output, and so on)\n  //  Since this can cause the jax to load, we need to trap restarts\n  //\n  prepareOutput: function (state,method) {\n    while (state.j < state.jaxIDs.length) {\n      var id = state.jaxIDs[state.j], JAX = MathJax.OutputJax[id];\n      if (JAX[method]) {\n        try {\n          var result = JAX[method](state);\n          if (typeof result === 'function') {\n            if (result.called) continue;  // go back and try again\n            this.RestartAfter(result);\n          }\n        } catch (err) {\n          if (!err.restart) {\n            MathJax.Message.Set([\"PrepError\",\"Error preparing %1 output (%2)\",id,method],null,600);\n            MathJax.Hub.lastPrepError = err;\n            state.j++;\n          }\n          return MathJax.Callback.After([\"prepareOutput\",this,state,method],err.restart);\n        }\n      }\n      state.j++;\n    }\n    return null;\n  },\n\n  processOutput: function (state) {\n    var result, STATE = MathJax.ElementJax.STATE, script, m = state.scripts.length;\n    try {\n      //\n      //  Loop through the scripts\n      //\n      while (state.i < m) {\n        //\n        //  Check that there is an element jax\n        //\n        script = state.scripts[state.i];\n        if (!script || !script.MathJax || script.MathJax.error) {state.i++; continue}\n        var jax = script.MathJax.elementJax; if (!jax) {state.i++; continue}\n        //\n        //  Call the output Jax's Process method (which will be its Translate()\n        //  method once loaded).  Mark it as complete and remove the preview unless\n        //  the Process() call returns an explicit false value (in which case, it will\n        //  handle this later during the postProcess phase, as HTML-CSS does).\n        //\n        result = MathJax.OutputJax[jax.outputJax].Process(script,state);\n        if (result !== false) {\n          script.MathJax.state = STATE.PROCESSED;\n          if (script.MathJax.preview) {script.MathJax.preview.innerHTML = \"\"}\n          //\n          //  Signal that new math is available\n          //\n          this.signal.Post([\"New Math\",jax.inputID]); // FIXME: wait for this?  (i.e., restart if returns uncalled callback)\n        }\n        //\n        //  Go on to next math expression\n        //\n        state.i++;\n        //\n        //  Update the processing message, if needed\n        //\n        var now = new Date().getTime();\n        if (now - state.start > this.processUpdateTime && state.i < state.scripts.length)\n          {state.start = now; this.RestartAfter(MathJax.Callback.Delay(this.processUpdateDelay))}\n      }\n    } catch (err) {return this.processError(err,state,\"Output\")}\n    //\n    //  Put up the typesetting-complete message\n    //\n    if (state.scripts.length && this.config.showProcessingMessages) {\n      MathJax.Message.Set([\"TypesetMath\",\"Typesetting math: %1%%\",100],0);\n      MathJax.Message.Clear(0);\n    }\n    state.i = state.j = 0;\n    return null;\n  },\n  \n  processMessage: function (state,type) {\n    var m = Math.floor(state.i/(state.scripts.length)*100);\n    var message = (type === \"Output\" ? [\"TypesetMath\",\"Typesetting math: %1%%\"] :\n                                       [\"ProcessMath\",\"Processing math: %1%%\"]);\n    if (this.config.showProcessingMessages) {MathJax.Message.Set(message.concat(m),0)}\n  },\n\n  processError: function (err,state,type) {\n    if (!err.restart) {\n      if (!this.config.errorSettings.message) {throw err}\n      this.formatError(state.scripts[state.i],err); state.i++;\n    }\n    this.processMessage(state,type);\n    return MathJax.Callback.After([\"process\"+type,this,state],err.restart);\n  },\n  \n  formatError: function (script,err) {\n    var LOCALIZE = function (id,text,arg1,arg2) {return MathJax.Localization._(id,text,arg1,arg2)};\n    //\n    //  Get the error message, URL, and line, and save it for\n    //    reporting in the Show Math As Error menu\n    //\n    var message = LOCALIZE(\"ErrorMessage\",\"Error: %1\",err.message)+\"\\n\";\n    if (err.sourceURL||err.fileName) message += \"\\n\"+LOCALIZE(\"ErrorFile\",\"file: %1\",err.sourceURL||err.fileName);\n    if (err.line||err.lineNumber) message += \"\\n\"+LOCALIZE(\"ErrorLine\",\"line: %1\",err.line||err.lineNumber);\n    message += \"\\n\\n\"+LOCALIZE(\"ErrorTips\",\"Debugging tips: use %1, inspect %2 in the browser console\",\"'unpacked/MathJax.js'\",\"'MathJax.Hub.lastError'\");\n    script.MathJax.error = MathJax.OutputJax.Error.Jax(message,script);\n    if (script.MathJax.elementJax)\n      script.MathJax.error.inputID = script.MathJax.elementJax.inputID;\n    //\n    //  Create the [Math Processing Error] span\n    //\n    var errorSettings = this.config.errorSettings;\n    var errorText = LOCALIZE(errorSettings.messageId,errorSettings.message);\n    var error = MathJax.HTML.Element(\"span\", {\n      className:\"MathJax_Error\", jaxID:\"Error\", isMathJax:true,\n      id: script.MathJax.error.inputID+\"-Frame\"\n    },[[\"span\",null,errorText]]);\n    //\n    //  Attach the menu events\n    //\n    MathJax.Ajax.Require(\"[MathJax]/extensions/MathEvents.js\",function () {\n      var EVENT = MathJax.Extension.MathEvents.Event,\n          HUB = MathJax.Hub;\n      error.oncontextmenu = EVENT.Menu;\n      error.onmousedown = EVENT.Mousedown;\n      error.onkeydown = EVENT.Keydown;\n      error.tabIndex = HUB.getTabOrder(HUB.getJaxFor(script));\n    });\n    //\n    //  Insert the error into the page and remove any preview\n    //\n    var node = document.getElementById(error.id);\n    if (node) node.parentNode.removeChild(node);\n    script.parentNode.insertBefore(error,script);\n    if (script.MathJax.preview) {script.MathJax.preview.innerHTML = \"\"}\n    //\n    //  Save the error for debugging purposes\n    //  Report the error as a signal\n    //\n    this.lastError = err;\n    this.signal.Post([\"Math Processing Error\",script,err]);\n  },\n  \n  RestartAfter: function (callback) {\n    throw this.Insert(Error(\"restart\"),{restart: MathJax.Callback(callback)});\n  },\n  \n  elementCallback: function (element,callback) {\n    if (callback == null && (element instanceof Array || typeof element === 'function'))\n      {try {MathJax.Callback(element); callback = element; element = null} catch(e) {}}\n    if (element == null) {element = this.config.elements || []}\n    if (this.isHTMLCollection(element)) {element = this.HTMLCollection2Array(element)}\n    if (!(element instanceof Array)) {element = [element]}\n    element = [].concat(element); // make a copy so the original isn't changed\n    for (var i = 0, m = element.length; i < m; i++)\n      {if (typeof(element[i]) === 'string') {element[i] = document.getElementById(element[i])}}\n    if (!document.body) {document.body = document.getElementsByTagName(\"body\")[0]}\n    if (element.length == 0) {element.push(document.body)}\n    if (!callback) {callback = {}}\n    return {\n      count: element.length, \n      elements: (element.length === 1 ? element[0] : element),\n      callback: callback\n    };\n  },\n  \n  elementScripts: function (element) {\n    var scripts = [];\n    if (element instanceof Array || this.isHTMLCollection(element)) {\n      for (var i = 0, m = element.length; i < m; i++) {\n        var alreadyDone = 0;\n        for (var j = 0; j < i && !alreadyDone; j++)\n          {alreadyDone = element[j].contains(element[i])}\n        if (!alreadyDone) scripts.push.apply(scripts,this.elementScripts(element[i]));\n      }\n      return scripts;\n    }\n    if (typeof(element) === 'string') {element = document.getElementById(element)}\n    if (!document.body) {document.body = document.getElementsByTagName(\"body\")[0]}\n    if (element == null) {element = document.body}\n    if (element.tagName != null && element.tagName.toLowerCase() === \"script\") {return [element]}\n    scripts = element.getElementsByTagName(\"script\");\n    if (this.msieHTMLCollectionBug) {scripts = this.HTMLCollection2Array(scripts)}\n    return scripts;\n  },\n\n  //\n  //  IE8 fails to check \"obj instanceof HTMLCollection\" for some values of obj.\n  //\n  isHTMLCollection: function (obj) {\n    return (\"HTMLCollection\" in window && typeof(obj) === \"object\" && obj instanceof HTMLCollection);\n  },\n  //\n  //  IE8 doesn't deal with HTMLCollection as an array, so convert to array\n  //\n  HTMLCollection2Array: function (nodes) {\n    if (!this.msieHTMLCollectionBug) {return [].slice.call(nodes)}\n    var NODES = [];\n    for (var i = 0, m = nodes.length; i < m; i++) {NODES[i] = nodes[i]}\n    return NODES;\n  },\n  \n  Insert: function (dst,src) {\n    for (var id in src) {if (src.hasOwnProperty(id)) {\n      // allow for concatenation of arrays?\n      if (typeof src[id] === 'object' && !(src[id] instanceof Array) &&\n         (typeof dst[id] === 'object' || typeof dst[id] === 'function')) {\n        this.Insert(dst[id],src[id]);\n      } else {\n        dst[id] = src[id];\n      }\n    }}\n    return dst;\n  },\n\n  getTabOrder: function(script) {\n    return this.config.menuSettings.inTabOrder ? 0 : -1;\n  },\n\n  // Old browsers (e.g. Internet Explorer <= 8) do not support trim().\n  SplitList: (\"trim\" in String.prototype ?\n              function (list) {return list.trim().split(/\\s+/)} :\n              function (list) {return list.replace(/^\\s+/,'').\n                                           replace(/\\s+$/,'').split(/\\s+/)})\n};\nMathJax.Hub.Insert(MathJax.Hub.config.styles,MathJax.Message.styles);\nMathJax.Hub.Insert(MathJax.Hub.config.styles,{\".MathJax_Error\":MathJax.Hub.config.errorSettings.style});\n\n//\n//  Storage area for extensions and preprocessors\n//\nMathJax.Extension = {};\n\n//\n//  Hub Startup code\n//\nMathJax.Hub.Configured = MathJax.Callback({}); // called when configuration is complete\nMathJax.Hub.Startup = {\n  script: \"\", // the startup script from the SCRIPT call that loads MathJax.js\n  queue:   MathJax.Callback.Queue(),           // Queue used for startup actions\n  signal:  MathJax.Callback.Signal(\"Startup\"), // Signal used for startup events\n  params:  {},\n\n  //\n  //  Load the configuration files\n  //\n  Config: function () {\n    this.queue.Push([\"Post\",this.signal,\"Begin Config\"]);\n    //\n    //  If a locale is given as a parameter,\n    //    set the locale and the default menu value for the locale\n    //\n    if (this.params.locale) {\n      MathJax.Localization.resetLocale(this.params.locale);\n      MathJax.Hub.config.menuSettings.locale = this.params.locale;\n    }\n    //\n    //  Run the config files, if any are given in the parameter list\n    //\n    if (this.params.config) {\n      var files = this.params.config.split(/,/);\n      for (var i = 0, m = files.length; i < m; i++) {\n        if (!files[i].match(/\\.js$/)) {files[i] += \".js\"}\n        this.queue.Push([\"Require\",MathJax.Ajax,this.URL(\"config\",files[i])]);\n      }\n    }\n    //\n    //  Perform author configuration from in-line MathJax = {...}\n    //\n    this.queue.Push([\"Config\",MathJax.Hub,MathJax.AuthorConfig]);\n    //\n    //  Run the deprecated configuration script, if any (ignoring return value)\n    //  Wait for the startup delay signal\n    //  Run the mathjax-config blocks\n    //  Load the files in the configuration's config array\n    //\n    if (this.script.match(/\\S/)) {this.queue.Push(this.script+\";\\n1;\")}\n    this.queue.Push(\n      [\"ConfigDelay\",this],\n      [\"ConfigBlocks\",this],\n      [function (THIS) {return THIS.loadArray(MathJax.Hub.config.config,\"config\",null,true)},this],\n      [\"Post\",this.signal,\"End Config\"]\n    );\n  },\n  //\n  //  Return the delay callback\n  //\n  ConfigDelay: function () {\n    var delay = this.params.delayStartupUntil || MathJax.Hub.config.delayStartupUntil;\n    if (delay === \"onload\") {return this.onload}\n    if (delay === \"configured\") {return MathJax.Hub.Configured}\n    return delay;\n  },\n  //\n  //  Run the scripts of type=text/x-mathjax-config\n  //\n  ConfigBlocks: function () {\n    var scripts = document.getElementsByTagName(\"script\");\n    var last = null, queue = MathJax.Callback.Queue();\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      var type = String(scripts[i].type).replace(/ /g,\"\");\n      if (type.match(/^text\\/x-mathjax-config(;.*)?$/) && !type.match(/;executed=true/)) {\n        scripts[i].type += \";executed=true\";\n        last = queue.Push(scripts[i].innerHTML+\";\\n1;\");\n      }\n    }\n    return last;\n  },\n\n  //\n  //  Read cookie and set up menu defaults\n  //  (set the locale according to the cookie)\n  //  (adjust the jax to accommodate renderer preferences)\n  //\n  Cookie: function () {\n    return this.queue.Push(\n      [\"Post\",this.signal,\"Begin Cookie\"],\n      [\"Get\",MathJax.HTML.Cookie,\"menu\",MathJax.Hub.config.menuSettings],\n      [function (config) {\n        var SETTINGS = config.menuSettings;\n        if (SETTINGS.locale) MathJax.Localization.resetLocale(SETTINGS.locale);\n        var renderer = config.menuSettings.renderer, jax = config.jax;\n        if (renderer) {\n          var name = \"output/\"+renderer; jax.sort();\n          for (var i = 0, m = jax.length; i < m; i++) {\n            if (jax[i].substr(0,7) === \"output/\") break;\n          }\n          if (i == m-1) {jax.pop()} else {\n            while (i < m) {if (jax[i] === name) {jax.splice(i,1); break}; i++}\n          }\n          jax.unshift(name);\n        }\n        if (SETTINGS.CHTMLpreview != null) {\n          if (SETTINGS.FastPreview == null) SETTINGS.FastPreview = SETTINGS.CHTMLpreview;\n          delete SETTINGS.CHTMLpreview;\n        }\n        if (SETTINGS.FastPreview && !MathJax.Extension[\"fast-preview\"])\n          MathJax.Hub.config.extensions.push(\"fast-preview.js\");\n        if (config.menuSettings.assistiveMML && !MathJax.Extension.AssistiveMML)\n          MathJax.Hub.config.extensions.push(\"AssistiveMML.js\");\n      },MathJax.Hub.config],\n      [\"Post\",this.signal,\"End Cookie\"]\n    );\n  },\n  //\n  //  Setup stylesheets and extra styles\n  //\n  Styles: function () {\n    return this.queue.Push(\n      [\"Post\",this.signal,\"Begin Styles\"],\n      [\"loadArray\",this,MathJax.Hub.config.styleSheets,\"config\"],\n      [\"Styles\",MathJax.Ajax,MathJax.Hub.config.styles],\n      [\"Post\",this.signal,\"End Styles\"]\n    );\n  },\n  //\n  //  Load the input and output jax\n  //\n  Jax: function () {\n    var config = MathJax.Hub.config, jax = MathJax.Hub.outputJax;\n    //  Save the order of the output jax since they are loading asynchronously\n    for (var i = 0, m = config.jax.length, k = 0; i < m; i++) {\n      var name = config.jax[i].substr(7);\n      if (config.jax[i].substr(0,7) === \"output/\" && jax.order[name] == null)\n        {jax.order[name] = k; k++}\n    }\n    var queue = MathJax.Callback.Queue();\n    return queue.Push(\n      [\"Post\",this.signal,\"Begin Jax\"],\n      [\"loadArray\",this,config.jax,\"jax\",\"config.js\"],\n      [\"Post\",this.signal,\"End Jax\"]\n    );\n  },\n  //\n  //  Load the extensions\n  //\n  Extensions: function () {\n    var queue = MathJax.Callback.Queue();\n    return queue.Push(\n      [\"Post\",this.signal,\"Begin Extensions\"],\n      [\"loadArray\",this,MathJax.Hub.config.extensions,\"extensions\"],\n      [\"Post\",this.signal,\"End Extensions\"]\n    );\n  },\n  \n  //\n  //  Initialize the Message system\n  //\n  Message: function () {\n    MathJax.Message.Init(true);\n  },\n  \n  //\n  //  Set the math menu renderer, if it isn't already\n  //  (this must come after the jax are loaded)\n  //\n  Menu: function () {\n    var menu = MathJax.Hub.config.menuSettings, jax = MathJax.Hub.outputJax, registered;\n    for (var id in jax) {if (jax.hasOwnProperty(id)) {\n      if (jax[id].length) {registered = jax[id]; break}\n    }}\n    if (registered && registered.length) {\n      if (menu.renderer && menu.renderer !== registered[0].id)\n        {registered.unshift(MathJax.OutputJax[menu.renderer])}\n      menu.renderer = registered[0].id;\n    }\n  },\n  \n  //\n  //  Set the location to the designated hash position\n  //\n  Hash: function () {\n    if (MathJax.Hub.config.positionToHash && document.location.hash &&\n        document.body && document.body.scrollIntoView) {\n      var name = document.location.hash.substr(1);\n      var target = document.getElementById(name);\n      if (!target) {\n        var a = document.getElementsByTagName(\"a\");\n        for (var i = 0, m = a.length; i < m; i++)\n          {if (a[i].name === name) {target = a[i]; break}}\n      }\n      if (target) {\n        while (!target.scrollIntoView) {target = target.parentNode}\n        target = this.HashCheck(target);\n        if (target && target.scrollIntoView)\n          {setTimeout(function () {target.scrollIntoView(true)},1)}\n      }\n    }\n  },\n  HashCheck: function (target) {\n    var jax = MathJax.Hub.getJaxFor(target);\n    if (jax && MathJax.OutputJax[jax.outputJax].hashCheck)\n      {target = MathJax.OutputJax[jax.outputJax].hashCheck(target)}\n    return target;\n  },\n  \n  //\n  //  Load the Menu and Zoom code, if it hasn't already been loaded.\n  //  This is called after the initial typeset, so should no longer be\n  //  competing with other page loads, but will make these available\n  //  if needed later on.\n  //\n  MenuZoom: function () {\n    if (MathJax.Hub.config.showMathMenu) {\n      if (!MathJax.Extension.MathMenu) {\n        setTimeout(\n          function () {\n            MathJax.Callback.Queue(\n              [\"Require\",MathJax.Ajax,\"[MathJax]/extensions/MathMenu.js\",{}],\n              [\"loadDomain\",MathJax.Localization,\"MathMenu\"]\n            )\n          },1000\n        );\n      } else {\n        setTimeout(\n          MathJax.Callback([\"loadDomain\",MathJax.Localization,\"MathMenu\"]),\n          1000\n        );\n      }\n      if (!MathJax.Extension.MathZoom) {\n        setTimeout(\n          MathJax.Callback([\"Require\",MathJax.Ajax,\"[MathJax]/extensions/MathZoom.js\",{}]),\n          2000\n        );\n      }\n    }\n  },\n  \n  //\n  //  Setup the onload callback\n  //\n  onLoad: function () {\n    var onload = this.onload =\n      MathJax.Callback(function () {MathJax.Hub.Startup.signal.Post(\"onLoad\")});\n    if (document.body && document.readyState)\n      if (MathJax.Hub.Browser.isMSIE) {\n        // IE can change from loading to interactive before\n        //  full page is ready, so go with complete (even though\n        //  that means we may have to wait longer).\n        if (document.readyState === \"complete\") {return [onload]}\n      } else if (document.readyState !== \"loading\") {return [onload]}\n    if (window.addEventListener) {\n      window.addEventListener(\"load\",onload,false);\n      if (!this.params.noDOMContentEvent)\n        {window.addEventListener(\"DOMContentLoaded\",onload,false)}\n    }\n    else if (window.attachEvent) {window.attachEvent(\"onload\",onload)}\n    else {window.onload = onload}\n    return onload;\n  },\n\n  //\n  //  Perform the initial typesetting (or skip if configuration says to)\n  //\n  Typeset: function (element,callback) {\n    if (MathJax.Hub.config.skipStartupTypeset) {return function () {}}\n    return this.queue.Push(\n      [\"Post\",this.signal,\"Begin Typeset\"],\n      [\"Typeset\",MathJax.Hub,element,callback],\n      [\"Post\",this.signal,\"End Typeset\"]\n    );\n  },\n\n  //\n  //  Create a URL in the MathJax hierarchy\n  //\n  URL: function (dir,name) {\n    if (!name.match(/^([a-z]+:\\/\\/|\\[|\\/)/)) {name = \"[MathJax]/\"+dir+\"/\"+name}\n    return name;\n  },\n\n  //\n  //  Load an array of files, waiting for all of them\n  //  to be loaded before going on\n  //\n  loadArray: function (files,dir,name,synchronous) {\n    if (files) {\n      if (!(files instanceof Array)) {files = [files]}\n      if (files.length) {\n        var queue = MathJax.Callback.Queue(), callback = {}, file;\n        for (var i = 0, m = files.length; i < m; i++) {\n          file = this.URL(dir,files[i]);\n          if (name) {file += \"/\" + name}\n          if (synchronous) {queue.Push([\"Require\",MathJax.Ajax,file,callback])}\n                      else {queue.Push(MathJax.Ajax.Require(file,callback))}\n        }\n        return queue.Push({}); // wait for everything to finish\n      }\n    }\n    return null;\n  }\n  \n};\n\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME], ROOT = \"[\"+BASENAME+\"]\";\n  var HUB = BASE.Hub, AJAX = BASE.Ajax, CALLBACK = BASE.Callback;\n\n  var JAX = MathJax.Object.Subclass({\n    JAXFILE: \"jax.js\",\n    require: null, // array of files to load before jax.js is complete\n    config: {},\n    //\n    //  Make a subclass and return an instance of it.\n    //  (FIXME: should we replace config with a copy of the constructor's\n    //   config?  Otherwise all subclasses share the same config structure.)\n    //\n    Init: function (def,cdef) {\n      if (arguments.length === 0) {return this}\n      return (this.constructor.Subclass(def,cdef))();\n    },\n    //\n    //  Augment by merging with class definition (not replacing)\n    //\n    Augment: function (def,cdef) {\n      var cObject = this.constructor, ndef = {};\n      if (def != null) {\n        for (var id in def) {if (def.hasOwnProperty(id)) {\n          if (typeof def[id] === \"function\")\n            {cObject.protoFunction(id,def[id])} else {ndef[id] = def[id]}\n        }}\n        // MSIE doesn't list toString even if it is not native so handle it separately\n        if (def.toString !== cObject.prototype.toString && def.toString !== {}.toString)\n          {cObject.protoFunction('toString',def.toString)}\n      }\n      HUB.Insert(cObject.prototype,ndef);\n      cObject.Augment(null,cdef);\n      return this;\n    },\n    Translate: function (script,state) {\n      throw Error(this.directory+\"/\"+this.JAXFILE+\" failed to define the Translate() method\");\n    },\n    Register: function (mimetype) {},\n    Config: function () {\n      this.config = HUB.CombineConfig(this.id,this.config);\n      if (this.config.Augment) {this.Augment(this.config.Augment)}\n    },\n    Startup: function () {},\n    loadComplete: function (file) {\n      if (file === \"config.js\") {\n        return AJAX.loadComplete(this.directory+\"/\"+file);\n      } else {\n        var queue = CALLBACK.Queue();\n        queue.Push(\n          HUB.Register.StartupHook(\"End Config\",{}), // wait until config complete\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Config\"],\n          [\"Config\",this],\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Require\"],\n          // Config may set the required and extensions array,\n          //  so use functions to delay making the reference until needed\n          [function (THIS) {return MathJax.Hub.Startup.loadArray(THIS.require,this.directory)},this],\n          [function (config,id) {return MathJax.Hub.Startup.loadArray(config.extensions,\"extensions/\"+id)},this.config||{},this.id],\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Startup\"],\n          [\"Startup\",this],\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Ready\"]\n        );\n        if (this.copyTranslate) {\n          queue.Push(\n            [function (THIS) {\n              THIS.preProcess  = THIS.preTranslate;\n              THIS.Process     = THIS.Translate;\n              THIS.postProcess = THIS.postTranslate;\n            },this.constructor.prototype]\n          );\n        }\n        return queue.Push([\"loadComplete\",AJAX,this.directory+\"/\"+file]);\n      }\n    }\n  },{\n    id: \"Jax\",\n    version: \"2.6.0\",\n    directory: ROOT+\"/jax\",\n    extensionDir: ROOT+\"/extensions\"\n  });\n\n  /***********************************/\n\n  BASE.InputJax = JAX.Subclass({\n    elementJax: \"mml\",  // the element jax to load for this input jax\n    sourceMenuTitle: /*_(MathMenu)*/ [\"Original\",\"Original Form\"],\n    copyTranslate: true,\n    Process: function (script,state) {\n      var queue = CALLBACK.Queue(), file;\n      // Load any needed element jax\n      var jax = this.elementJax; if (!(jax instanceof Array)) {jax = [jax]}\n      for (var i = 0, m = jax.length; i < m; i++) {\n        file = BASE.ElementJax.directory+\"/\"+jax[i]+\"/\"+this.JAXFILE;\n        if (!this.require) {this.require = []}\n          else if (!(this.require instanceof Array)) {this.require = [this.require]};\n        this.require.push(file);  // so Startup will wait for it to be loaded\n        queue.Push(AJAX.Require(file));\n      }\n      // Load the input jax\n      file = this.directory+\"/\"+this.JAXFILE;\n      var load = queue.Push(AJAX.Require(file));\n      if (!load.called) {\n        this.constructor.prototype.Process = function () {\n          if (!load.called) {return load}\n          throw Error(file+\" failed to load properly\");\n        }\n      }\n      // Load the associated output jax\n      jax = HUB.outputJax[\"jax/\"+jax[0]];\n      if (jax) {queue.Push(AJAX.Require(jax[0].directory+\"/\"+this.JAXFILE))}\n      return queue.Push({});\n    },\n    needsUpdate: function (jax) {\n      var script = jax.SourceElement();\n      return (jax.originalText !== BASE.HTML.getScript(script));\n    },\n    Register: function (mimetype) {\n      if (!HUB.inputJax) {HUB.inputJax = {}}\n      HUB.inputJax[mimetype] = this;\n    }\n  },{\n    id: \"InputJax\",\n    version: \"2.6.0\",\n    directory: JAX.directory+\"/input\",\n    extensionDir: JAX.extensionDir\n  });\n\n  /***********************************/\n\n  BASE.OutputJax = JAX.Subclass({\n    copyTranslate: true,\n    preProcess: function (state) {\n      var load, file = this.directory+\"/\"+this.JAXFILE;\n      this.constructor.prototype.preProcess = function (state) {\n\tif (!load.called) {return load}\n        throw Error(file+\" failed to load properly\");\n      }\n      load = AJAX.Require(file);\n      return load;\n    },\n    Register: function (mimetype) {\n      var jax = HUB.outputJax;\n      if (!jax[mimetype]) {jax[mimetype] = []}\n      //  If the output jax is earlier in the original configuration list, put it first here\n      if (jax[mimetype].length && (this.id === HUB.config.menuSettings.renderer ||\n            (jax.order[this.id]||0) < (jax.order[jax[mimetype][0].id]||0)))\n        {jax[mimetype].unshift(this)} else {jax[mimetype].push(this)}\n      //  Make sure the element jax is loaded before Startup is called\n      if (!this.require) {this.require = []}\n        else if (!(this.require instanceof Array)) {this.require = [this.require]};\n      this.require.push(BASE.ElementJax.directory+\"/\"+(mimetype.split(/\\//)[1])+\"/\"+this.JAXFILE);\n    },\n    Remove: function (jax) {}\n  },{\n    id: \"OutputJax\",\n    version: \"2.6.0\",\n    directory: JAX.directory+\"/output\",\n    extensionDir: JAX.extensionDir,\n    fontDir: ROOT+(BASE.isPacked?\"\":\"/..\")+\"/fonts\",\n    imageDir: ROOT+(BASE.isPacked?\"\":\"/..\")+\"/images\"\n  });\n  \n  /***********************************/\n\n  BASE.ElementJax = JAX.Subclass({\n    // make a subclass, not an instance\n    Init: function (def,cdef) {return this.constructor.Subclass(def,cdef)},\n    \n    inputJax: null,\n    outputJax: null,\n    inputID: null,\n    originalText: \"\",\n    mimeType: \"\",\n    sourceMenuTitle: /*_(MathMenu)*/ [\"MathMLcode\",\"MathML Code\"],\n    \n    Text: function (text,callback) {\n      var script = this.SourceElement();\n      BASE.HTML.setScript(script,text);\n      script.MathJax.state = this.STATE.UPDATE;\n      return HUB.Update(script,callback);\n    },\n    Reprocess: function (callback) {\n      var script = this.SourceElement();\n      script.MathJax.state = this.STATE.UPDATE;\n      return HUB.Reprocess(script,callback);\n    },\n    Update: function (callback) {return this.Rerender(callback)},\n    Rerender: function (callback) {\n      var script = this.SourceElement();\n      script.MathJax.state = this.STATE.OUTPUT;\n      return HUB.Process(script,callback);\n    },\n    Remove: function (keep) {\n      if (this.hover) {this.hover.clear(this)}\n      BASE.OutputJax[this.outputJax].Remove(this);\n      if (!keep) {\n        HUB.signal.Post([\"Remove Math\",this.inputID]); // wait for this to finish?\n        this.Detach();\n      }\n    },\n    needsUpdate: function () {\n      return BASE.InputJax[this.inputJax].needsUpdate(this);\n    },\n\n    SourceElement: function () {return document.getElementById(this.inputID)},\n    \n    Attach: function (script,inputJax) {\n      var jax = script.MathJax.elementJax;\n      if (script.MathJax.state === this.STATE.UPDATE) {\n        jax.Clone(this);\n      } else {\n        jax = script.MathJax.elementJax = this;\n        if (script.id) {this.inputID = script.id}\n          else {script.id = this.inputID = BASE.ElementJax.GetID(); this.newID = 1}\n      }\n      jax.originalText = BASE.HTML.getScript(script);\n      jax.inputJax = inputJax;\n      if (jax.root) {jax.root.inputID = jax.inputID}\n      return jax;\n    },\n    Detach: function () {\n      var script = this.SourceElement(); if (!script) return;\n      try {delete script.MathJax} catch(err) {script.MathJax = null}\n      if (this.newID) {script.id = \"\"}\n    },\n    Clone: function (jax) {\n      var id;\n      for (id in this) {\n        if (!this.hasOwnProperty(id)) continue;\n        if (typeof(jax[id]) === 'undefined' && id !== 'newID') {delete this[id]}\n      }\n      for (id in jax) {\n        if (!jax.hasOwnProperty(id)) continue;\n        if (typeof(this[id]) === 'undefined' || (this[id] !== jax[id] && id !== 'inputID'))\n          {this[id] = jax[id]}\n      }\n    }\n  },{\n    id: \"ElementJax\",\n    version: \"2.6.0\",\n    directory: JAX.directory+\"/element\",\n    extensionDir: JAX.extensionDir,\n    ID: 0,  // jax counter (for IDs)\n    STATE: {\n      PENDING: 1,      // script is identified as math but not yet processed\n      PROCESSED: 2,    // script has been processed\n      UPDATE: 3,       // elementJax should be updated\n      OUTPUT: 4        // output should be updated (input is OK)\n    },\n    \n    GetID: function () {this.ID++; return \"MathJax-Element-\"+this.ID},\n    Subclass: function () {\n      var obj = JAX.Subclass.apply(this,arguments);\n      obj.loadComplete = this.prototype.loadComplete;\n      return obj;\n    }\n  });\n  BASE.ElementJax.prototype.STATE = BASE.ElementJax.STATE;\n\n  //\n  //  Some \"Fake\" jax used to allow menu access for \"Math Processing Error\" messages\n  //\n  BASE.OutputJax.Error = {\n    id: \"Error\", version: \"2.6.0\", config: {}, errors: 0,\n    ContextMenu: function () {return BASE.Extension.MathEvents.Event.ContextMenu.apply(BASE.Extension.MathEvents.Event,arguments)},\n    Mousedown:   function () {return BASE.Extension.MathEvents.Event.AltContextMenu.apply(BASE.Extension.MathEvents.Event,arguments)},\n    getJaxFromMath: function (math) {return (math.nextSibling.MathJax||{}).error},\n    Jax: function (text,script) {\n      var jax = MathJax.Hub.inputJax[script.type.replace(/ *;(.|\\s)*/,\"\")];\n      this.errors++;\n      return {\n        inputJax: (jax||{id:\"Error\"}).id,  // Use Error InputJax as fallback\n        outputJax: \"Error\",\n        inputID: \"MathJax-Error-\"+this.errors,\n        sourceMenuTitle: /*_(MathMenu)*/ [\"ErrorMessage\",\"Error Message\"],\n        sourceMenuFormat: \"Error\",\n        originalText: MathJax.HTML.getScript(script),\n        errorText: text\n      }\n    }\n  };\n  BASE.InputJax.Error = {\n    id: \"Error\", version: \"2.6.0\", config: {},\n    sourceMenuTitle: /*_(MathMenu)*/ [\"Original\",\"Original Form\"]\n  };\n  \n})(\"MathJax\");\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n\n  var HUB = BASE.Hub; var STARTUP = HUB.Startup; var CONFIG = HUB.config;\n  var HEAD = document.head || (document.getElementsByTagName(\"head\")[0]);\n  if (!HEAD) {HEAD = document.childNodes[0]};\n  var scripts = (document.documentElement || document).getElementsByTagName(\"script\");\n  if (scripts.length === 0 && HEAD.namespaceURI)\n    scripts = document.getElementsByTagNameNS(HEAD.namespaceURI,\"script\");\n  var namePattern = new RegExp(\"(^|/)\"+BASENAME+\"\\\\.js(\\\\?.*)?$\");\n  for (var i = scripts.length-1; i >= 0; i--) {\n    if ((scripts[i].src||\"\").match(namePattern)) {\n      STARTUP.script = scripts[i].innerHTML;\n      if (RegExp.$2) {\n        var params = RegExp.$2.substr(1).split(/\\&/);\n        for (var j = 0, m = params.length; j < m; j++) {\n          var KV = params[j].match(/(.*)=(.*)/);\n          if (KV) {STARTUP.params[unescape(KV[1])] = unescape(KV[2])}\n        }\n      }\n      CONFIG.root = scripts[i].src.replace(/(^|\\/)[^\\/]*(\\?.*)?$/,'')\n        // convert mathjax/latest to mathjax/x.y-latest so that all files are the same version\n        .replace(/^(https?:\\/\\/cdn.mathjax.org\\/mathjax\\/)(latest)/,\"$1\"+BASE.version.split(/\\./).slice(0,2).join(\".\")+\"-$2\");\n      BASE.Ajax.config.root = CONFIG.root;\n      break;\n    }\n  }\n\n  var AGENT = navigator.userAgent;\n  var BROWSERS = {\n    isMac:       (navigator.platform.substr(0,3) === \"Mac\"),\n    isPC:        (navigator.platform.substr(0,3) === \"Win\"),\n    isMSIE:      (\"ActiveXObject\" in window && \"clipboardData\" in window),\n    isEdge:      (\"MSGestureEvent\" in window && \"chrome\" in window &&\n                     window.chrome.loadTimes == null),\n    isFirefox:   (!!AGENT.match(/Gecko\\//) && !AGENT.match(/like Gecko/)),\n    isSafari:    (!!AGENT.match(/ (Apple)?WebKit\\//) && !AGENT.match(/ like iPhone /) &&\n                     (!window.chrome || window.chrome.app == null)),\n    isChrome:    (\"chrome\" in window && window.chrome.loadTimes != null),\n    isOpera:     (\"opera\" in window && window.opera.version != null),\n    isKonqueror: (\"konqueror\" in window && navigator.vendor == \"KDE\"),\n    versionAtLeast: function (v) {\n      var bv = (this.version).split('.'); v = (new String(v)).split('.');\n      for (var i = 0, m = v.length; i < m; i++)\n        {if (bv[i] != v[i]) {return parseInt(bv[i]||\"0\") >= parseInt(v[i])}}\n      return true;\n    },\n    Select: function (choices) {\n      var browser = choices[HUB.Browser];\n      if (browser) {return browser(HUB.Browser)}\n      return null;\n    }\n  };\n\n  var xAGENT = AGENT\n    .replace(/^Mozilla\\/(\\d+\\.)+\\d+ /,\"\")                                   // remove initial Mozilla, which is never right\n    .replace(/[a-z][-a-z0-9._: ]+\\/\\d+[^ ]*-[^ ]*\\.([a-z][a-z])?\\d+ /i,\"\")  // remove linux version\n    .replace(/Gentoo |Ubuntu\\/(\\d+\\.)*\\d+ (\\([^)]*\\) )?/,\"\");               // special case for these\n\n  HUB.Browser = HUB.Insert(HUB.Insert(new String(\"Unknown\"),{version: \"0.0\"}),BROWSERS);\n  for (var browser in BROWSERS) {if (BROWSERS.hasOwnProperty(browser)) {\n    if (BROWSERS[browser] && browser.substr(0,2) === \"is\") {\n      browser = browser.slice(2);\n      if (browser === \"Mac\" || browser === \"PC\") continue;\n      HUB.Browser = HUB.Insert(new String(browser),BROWSERS);\n      var VERSION = new RegExp(\n        \".*(Version/| Trident/.*; rv:)((?:\\\\d+\\\\.)+\\\\d+)|\" +                      // for Safari, Opera10, and IE11+\n        \".*(\"+browser+\")\"+(browser == \"MSIE\" ? \" \" : \"/\")+\"((?:\\\\d+\\\\.)*\\\\d+)|\"+  // for one of the main browsers\n        \"(?:^|\\\\(| )([a-z][-a-z0-9._: ]+|(?:Apple)?WebKit)/((?:\\\\d+\\\\.)+\\\\d+)\");  // for unrecognized browser\n      var MATCH = VERSION.exec(xAGENT) || [\"\",\"\",\"\",\"unknown\",\"0.0\"];\n      HUB.Browser.name = (MATCH[1] != \"\" ? browser : (MATCH[3] || MATCH[5]));\n      HUB.Browser.version = MATCH[2] || MATCH[4] || MATCH[6];\n      break;\n    }\n  }};\n  \n  //\n  //  Initial browser-specific info (e.g., touch up version or name, check for MathPlayer, etc.)\n  //  Wrap in try/catch just in case of error (see issue #1155).\n  //\n  try {HUB.Browser.Select({\n    Safari: function (browser) {\n      var v = parseInt((String(browser.version).split(\".\"))[0]);\n      if (v > 85) {browser.webkit = browser.version}\n      if      (v >= 538) {browser.version = \"8.0\"}\n      else if (v >= 537) {browser.version = \"7.0\"}\n      else if (v >= 536) {browser.version = \"6.0\"}\n      else if (v >= 534) {browser.version = \"5.1\"}\n      else if (v >= 533) {browser.version = \"5.0\"}\n      else if (v >= 526) {browser.version = \"4.0\"}\n      else if (v >= 525) {browser.version = \"3.1\"}\n      else if (v >  500) {browser.version = \"3.0\"}\n      else if (v >  400) {browser.version = \"2.0\"}\n      else if (v >   85) {browser.version = \"1.0\"}\n      browser.webkit = (navigator.appVersion.match(/WebKit\\/(\\d+)\\./))[1];\n      browser.isMobile = (navigator.appVersion.match(/Mobile/i) != null);\n      browser.noContextMenu = browser.isMobile;\n    },\n    Firefox: function (browser) {\n      if ((browser.version === \"0.0\" || AGENT.match(/Firefox/) == null) &&\n           navigator.product === \"Gecko\") {\n        var rv = AGENT.match(/[\\/ ]rv:(\\d+\\.\\d.*?)[\\) ]/);\n        if (rv) {browser.version = rv[1]}\n        else {\n          var date = (navigator.buildID||navigator.productSub||\"0\").substr(0,8);\n          if      (date >= \"20111220\") {browser.version = \"9.0\"}\n          else if (date >= \"20111120\") {browser.version = \"8.0\"}\n          else if (date >= \"20110927\") {browser.version = \"7.0\"}\n          else if (date >= \"20110816\") {browser.version = \"6.0\"}\n          else if (date >= \"20110621\") {browser.version = \"5.0\"}\n          else if (date >= \"20110320\") {browser.version = \"4.0\"}\n          else if (date >= \"20100121\") {browser.version = \"3.6\"}\n          else if (date >= \"20090630\") {browser.version = \"3.5\"}\n          else if (date >= \"20080617\") {browser.version = \"3.0\"}\n          else if (date >= \"20061024\") {browser.version = \"2.0\"}\n        }\n      }\n      browser.isMobile = (navigator.appVersion.match(/Android/i) != null ||\n                          AGENT.match(/ Fennec\\//) != null ||\n                          AGENT.match(/Mobile/) != null);\n    },\n    Chrome: function (browser) {\n      browser.noContextMenu = browser.isMobile = !!navigator.userAgent.match(/ Mobile[ \\/]/);\n    },\n    Opera: function (browser) {browser.version = opera.version()},\n    Edge: function (browser) {\n      browser.isMobile = !!navigator.userAgent.match(/ Phone/);\n    },\n    MSIE: function (browser) {\n      browser.isMobile = !!navigator.userAgent.match(/ Phone/);\n      browser.isIE9 = !!(document.documentMode && (window.performance || window.msPerformance));\n      MathJax.HTML.setScriptBug = !browser.isIE9 || document.documentMode < 9;\n      MathJax.Hub.msieHTMLCollectionBug = (document.documentMode < 9);\n      //\n      //  MathPlayer doesn't function properly in IE10, and not at all in IE11,\n      //  so don't even try to load it.\n      //\n      if (document.documentMode < 10 && !STARTUP.params.NoMathPlayer) {\n        try {\n          new ActiveXObject(\"MathPlayer.Factory.1\");\n          browser.hasMathPlayer = true;\n        } catch (err) {}\n        try {\n          if (browser.hasMathPlayer) {\n            var mathplayer = document.createElement(\"object\");\n            mathplayer.id = \"mathplayer\"; mathplayer.classid = \"clsid:32F66A20-7614-11D4-BD11-00104BD3F987\";\n            HEAD.appendChild(mathplayer);\n            document.namespaces.add(\"m\",\"http://www.w3.org/1998/Math/MathML\");\n            browser.mpNamespace = true;\n            if (document.readyState && (document.readyState === \"loading\" ||\n                                        document.readyState === \"interactive\")) {\n              document.write('<?import namespace=\"m\" implementation=\"#MathPlayer\">');\n              browser.mpImported = true;\n            }\n          } else {\n            //  Adding any namespace avoids a crash in IE9 in IE9-standards mode\n            //  (any reference to document.namespaces before document.readyState is \n            //   \"complete\" causes an \"unspecified error\" to be thrown)\n            document.namespaces.add(\"mjx_IE_fix\",\"http://www.w3.org/1999/xlink\");\n          }\n        } catch (err) {}\n      }\n    }\n  });} catch (err) {\n    console.error(err.message);\n  }\n  HUB.Browser.Select(MathJax.Message.browsers);\n\n  if (BASE.AuthorConfig && typeof BASE.AuthorConfig.AuthorInit === \"function\") {BASE.AuthorConfig.AuthorInit()}\n  HUB.queue = BASE.Callback.Queue();\n  HUB.queue.Push(\n    [\"Post\",STARTUP.signal,\"Begin\"],\n    [\"Config\",STARTUP],\n    [\"Cookie\",STARTUP],\n    [\"Styles\",STARTUP],\n    [\"Message\",STARTUP],\n    function () {\n      // Do Jax and Extensions in parallel, but wait for them all to complete\n      var queue = BASE.Callback.Queue(\n        STARTUP.Jax(),\n        STARTUP.Extensions()\n      );\n      return queue.Push({});\n    },\n    [\"Menu\",STARTUP],\n    STARTUP.onLoad(),\n    function () {MathJax.isReady = true}, // indicates that MathJax is ready to process math\n    [\"Typeset\",STARTUP],\n    [\"Hash\",STARTUP],\n    [\"MenuZoom\",STARTUP],\n    [\"Post\",STARTUP.signal,\"End\"]\n  );\n  \n})(\"MathJax\");\n\n}}\n"]}]}